(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    729318,      13701]
NotebookOptionsPosition[    727596,      13650]
NotebookOutlinePosition[    727951,      13666]
CellTagsIndexPosition[    727908,      13663]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "is", " ", "my", " ", "system", " ", "used", " ", "in", " ", 
     "paper"}], ",", " ", 
    RowBox[{"signal", " ", "as", " ", "perturbation"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"hill", "=", "1000"}], ";", 
    RowBox[{"t0", "=", "10"}], ";", 
    RowBox[{"maxTime", "=", "12"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", "3"}], ";", 
    RowBox[{"\[Tau]", "=", "0.01"}], ";", 
    RowBox[{"\[Alpha]1", "=", "1"}], ";", 
    RowBox[{"\[Alpha]2", "=", "1"}], ";", 
    RowBox[{"\[Epsilon]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ds", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s0", "=", "0.04"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w", "=", "17"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", "t_", "]"}], ":=", 
     RowBox[{"s0", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"ds", "*", 
         RowBox[{
          RowBox[{"t", "^", "hill"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"t0", "^", "hill"}], "+", 
            RowBox[{"t", "^", "hill"}]}], ")"}]}]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", "t_", "]"}], ":=", 
      RowBox[{"s0", "+", 
       RowBox[{"ds", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"w", " ", "t"}], "]"}]}]}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"(", 
     RowBox[{"0.5", "+", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", "t", "]"}], "^", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"s", "[", "t", "]"}], "^", "2"}]}], ")"}]}]}], ")"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"basal", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"timeCourse", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Tau]", " ", 
          RowBox[{
           RowBox[{"p", "'"}], "[", "t", "]"}]}], "\[Equal]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], "  ", 
           RowBox[{
            RowBox[{"p", "[", "t", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"p", "[", "t", "]"}], "^", 
               RowBox[{"(", 
                RowBox[{"2", " ", "h"}], ")"}]}]}], ")"}]}]}], "+", 
          RowBox[{"4", "  ", 
           RowBox[{
            RowBox[{"z", "[", "t", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], " ", ")"}]}]}], 
          "-", 
          RowBox[{"2", 
           RowBox[{
            RowBox[{
             RowBox[{"p", "[", "t", "]"}], "^", "2"}], "/", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], ")"}]}]}]}]}], ",",
         " ", 
        RowBox[{
         RowBox[{"\[Tau]", " ", 
          RowBox[{
           RowBox[{"y", "'"}], "[", "t", "]"}]}], "\[Equal]", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{
            RowBox[{"p", "[", "t", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"p", "[", "t", "]"}], "^", 
               RowBox[{"(", 
                RowBox[{"2", " ", "h"}], ")"}]}]}], ")"}]}]}], "-", " ", 
          RowBox[{
           RowBox[{"y", "[", "t", "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Alpha]1", " ", 
              RowBox[{"s", "[", "t", "]"}]}], "+", "basal"}], ")"}]}], "-", 
          RowBox[{"\[Epsilon]", " ", 
           RowBox[{"y", "[", "t", "]"}]}]}]}], ",", 
        RowBox[{
         RowBox[{"\[Tau]", " ", 
          RowBox[{
           RowBox[{"z", "'"}], "[", "t", "]"}]}], "\[Equal]", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "[", "t", "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Alpha]1", " ", 
              RowBox[{"s", "[", "t", "]"}]}], "+", "basal"}], ")"}]}], "-", 
          RowBox[{"2", "  ", 
           RowBox[{
            RowBox[{"z", "[", "t", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], " ", ")"}]}]}]}]}],
         ",", 
        RowBox[{
         RowBox[{"\[Tau]", " ", 
          RowBox[{
           RowBox[{"a", "'"}], "[", "t", "]"}]}], "==", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{
            RowBox[{"z", "[", "t", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], " ", ")"}]}]}], 
          "-", 
          RowBox[{"\[Alpha]2", " ", 
           RowBox[{"a", "[", "t", "]"}]}]}]}], ",", 
        RowBox[{
         RowBox[{"p", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"s0", "+", "basal"}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{"z", "[", "0", "]"}], "==", "1"}], ",", 
        RowBox[{
         RowBox[{"a", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}], ",", 
        RowBox[{"z", "[", "t", "]"}], ",", 
        RowBox[{"a", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pSol", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"p", "[", "t", "]"}], "/.", "timeCourse"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ySol", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"y", "[", "t", "]"}], "/.", "timeCourse"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"zSol", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"z", "[", "t", "]"}], "/.", "timeCourse"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"aSol", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"a", "[", "t", "]"}], "/.", "timeCourse"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PYKflux", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"z", "[", "t", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], ")"}]}], "/.", 
     "timeCourse"}]}], "\[IndentingNewLine]", 
   RowBox[{"a0", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"pSol", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"{", 
         RowBox[{"t0", "-", "3"}], "}"}]}], "}"}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{"ATP", " ", "concentration"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"y0", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ySol", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"{", 
         RowBox[{"t0", "-", "3"}], "}"}]}], "}"}]}], "]"}]}], 
   RowBox[{"(*", 
    RowBox[{"intermediate", " ", 
     RowBox[{"metabolite", ":", " ", "TRIO"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"z0", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"zSol", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"{", 
         RowBox[{"t0", "-", "3"}], "}"}]}], "}"}]}], "]"}]}], 
   RowBox[{"(*", 
    RowBox[{"intermediate", " ", 
     RowBox[{"metabolite", ":", " ", "TRIO"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"f0", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"aSol", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"{", 
         RowBox[{"t0", "-", "3"}], "}"}]}], "}"}]}], "]"}]}], 
   RowBox[{"(*", 
    RowBox[{"intermediate", " ", 
     RowBox[{"metabolite", ":", " ", "TRIO"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s", "[", "t", "]"}], "-", "s0"}], ")"}], "/", "s0"}]}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pSol", "[", "t", "]"}], "-", "a0"}], ")"}], "/", "a0"}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ySol", "[", "t", "]"}], "-", "y0"}], ")"}], "/", "y0"}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"zSol", "[", "t", "]"}], "-", "z0"}], ")"}], "/", "z0"}], 
       ",", 
       RowBox[{"3", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"aSol", "[", "t", "]"}], "-", "f0"}], ")"}], "/", 
         "f0"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "9", ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Lighter", "[", "Black", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Orange", ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<0.2 \[Delta]s\>\"", ",", "\"\<\[Delta]p\>\"", ",", 
        "\"\<0.1 \[Delta]y\>\"", ",", "\"\<\[Delta]z\>\"", ",", 
        "\"\<\[Delta]a\>\""}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pSol", "[", "t", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "9", ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<p\>\"", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"zSol", "[", "t", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "9", ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<z\>\"", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ySol", "[", "t", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "9", ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<y\>\"", "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"aSol", "[", "t", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "9", ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<a\>\"", "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"PYKflux", "[", "t", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "9.5", ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<PYK flux\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.76938325344873*^9, 3.769383276565763*^9}, {
   3.769385820152609*^9, 3.769385820229648*^9}, 3.769385872921975*^9, {
   3.769385914458662*^9, 3.7693859523311*^9}, {3.7693859969729633`*^9, 
   3.76938602666897*^9}, {3.7693860602811527`*^9, 3.769386083358945*^9}, {
   3.7693890971069736`*^9, 3.769389097155828*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.766395587812722, 0.8719429581164664}, {
                    1.824140840461274, 0.8727224140727362}, {
                    1.952149253799486, 0.873489685192562}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQPfHm2blzjzI4XCl+uXjB59f287cmM6TdZXRo8l33
KPvVa3uhzH97rmQyOyyVc6n2B/KPzXDK+ibO6nAi6euOF+9f2/+M0j/nv5LN
YVVMz/39b1/b5848qhQTw+GQZifs//f1a3vvHSxvitm5HE4f2K7gB5Rfkfkm
+/BUbgeHxn3Cz4B8t+m1d4668jpcltz5TAPITw7fzsxwk89B/t8cIU0g/4Hn
2d5vbgIOgX+Pfy0H8p0jhK8UyQo6CHvtlEwH8p+tX/u166mgw/Ta7XedgfyV
R+f01+wTcpj5K689BMhfo/KAhatT2KH414z+OCD/yedyk7n+Ig6nRL9MDwby
bRpT7nCqizqobDn6BMS/Er40XuiDqEN79Pf4CCC/541V9JeTYg6MVcnJ4UB+
5UcVwTvzxR2atbKuhgL5y+yTF8WnSzh8TvwcGAbkf/b+tnqPvaTDnKkTuUHq
6xfenbCVU8qh9G1fNEjeMV3SYMt5KQfxFbMng/jKr1e69yyTdoi0ZfoI4rvs
6LNiyJdxOPu8QBnEb3M+sdTXQ9Zh3olvO0B8domwN2bCcg7yXAevg/h7Yyze
qt6Sc8h5UsYE4k+Jz097t1He4fmVM0wg+6+G1sautFVwWHT4/FaQ/Ieot84n
Vik4mEzWeANyv9qMdvZXoooO8+573AfJ//l5esfNSkUH5hiHSyD+o11WambP
FB04NX7/A6nPWBDcmOCt5KB5fcNbkDzHvmk7e9cpOfju5poP4u+wYlmnLqXs
0LI7xwgsf0d6Qn+dskM4x/1nIH7GnVi9lNfKDhWp4VeugeJPL+j+na/KDnPO
Kb3+8uy1PQCgZ057
                    "]], 
                    
                    LineBox[{{11.334587145359697`, 0.873489685192562}, {
                    11.389750489311766`, 0.8724611174356053}, {
                    11.60174341108313, 0.872849548175842}, {
                    11.678631687913523`, 0.873489685192562}}], 
                    
                    LineBox[{{0.14339864793337193`, 0.873489685192562}, {
                    0.14515185088115654`, 0.8719429581164664}}], 
                    
                    LineBox[{{0.4972215432015942, 0.8719429581164664}, {
                    0.5044572412972024, 0.873489685192562}}], 
                    
                    LineBox[{{0.7454606461886608, 0.873489685192562}, {
                    0.7554460163945763, 0.8719429581164664}}], 
                    
                    LineBox[{{1.1173659199160113`, 0.8719429581164664}, {
                    1.1383557249170413`, 0.873489685192562}}], 
                    
                    LineBox[{{1.47977379046176, 0.873489685192562}, {
                    1.5476961184675395`, 0.8719429581164664}}], 
                    
                    LineBox[{{10.23881121061567, 0.8719429581164664}, {
                    10.252891690586164`, 0.873489685192562}}], 
                    
                    LineBox[{{10.583799532774384`, 0.873489685192562}, {
                    10.639567744463509`, 0.8719429581164664}}], 
                    
                    LineBox[{{10.888777700896794`, 0.8719429581164664}, {
                    10.938636972437573`, 0.873489685192562}}]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.87175}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 12.}, {0.8719429581164664, 
                    0.873489685192562}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.766395587812722, 0.8719429581164664}, {
                    1.824140840461274, 0.8727224140727362}, {
                    1.952149253799486, 0.873489685192562}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQPfHm2blzjzI4XCl+uXjB59f287cmM6TdZXRo8l33
KPvVa3uhzH97rmQyOyyVc6n2B/KPzXDK+ibO6nAi6euOF+9f2/+M0j/nv5LN
YVVMz/39b1/b5848qhQTw+GQZifs//f1a3vvHSxvitm5HE4f2K7gB5Rfkfkm
+/BUbgeHxn3Cz4B8t+m1d4668jpcltz5TAPITw7fzsxwk89B/t8cIU0g/4Hn
2d5vbgIOgX+Pfy0H8p0jhK8UyQo6CHvtlEwH8p+tX/u166mgw/Ta7XedgfyV
R+f01+wTcpj5K689BMhfo/KAhatT2KH414z+OCD/yedyk7n+Ig6nRL9MDwby
bRpT7nCqizqobDn6BMS/Er40XuiDqEN79Pf4CCC/541V9JeTYg6MVcnJ4UB+
5UcVwTvzxR2atbKuhgL5y+yTF8WnSzh8TvwcGAbkf/b+tnqPvaTDnKkTuUHq
6xfenbCVU8qh9G1fNEjeMV3SYMt5KQfxFbMng/jKr1e69yyTdoi0ZfoI4rvs
6LNiyJdxOPu8QBnEb3M+sdTXQ9Zh3olvO0B8domwN2bCcg7yXAevg/h7Yyze
qt6Sc8h5UsYE4k+Jz097t1He4fmVM0wg+6+G1sautFVwWHT4/FaQ/Ieot84n
Vik4mEzWeANyv9qMdvZXoooO8+573AfJ//l5esfNSkUH5hiHSyD+o11WambP
FB04NX7/A6nPWBDcmOCt5KB5fcNbkDzHvmk7e9cpOfju5poP4u+wYlmnLqXs
0LI7xwgsf0d6Qn+dskM4x/1nIH7GnVi9lNfKDhWp4VeugeJPL+j+na/KDnPO
Kb3+8uy1PQCgZ057
                    "]], 
                    
                    LineBox[{{11.334587145359697`, 0.873489685192562}, {
                    11.389750489311766`, 0.8724611174356053}, {
                    11.60174341108313, 0.872849548175842}, {
                    11.678631687913523`, 0.873489685192562}}], 
                    
                    LineBox[{{0.14339864793337193`, 0.873489685192562}, {
                    0.14515185088115654`, 0.8719429581164664}}], 
                    
                    LineBox[{{0.4972215432015942, 0.8719429581164664}, {
                    0.5044572412972024, 0.873489685192562}}], 
                    
                    LineBox[{{0.7454606461886608, 0.873489685192562}, {
                    0.7554460163945763, 0.8719429581164664}}], 
                    
                    LineBox[{{1.1173659199160113`, 0.8719429581164664}, {
                    1.1383557249170413`, 0.873489685192562}}], 
                    
                    LineBox[{{1.47977379046176, 0.873489685192562}, {
                    1.5476961184675395`, 0.8719429581164664}}], 
                    
                    LineBox[{{10.23881121061567, 0.8719429581164664}, {
                    10.252891690586164`, 0.873489685192562}}], 
                    
                    LineBox[{{10.583799532774384`, 0.873489685192562}, {
                    10.639567744463509`, 0.8719429581164664}}], 
                    
                    LineBox[{{10.888777700896794`, 0.8719429581164664}, {
                    10.938636972437573`, 0.873489685192562}}]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.87175}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 12.}, {0.8719429581164664, 
                    0.873489685192562}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwd0H9Q03UYB/Ah0MZIZWxjjDHZ2C8iBL5EBOPH94kNAobbRSKDNiGGGlKt
WR63ctGUKDiHaGrj0iO9JJeCFlsOgemdB/EjqVP8AxgdinghP8TI6VSkz3d/
fO5zr3vez+ee58Ov1BftWEcikTLQIe4+0+tjn924jC+dNQUmMTBIxeTDXOoQ
XjYd1fqrHoMCe9xeO2sC35/1XulQJAZPHmZOBVfO4O5al+mBHINPgxuLaqxz
uOiGjunVYOClZuaMxC7jya+6DddzMEhxNCj/Uq3gNeO2+i6Uf1QiSEt3evAS
3t/Zu1UYfNNDW98X8hQ3xly8ZdyCAVv+trIzYRUP+TdM6sjD4Pgdg3NdPgmi
bEGl3gIM2hw60s4pPzjdt/ixuhCD0OoXvWPV/rDxXPHdAVQfsGbv9rACIXjO
SLuN7C1LGFXZXgI1t2vSosDgw9b+aI2GApN1ObFbkRXOgIVPyFQorKXIOMhn
qxdqrh0LBrr2So0MOfc7k7s/Zz1MMPRBKmRdySV/0vgGSPjRdSkVeTr/usWT
GwLh5PMVacgyNX1sD5cGH/xhS8pGvneh41HTLA38wvyqANnWf+LQPlco0POV
uZnI54XTAdRGOtQ38ak48t2V2uSTKgYwzL3/EM4wV7mDJEzoZDtmspDHSs6U
hy4zQWmgThI+uCB997+hMNgxWppF5I0PhTR3GwsCZc1phNtx3enyXeHw036G
P+EVhedcL86GUXsxjXDdqakWR1AEfGmeiyH85i52ov3PCBDLj/jmEczb3jrY
zoFK6lUeYbmzWUrSR8LNCwf4hBtkg2e25HGhyWolEyaHb1tIoW8CY486lnCf
JnVRNLEJPIUZHMJHy/U7l36JAm1Lh2+eW8UmrS2TB8sNI0mEl8sWZYM/8+A5
UxFFWGz9mnyfyYcluXaN2Pe5d8Q5buTDY3JzIlG/c1kqTrnHB4orz5d//4d3
zBWKaFCY7b55KK7j3ZbOaEhMN2wm7JQGdEoiBPC5ZV+Yr+7mtBz6QgCNIhbT
1+/WxlfNC6Bj6+GC15BnGMO29G1CkNcPf1TGweCFYTr0drcQ6h+0PeuOweCV
eH7qikgE3w+1B1x9A/3vhpcVN5tEcJ9k7vXfjMGokh/BeyKCPezAY10of22g
YkCvE8PSYYVNE4+BWldQYfldDPOnGlanEjBY3b79N1ayBNo6hEWP4zDIrot8
qm+VwGzPlaNc9B5lNs67tiaBrwYvfmtB/f8DjOp9Ig==
                    "]]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 17.04}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 12.}, {17.07888826673382, 
                    17.436318941385572`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwd0H9Q03UYB/Ah0MZIZWxjjDHZ2C8iBL5EBOPH94kNAobbRSKDNiGGGlKt
WR63ctGUKDiHaGrj0iO9JJeCFlsOgemdB/EjqVP8AxgdinghP8TI6VSkz3d/
fO5zr3vez+ee58Ov1BftWEcikTLQIe4+0+tjn924jC+dNQUmMTBIxeTDXOoQ
XjYd1fqrHoMCe9xeO2sC35/1XulQJAZPHmZOBVfO4O5al+mBHINPgxuLaqxz
uOiGjunVYOClZuaMxC7jya+6DddzMEhxNCj/Uq3gNeO2+i6Uf1QiSEt3evAS
3t/Zu1UYfNNDW98X8hQ3xly8ZdyCAVv+trIzYRUP+TdM6sjD4Pgdg3NdPgmi
bEGl3gIM2hw60s4pPzjdt/ixuhCD0OoXvWPV/rDxXPHdAVQfsGbv9rACIXjO
SLuN7C1LGFXZXgI1t2vSosDgw9b+aI2GApN1ObFbkRXOgIVPyFQorKXIOMhn
qxdqrh0LBrr2So0MOfc7k7s/Zz1MMPRBKmRdySV/0vgGSPjRdSkVeTr/usWT
GwLh5PMVacgyNX1sD5cGH/xhS8pGvneh41HTLA38wvyqANnWf+LQPlco0POV
uZnI54XTAdRGOtQ38ak48t2V2uSTKgYwzL3/EM4wV7mDJEzoZDtmspDHSs6U
hy4zQWmgThI+uCB997+hMNgxWppF5I0PhTR3GwsCZc1phNtx3enyXeHw036G
P+EVhedcL86GUXsxjXDdqakWR1AEfGmeiyH85i52ov3PCBDLj/jmEczb3jrY
zoFK6lUeYbmzWUrSR8LNCwf4hBtkg2e25HGhyWolEyaHb1tIoW8CY486lnCf
JnVRNLEJPIUZHMJHy/U7l36JAm1Lh2+eW8UmrS2TB8sNI0mEl8sWZYM/8+A5
UxFFWGz9mnyfyYcluXaN2Pe5d8Q5buTDY3JzIlG/c1kqTrnHB4orz5d//4d3
zBWKaFCY7b55KK7j3ZbOaEhMN2wm7JQGdEoiBPC5ZV+Yr+7mtBz6QgCNIhbT
1+/WxlfNC6Bj6+GC15BnGMO29G1CkNcPf1TGweCFYTr0drcQ6h+0PeuOweCV
eH7qikgE3w+1B1x9A/3vhpcVN5tEcJ9k7vXfjMGokh/BeyKCPezAY10of22g
YkCvE8PSYYVNE4+BWldQYfldDPOnGlanEjBY3b79N1ayBNo6hEWP4zDIrot8
qm+VwGzPlaNc9B5lNs67tiaBrwYvfmtB/f8DjOp9Ig==
                    "]]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 17.04}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 12.}, {17.07888826673382, 
                    17.436318941385572`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"z", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.7841713065157405`, 0.9133670359906966}, {
                    1.824140840461274, 0.9137814820561745}, {
                    1.9488294984598757`, 0.9145551495115684}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQvYazvEjvJYNDuo+hJqfLW/v5W5MZ0u4yOkxKb5vr
Z/vWXijz354rmcwOQjfY5travLU/NsMp65s4q8PF+N08UY5v7X9G6Z/zX8nm
cE9nV+ol+7f2uTOPKsXEcDic6uDKk7B7a++9g+VNMTuXQ/DlzWqqQPkVmW+y
D0/ldpiX3/flGJDvNr32zlFXXofO7SealYH85PDtzAw3+Rw2HnF6LgrkP/A8
2/vNTcCBTVusKBbId44QvlIkK+iQtkVgfTCQ/2z92q9dTwUdnu3lO2ME5K88
Oqe/Zp+Qw92/M57ZA/lrVB6wcHUKO4TxC3N6AflPPpebzPUXcYjuWrrOAci3
aUy5w6ku6sDg8TIIxL8SvjRe6IOow8x0tggXIL/njVX0l5NiDkfd2zY6A/mV
H1UE78wXd/iiudHdCchfZp+8KD5dwuHlntipIP5n72+r99hLOnB5THQDqa9f
eHfCVk4phz2RqdtA8o7pkgZbzks5SERbXgPxlV+vdO9ZJu1wP1PBAqTeZUef
FUO+jMNHC+t6kHyb84mlvh6yDjc+CH0D8dklwt6YCcs5GN51VQep3xtj8Vb1
lpwDe9j8WJD8lPj8tHcb5R1UTtuYgeSvhtbGrrRVcHBtecAL4n+Ieut8YpWC
Q8wLJh+QerUZ7eyvRBUdLuv0CoPk//w8veNmpaJDyXNlNRD/0S4rNbNnig7X
O37FgNRnLAhuTPBWcvh7aL0qSJ5j37SdveuUHFYIc4Pdt8OKZZ26lLKD7sEP
rSA+xx3pCf11yg4yIqfB7s24E6uX8lrZ4YfVtbdvgPzHhz07Iz8rO7gnzWr0
tXprDwBnkCFD
                    "]], 
                    
                    LineBox[{{11.347834771184283`, 0.9145551495115684}, {
                    11.389750489311766`, 0.9138770232339088}, {
                    11.60174341108313, 0.9140075095118672}, {
                    11.674288998015228`, 0.9145551495115684}}], 
                    
                    LineBox[{{0.13218009560506616`, 0.9145551495115684}, {
                    0.13401806145374726`, 0.9133670359906966}}], 
                    
                    LineBox[{{0.5096643659128315, 0.9133670359906966}, {
                    0.5154090631739856, 0.9145551495115684}}], 
                    
                    LineBox[{{0.7512647331438763, 0.9145551495115684}, {
                    0.760523104773867, 0.9133670359906966}}], 
                    
                    LineBox[{{1.1264604110521188`, 0.9133670359906966}, {
                    1.1444213722169378`, 0.9145551495115684}}], 
                    
                    LineBox[{{1.497530477057162, 0.9145551495115684}, {
                    1.5534291311336654`, 0.9133670359906966}}], 
                    
                    LineBox[{{10.250700198771348`, 0.9133670359906966}, {
                    10.262162657252892`, 0.9145551495115684}}], 
                    
                    LineBox[{{10.611379842883894`, 0.9145551495115684}, {
                    10.652027864931085`, 0.9133670359906966}}], 
                    
                    LineBox[{{10.902560078335174`, 0.9133670359906966}, {
                    10.94740592938314, 0.9145551495115684}}]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.91325}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 12.}, {0.9133670359906966, 
                    0.9145551495115684}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.7841713065157405`, 0.9133670359906966}, {
                    1.824140840461274, 0.9137814820561745}, {
                    1.9488294984598757`, 0.9145551495115684}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQvYazvEjvJYNDuo+hJqfLW/v5W5MZ0u4yOkxKb5vr
Z/vWXijz354rmcwOQjfY5travLU/NsMp65s4q8PF+N08UY5v7X9G6Z/zX8nm
cE9nV+ol+7f2uTOPKsXEcDic6uDKk7B7a++9g+VNMTuXQ/DlzWqqQPkVmW+y
D0/ldpiX3/flGJDvNr32zlFXXofO7SealYH85PDtzAw3+Rw2HnF6LgrkP/A8
2/vNTcCBTVusKBbId44QvlIkK+iQtkVgfTCQ/2z92q9dTwUdnu3lO2ME5K88
Oqe/Zp+Qw92/M57ZA/lrVB6wcHUKO4TxC3N6AflPPpebzPUXcYjuWrrOAci3
aUy5w6ku6sDg8TIIxL8SvjRe6IOow8x0tggXIL/njVX0l5NiDkfd2zY6A/mV
H1UE78wXd/iiudHdCchfZp+8KD5dwuHlntipIP5n72+r99hLOnB5THQDqa9f
eHfCVk4phz2RqdtA8o7pkgZbzks5SERbXgPxlV+vdO9ZJu1wP1PBAqTeZUef
FUO+jMNHC+t6kHyb84mlvh6yDjc+CH0D8dklwt6YCcs5GN51VQep3xtj8Vb1
lpwDe9j8WJD8lPj8tHcb5R1UTtuYgeSvhtbGrrRVcHBtecAL4n+Ieut8YpWC
Q8wLJh+QerUZ7eyvRBUdLuv0CoPk//w8veNmpaJDyXNlNRD/0S4rNbNnig7X
O37FgNRnLAhuTPBWcvh7aL0qSJ5j37SdveuUHFYIc4Pdt8OKZZ26lLKD7sEP
rSA+xx3pCf11yg4yIqfB7s24E6uX8lrZ4YfVtbdvgPzHhz07Iz8rO7gnzWr0
tXprDwBnkCFD
                    "]], 
                    
                    LineBox[{{11.347834771184283`, 0.9145551495115684}, {
                    11.389750489311766`, 0.9138770232339088}, {
                    11.60174341108313, 0.9140075095118672}, {
                    11.674288998015228`, 0.9145551495115684}}], 
                    
                    LineBox[{{0.13218009560506616`, 0.9145551495115684}, {
                    0.13401806145374726`, 0.9133670359906966}}], 
                    LineBox[{{0.5096643659128315, 0.9133670359906966}, {
                    0.5154090631739856, 0.9145551495115684}}], 
                    
                    LineBox[{{0.7512647331438763, 0.9145551495115684}, {
                    0.760523104773867, 0.9133670359906966}}], 
                    
                    LineBox[{{1.1264604110521188`, 0.9133670359906966}, {
                    1.1444213722169378`, 0.9145551495115684}}], 
                    
                    LineBox[{{1.497530477057162, 0.9145551495115684}, {
                    1.5534291311336654`, 0.9133670359906966}}], 
                    
                    LineBox[{{10.250700198771348`, 0.9133670359906966}, {
                    10.262162657252892`, 0.9145551495115684}}], 
                    
                    LineBox[{{10.611379842883894`, 0.9145551495115684}, {
                    10.652027864931085`, 0.9133670359906966}}], 
                    
                    LineBox[{{10.902560078335174`, 0.9133670359906966}, {
                    10.94740592938314, 0.9145551495115684}}]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.91325}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 12.}, {0.9133670359906966, 
                    0.9145551495115684}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"a", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.1488852156519525`, 1.0370490731907847`}, {
                    1.206985766165713, 1.037115793416453}, {1.408758081179871,
                     1.0379956046845766`}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAWIQfZb7/gQF3+/2GoYV7gtnf7Dv2C3Iu1fgl70Sm3vl
2lkf7CVdAv3W6f+1v9DVIWQ784P9tEeFO5g8GRzmJWjt0QDKz9+azJB2l9Gh
de104VYgXyjz354rmcwOuXPLMr4A1R+b4ZT1TZzVoeIQ428eoPzPKP1z/ivZ
HNIeJMxyBfJzZx5VionhcDg8T+yfNpDvvYPlTTE7l0NXgZyYNJC/IvNN9uGp
3A7ndGZrgeTdptfeOerK62AzqSlaF8hPDt/OzHCTz6F9Z2OAKpD/wPNs7zc3
AQfWnDXJakC+c4TwlSJZQYcXnzhTNIH8Z+vXfu16Kujg49kYC3L/yqNz+mv2
CTlEOFlnqwP5a1QesHB1CjvMyIzVBMk/+VxuMtdfxEFg6+VoEN+mMeUOp7qo
g5FT1z+Q+ivhS+OFPog6FL2cxg6S73ljFf3lpJjDGfttGiB+5UcVwTvzxR0K
1Q4rgfjL7JMXxadLOOQYbxYA8T97f1u9x17SQUyxVxzEr194d8JWTikH3d96
ciC+Y7qkwZbzUg7L2a8Lg/jKr1e69yyTdti/6LIMiO+yo8+KIV/G4dD211Ig
fpvziaW+HrIOR15qgtWzS4S9MROWc2DZxKIA4u+NsXirekvOwXCFnwSIPyU+
P+3dRnmHE487hED8q6G1sSttFRyS9beA3fsh6q3ziVUKDnI9HZIgvtqMdvZX
oooOhv6zwO7/8/P0jpuVig7im4zA6h/tslIze6boIHV9F1h9xoLgxgRvJYcJ
5ofB7uHYN21n7zolh/KgDrB7dlixrFOXUnY4vkIK7H+OO9IT+uuUHX6ytYDd
l3EnVi/ltbJDcOiNMnMgXz/j9e9FPCoOFZa3jxyY/sEeANthOUs=
                    "]], 
                    
                    
                    LineBox[{{10.346436442621961`, 1.0370490731907847`}, {
                    10.363045301340204`, 1.0371733056192225`}, {
                    10.495030145894289`, 1.0379956046845766`}}], 
                    
                    LineBox[{{10.66351838430014, 1.0379956046845766`}, {
                    10.771143288824055`, 1.0374023755732107`}, {
                    10.984619919362924`, 1.0371699748481713`}, {
                    11.194212149919059`, 1.03769854346008}, {
                    11.389750489311766`, 1.03776809705762}, {
                    11.60174341108313, 1.0375195536597142`}, {
                    11.799682441691065`, 1.037563059111442}, {
                    11.999999796610169`, 1.0376800242151083`}}], 
                    
                    LineBox[{{0.6214675000839993, 1.0370490731907847`}, {
                    0.715980251022392, 1.0379956046845766`}}], 
                    
                    LineBox[{{0.8907819925392538, 1.0379956046845766`}, {
                    0.993239410968125, 1.0370490731907847`}}]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 1.03695}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 12.}, {1.0370490731907847`, 
                    1.0379956046845766`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.1488852156519525`, 1.0370490731907847`}, {
                    1.206985766165713, 1.037115793416453}, {1.408758081179871,
                     1.0379956046845766`}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAWIQfZb7/gQF3+/2GoYV7gtnf7Dv2C3Iu1fgl70Sm3vl
2lkf7CVdAv3W6f+1v9DVIWQ784P9tEeFO5g8GRzmJWjt0QDKz9+azJB2l9Gh
de104VYgXyjz354rmcwOuXPLMr4A1R+b4ZT1TZzVoeIQ428eoPzPKP1z/ivZ
HNIeJMxyBfJzZx5VionhcDg8T+yfNpDvvYPlTTE7l0NXgZyYNJC/IvNN9uGp
3A7ndGZrgeTdptfeOerK62AzqSlaF8hPDt/OzHCTz6F9Z2OAKpD/wPNs7zc3
AQfWnDXJakC+c4TwlSJZQYcXnzhTNIH8Z+vXfu16Kujg49kYC3L/yqNz+mv2
CTlEOFlnqwP5a1QesHB1CjvMyIzVBMk/+VxuMtdfxEFg6+VoEN+mMeUOp7qo
g5FT1z+Q+ivhS+OFPog6FL2cxg6S73ljFf3lpJjDGfttGiB+5UcVwTvzxR0K
1Q4rgfjL7JMXxadLOOQYbxYA8T97f1u9x17SQUyxVxzEr194d8JWTikH3d96
ciC+Y7qkwZbzUg7L2a8Lg/jKr1e69yyTdti/6LIMiO+yo8+KIV/G4dD211Ig
fpvziaW+HrIOR15qgtWzS4S9MROWc2DZxKIA4u+NsXirekvOwXCFnwSIPyU+
P+3dRnmHE487hED8q6G1sSttFRyS9beA3fsh6q3ziVUKDnI9HZIgvtqMdvZX
oooOhv6zwO7/8/P0jpuVig7im4zA6h/tslIze6boIHV9F1h9xoLgxgRvJYcJ
5ofB7uHYN21n7zolh/KgDrB7dlixrFOXUnY4vkIK7H+OO9IT+uuUHX6ytYDd
l3EnVi/ltbJDcOiNMnMgXz/j9e9FPCoOFZa3jxyY/sEeANthOUs=
                    "]], 
                    
                    
                    LineBox[{{10.346436442621961`, 1.0370490731907847`}, {
                    10.363045301340204`, 1.0371733056192225`}, {
                    10.495030145894289`, 1.0379956046845766`}}], 
                    
                    LineBox[{{10.66351838430014, 1.0379956046845766`}, {
                    10.771143288824055`, 1.0374023755732107`}, {
                    10.984619919362924`, 1.0371699748481713`}, {
                    11.194212149919059`, 1.03769854346008}, {
                    11.389750489311766`, 1.03776809705762}, {
                    11.60174341108313, 1.0375195536597142`}, {
                    11.799682441691065`, 1.037563059111442}, {
                    11.999999796610169`, 1.0376800242151083`}}], 
                    LineBox[{{0.6214675000839993, 1.0370490731907847`}, {
                    0.715980251022392, 1.0379956046845766`}}], 
                    
                    LineBox[{{0.8907819925392538, 1.0379956046845766`}, {
                    0.993239410968125, 1.0370490731907847`}}]}}}, {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 1.03695}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 12.}, {1.0370490731907847`, 
                    1.0379956046845766`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "12.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->("InterpolatingFunction[{{0., 12.}}, <>]"& )],
       
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False], "[", "t", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.769385957681671*^9, 3.769386032383911*^9, {3.76938606371821*^9, 
   3.769386085602303*^9}, 3.769387335332499*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0.8727220351029238`", "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.769385957681671*^9, 3.769386032383911*^9, {3.76938606371821*^9, 
   3.769386085602303*^9}, 3.7693873353636417`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "17.293930590480585`", "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.769385957681671*^9, 3.769386032383911*^9, {3.76938606371821*^9, 
   3.769386085602303*^9}, 3.769387335373006*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0.9139723776099896`", "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.769385957681671*^9, 3.769386032383911*^9, {3.76938606371821*^9, 
   3.769386085602303*^9}, 3.7693873353836327`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "1.0376358768990872`", "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.769385957681671*^9, 3.769386032383911*^9, {3.76938606371821*^9, 
   3.769386085602303*^9}, 3.7693873353955812`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1:eJxN1nk8VF8bAHBbhRSyR0JTIUqUkHvOtS8pS4SirFHWbEUlJLRbJilETEop
6iepyBClRLIvyRYhsiRR1HvuLO/kD/P5fp6zPOd57rkzsi5+Vu4cbGxswugf
7XNkGfqQw9kYf9y7tFOP/eOFh4e3TP7jwdDXB/vYWS7miayp5GR5n8I0+ewS
lrM8O9YL8bO86UvOznXSLJd87P/QDFgOSGlu3uvIsvAG2auGx1mWLxJIeJ7K
svuSx7yLn7EsYrlQ0t7BcsGRDCXh3ywH2c1IkiTW/N/3tk3qlWqyzNuV+XWD
Hcu/ObbqZP/jUfk3ySvtWX4fNKnDs5dlMp9uyuA+ls+otow5OrAcYndYr/kf
21ESv710ZNnk7Tr97fuZfqqtNfHs2qN/rCRqPq5wgOVV2v36N/9xX6Naargz
yzle0ZP7XFm+miBu1Mg0tUE77klemqkby2Fd+FT5P/bibDbSdGd5l/nC1PqD
zPXatVVS194Q9WB5xZedJos8Gca7tadVQ6a//+MBO15Tr0PM9fq0W8JvZPT9
42qK6g/7w8z1hrWfvn1l+uEf353Ym2nsxbDMqHaa6PiPMqbxce2L2qd3bPNm
rjelHe4idvPBP/aLuzez1odhi2ltpwfQLJ3pnh/alk2NN4V9Gfb/qa37y+Pn
eaZl5rXVZObNOP0YLljQJhnGZ4UxrcKOiXqTZieZnmXHliQW7zzkz9yPC5t9
Ypbdw3TPImykq2fW9gjDGtxYJ2fwrvdMV/Ng7xR4KIYBDA/xYaXm6XOlTHMJ
YA+CN5tvDWSYLIhlpFZR8pgmCWHx5fa/1gQxLC6CRX4ZM09lmk8MC1gWdWtF
MMNuEpibmujvs0zLSGE29nct2EMYPiaNyfPL1kQx/UcG+1V51YDrKLO+clht
2HLqGaYLSVimyhmtJceY+63HAgd/F8YxnayAGaYFbOINZdhKCZOwGs49zzS+
CRtd4kRaFsawyWasrLTlxiWmSWpYYuBOCYHjzPNtxdwVKpMSmLbdhml0ay0X
OsFwrya29MrDODLT6drYJ1N5TtGTDJdC7CFbxsmrTJN1sOgikVnxcIb99DBb
7wsB15k+YYApynGOSZ5iuMkIW2gN9UhnOMLSFKu/ONErHcGIr9yJZet5OGQy
vcoCC5nrapGNpJvaZomZ5FtbZjOMU3djUu41NaQoRrzdBhtfqWuYw/RmO6yi
vpi6/jRjvYq92JWYTdtzmb7qiHlq5zxWjKY7c78Ttn1KSiWPaRkXbPmdpLvK
Zxj5CrphvY68a/MZxjcfxAqFIjNUYhjxy55Y7JufEo8YxpW8sL2nfMlqsXT3
CPhiylsHlj9muP6mP8b2dd9Z9TjGfM8ArDGzgbOYaYcgLGePSbjmWcZ54kKw
UD7q7DOG8bFjmFmFeqD2Obqdko5jq4/dHytlOCI6HJtSJnnC83SL90ZgVf3X
+6gM4/ejsJRrgo66F+gWyI3GvMzjWl8ybPcxBgOL/loaXKRbw/QsJvg8+N0r
hovnzmOf/UcNjS8x4tOXsCfrXMvfMFwvnYCd+9i+fcdlupsmEjHHRIuidwwH
TZMxFePXKrviGflvvIpx/sHuvWe4jXINa/mvcK1lAuM8+9Ow3EMbMhsYnnfO
wE6szlppncioz76bmHmz+JVmhhvUsjG585f5bZPofoTdwn7gi8+1Mcx76jZW
PXOCay+Z7qKFXCw173t4J8Py1DzM1+XwnMMVuj1r8zFcvDfwE8PNyQ8xoTrb
bweS6X4Z9B/2Z0/tizaG9Z0eYyPdupctr9K99cQTrMWz+MBbhg/UPsUqJpVV
9FLo5rYvwR6EZbOVMNxBKsOucUp82HKN5ohsyXIs+sKlm/cZTqypwPxFuALW
XadbJKcSc7gRqptBN9vu/FeY0frxFeKpdPd9rcZUC9z64xl+61SDSWt2/MeT
RvdjoTqMt8I8Oopu3OpMPfbDtMr6N91UxXUNWE+j1tqgdPp49olG7J1DwY9R
hscHm7HigbWv3G8w+snfhmX7piZ/ojtCwbcDu/RTwMM2g75eAXcXFhYRs62e
brzqczd2kGd+iUkmPR4Q3YtZJR5pK6ebTQj0Y0Dyyx2tmzTLrF0zgClQHEL/
oztzaNsXTFi5wUQpiz5fKHIYYysyWnmLbryWcxQbBaUjq7Lp4x9VfcPaXqs+
T6Y74vTgBFZpcec8P4XmCZP4KSy/fZVDHN3+I67T2HWXJCX2W/T9o9xnsJiv
3AuhdBckXZvFAoLCa6fo7hFa9BtzXPie7pVDnx90fwEzjjnk+5lu6h4zNrCF
vxs43qbvd2eQHcikWPO30C1ukssJ+GTfdu+6Q3PxhpRFYDYXFrymu+fukyWg
X/VxBJ5Ls8VZPl5Q91zR8inddzjT+MAz/UxZ1bs0V7d78YOcWpGpu3TzbdQR
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
JyL3yY6zPCoytfD3L8v/A28xx0A=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333]]], 
       LineBox[CompressedData["
1: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
5h/6vKTMv4J7NvA/CJ26JA==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0]], 
       LineBox[CompressedData["
1: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
XUEfLhzahPHOgcpIWy643J/h9R0d1BS70XsDF2g1L8nhzbi+O8op2QFcqB+a
6z5pK0V8zlcuNi7igl5y7JCCB67nnOzpRdYMfBo+Rtt4UeTZgq+Oort44DmR
4gLo38ltrD/Wux7RWq7pfqwPA+z76hAefFfUqdb1psh0Rbk/K2/wQGh562H5
gxSZc1CqYLidB6oC2+LPvhQRPl84z2ArCylh/h07D1PkyRTnaTe8WaCik8Vb
0N9nCxX1BLKgd31se+0RjC+0fe++wIJ5edaUIn+KvFn8qSLsBQuPXzYvNDpK
4X3tr7L3fyxY10/bkInm7I5RlutkYU3XrvTrxygi3u6zv/gvC1tFFRzPcHB9
s+IbDBbwoU3KOkA4ENd/MOqqgTEfPBWPXAtCO00+NWWA8OHg/Jc//LgUMfLQ
Wn5jPR++LxpR7kMXv3q+On4HH44u07Lex2B+vhkxtsV5lOcgiHPnUUSht9fv
DY8P/9ZlwDu0K52plhHKh5CtjT3OLEVe2/R7r4jkw5lDRsut+RS5+nUo+tQV
PkgGeHiWomsfKzQuu4nzalBk5NIgirj5TG+7kcGHxHOfPy4UUER2J988tpgP
qglyYrfQv3IirsiX8SEl2cJQ/TjGs+90jWMlH27nJIXOCqbI6pUHH759y4eF
xVWZ59C+oj8C1Rr4kP3k13uxEIp4ynjKqXzgQ2Gd8/x/aJfUaludbj6YtbBr
A09gfbihHG/6lQ+PO2/zfqLtvXcYjvbxwbrvferBUIo8XrTql9cPPlT9mvK6
Gy1mHPQwfIgPa/4Z/PY4iecrO9tz028+1Ipsn9uMntMa/uy/UT64SZ21W3+K
IpUnou+J/OXDfwqFfjVoJecYi65xPjwIazJeFUYRg2nJqQcn+BD3++9YKfra
vXj9W0JBELBPDYzDKSL/yHzmxUlBsOE/ixNZaJv0jazx5CAwXuW5ijpNkf7P
d66cRc8qODXjKvrzj783L6CHqNs1s87g+jPFn7qi6+Neno9E1zJ8+XL8vfsi
/RunnsV6Fabd24PPOx8gPYePXq/1sawc1+PXbdg2hH5xw0/W7R8f1m5Yn3ow
giIWrve3JuL7GD7jeHWiLwuOKcWP8UHGOHHh1kiKSPDDntqPYD7dfPi9Dn02
saQl/xfGZ9bH+w5RmG90R1PDT9yfk5O45WjTa/mG9wf4cO6XpvnycxTZ9txn
2+pePvjssZ2Uh1YO9JGP6+GD0zuvpzrRFFl2Nkblaicf9GzOnk5Bv2m9b7iz
jQ8S+ZmOyjFYj1zyZ7U186H6ws93YrGYP8Jl1nKYHxnCsxKD0eqTTkm/rObD
2aMm20fR++tN0gnmk70b291zHucbkzDdAyW437IivysvYv11qVvRkMyH9BPa
JSvjKFI/e4nR1Ut8CBu0FxSggzzKPHRi+WBbd070VjxFzA+mW14K4UNFrJLi
qUvYv+4/0O734EPqZLOW8Uv/7x/TmiZv4sMJv+3JxxKx/6k+8Ol24oPl2hva
e5IocjLbuEXVDPNRRtfU+gpFNmerLDomh/NcsPN4CXq8orhUfTofBD+OlBld
xflWwutd2gQLK948sNO8RpFbuvMLVn5l4WE02TL5OkUOnJYfqcH7Z5GUG+9x
KkU0Lp5bFrODBUZqs6flTTwP+37c3ryWBTOp7Y4VaA/d/VniNiyUSnqpVaXh
fNhWd8gU58cKCba8Jh3zW5k+3TrIg9czUmd8zKDIEe2AXc0neXBuxu0hj0yK
tHx3VVQJ5IHLjKwP7WjqHn/M05sHddML73VnYT1Wl34m4cyDBrHqdf3ZFBmW
zRR8V+RBh+hQ0vh9jNfBNJXt2Qykio6GCvKxX0k5i5fdYGCv6L9Dkx7gfKMV
8sUynoEekWlkagFF/g7JudwOYrCfzukUL6LITcHgJi1nBu5NVX8VhT5+RvPG
TSsGDk+lHkgX4/7vm+zpvJSBQWGDcLkSioiIpvvO02BgZIr1wjmPKGLV6pIy
9JsLRVPsZl1FZ5/zPfapjwvMFKd/aqUUmeh8kSfUyYXxyZtqNQHzPSfpXlMt
FyZPPnh0QRn29+LuEwqZXKiYdGRbJrp+n8aD3FQunJwUYKv/BOvBwKPQsMtc
mDbpuKJROe7nAmXDTxFckBC68HDZU6xfWhL1+w9zoftt/J88dHfp+Wfr/v//
jJtJy3SfUUQ/xoU96smFow43CtUqsb5pTvxy38wFJ9VbvxPQI6LLL2u6cUH7
xx3jmVWYv7y8N5rOXGiJy70v/JwiheMfFGpsuPBg/4NBPnroBLnEWHAh2qzY
8Dc6/PT11B3mXPCWKj1y+AXeVxw2+wWZcsG6vSz7C3rblMfL/lvCBdX8pwO7
XmL//q5r7G3IhZGw53ot6HVOfy6b6HMhQ/dNxutqiggGdCND5nPhlNC7b6te
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

        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0.5, 0]], 
       LineBox[CompressedData["
1:eJwU13c8V+8XAHBJyKgUKgl9hlFGRla690FJRiR7RlbZe++9t5SyQta3ZCV0
r52drOxEZlR2Sfk9v7+83q/7ce99zj3POee5YOagYUFJQUGBU1NQ/P8v8woj
/EMATuwFU19/RmC0t2UyPaHtez/qdatFYH9fPxRbh6bYjbEQeRWOLXi9t5w9
RACf+DubtBzCsNqjQd2thwkg1cTzRd1mMGbAt5UaRUMA85NXt2KofbE863Ge
U8cJ4I7282dKfiZYeg9tUwz0ggPut6moj8VcltCnOkEAJ/mOGIczamGuv1Ji
t6FZcdNHjBQ3sBuRquufThKAYZFc6WnWG8jSi8a6p6wEcP7bIUVkwxqZpP9x
l+U0AbxAH9JMXrdBPjqcX4uD5k8rNPFIsEPqJLw5A84QwJI93ZYgtRMS+140
1JSNAA7ujX91u+OGCC0WqnJzEAChnu1szFk/hHriDX0xtI2jSF4ckz8y2dfR
eYmTAMJcNOcEqQKQyJqVG8JcBLB+kBCbYBuIzIQJIjIEAhgMsQiR5ApGarzQ
fQy6508czcnwYCTWTr1OlkgApWsTDgzLwYiUlrP4TRIB6EVoV6gUhiDJpBpB
DW4CEKscH1+jCEOsz7xfHYI+3Jk43XQnDEEYRkt0eAhA4NVsO2dOGPJt8ze3
ES8BnM7I4CRcCUeaF+nmP0M7rQzvP/EJRzImzj0344Pv1+r1WAEPR663XOO0
vkgAX5NvLU9fi0DY3tyeWoG+Ojt+NMczAvlZYpJpd4kAWEy6W2TKI5D2LEe9
n9BnS2VVs79GIM+Sg0678BNAaKDv1GuWSMQ1PHl4G/ogMK/EWD4SUfJ+nuIp
ANejyfUtwS4S4bKvuvMH+sXL78NCqZHIjmnbcX9BAqiV8M7lfROJ9GiN9FII
EUDAM7dQ85FIJO/WYkwIdGeEanXveiTiee3XLerLBBCVX/Xw9tEoRE34KG0U
tHXax/F+9iiEm8zWTi9MAHnMczIofxSyf+ZSaDw0VZfW+xCJKGSAQUaOSYQA
JHXUyyORKKSIQpUiFdrbnUlIUjYK8d8ywlhFCUC1xcvLF41CNJfsfR9D/9h9
345KRSEXJwOk2cUIYO7VpIqtYBRC0Z/4KwvasmBHbpUjChlpya25cIUAbgQG
fy6mi0LK3lS45kPzzhbqJsD3Dy5tEeERJ4DbYXnz4YORiF720M9iaCP6pw3e
8I0up8y/5JcgADI7BbNWZCRCHbFj+wp6xomRSGEQiUx601wSkYT5dkKZZMkb
iVTYn1mugn5FPTtXvBGBRJrxvZCQIoCC6XfXPtdHIMba0hZ10OFSP3nWQiIQ
OsTwCy5NAPe67UMET0QgM8J22XJXCYCSv/2z0FA4UkP2N2qDnjeLzitID0fu
M+aMdckQQHOhg3A0azjSMDn3cRiB+/XA6473QShS+nxzXg2F33fN6Ivd21Dk
ycPDe53QJBp6TQOnUMTzF4GAAQLw1ZTQGRgPQaxwEXFJWQLQHUkliMaGINrh
ckoV0PZsIgoyV0MQUWYz50I5AjgWK8iwkxSMECacwrnk4fMPcS/7SQUjJ/KC
njyBvj1yNtVwOgj5LpTbHH+dAKxE7Dp7OIOQEuWZkx4KML96Cj76/PNHHp/8
yb0OXfvr+2gwhz8SOXYgbXOTAPIVH2msS/ghFlac900UCaDS1TLCVNsH4Qox
rrypRADX49Wszl7zQB7VTd49c5sAhmM9Bu+et0XCg1atkqG99gjzfB8fIK6K
+z4MagQQsT6TpRRuhWiMnMunUCeA+pzawopNM+TYhv7W0h1Yr8S+2rGW3UVC
+cZS32rB+A9E75h8VsecM4aH9Y0IoPU+v0yBmAfW0D4eOgBtoJDqWmHridFs
fxZVMiYAx8hjnMuFXtjTOytJUiYEkOjUfarigi/WTnegesaUAB6x9AsaBQRi
bH687cPmBDBEfXSxmSEMMy8VcFO1IAD3ImdSfXoY9mpMhNQGvW8amb7BEY5d
F78WXGVJANe+yUeevBiB2f+4g6RYw/tVUb7BLkZhLaY+Neq2BFAScnKUdjAW
O5YYaNEBzbf1OtoHjcN0sTBmYEcAMdT1on+K47DvbInOQvYw/+YnRpm94rEz
Q/mCxxwJYGA0LkTvIAEzoyyZCoMObpj9uyaQiP13+VXsX2inq/ZkPoNETC7u
7cqqEwEU36j4EV6RiNkq9BV2uxBA2mH3UF+tJKzGdVBL3pUAqn7IHN3xScIO
PR+lqodeKJm67pubhKUfzJqVuBGAytlm6qTlJGxGYImJ4E4AeExX9gmGZOyS
4VrjY+jh23osAQLJWGPtLkeUBwG8vsPZQGeXjNEt7vdSeML8UP11cCYmGdNi
ofTzhO46R6Xw60UytuLEMGHlBfO/MuQf/XQyJpbDFP0Zev1qQ4jwbjIW0Mcq
peMN68G53ct0x1Mw5ksXHin4EMCRO068b6RTMLBMa9Ph8//6s/PzjHoKZvvi
J6LkSwCaTL+FP9xPwTIsRk/2QE9HlJr3u6VgbcTGBVU/AtBvQSlPhadgG19e
1H2AVu5ZDIlLTcE4chLi7/jDfHl97r54bgqmZOxhNgh9zIfxLFVZCubObiKu
FQDzQbCHY60qBcsbV6D7BP1wemNtsT4F+5AhOK0bSACCsXYHK40p2L42a8U4
dJdCVc9qSwrGy/IvzDCIAJpYf/fNtaZgmoPzetPQJTRJAe3wemBSr8C9YALY
5ojRiYH/X6ZWfWgW+raNST8vvP8Y47Ph+yEEIL6N3k+rTMGoe0KL56FF2oyj
3henYCLRtn5WoQTwbVm0ofpZCmasqHlnGbrRotRVOyEFi6aWIduEwfXdvMaf
45+C1bQSf69Cf5qjoIi1ScHmgul77cNhfmQIHxPTScFkDsZdnSMIAHvDWTrF
n4JZv2tW3IJOIMwqd7CmYKk+JezukXD9Hc2hNBQp2NquV6tXFAEI9QjOafUn
Y1k/zzAHxRCA/KiW+rplMtb1kmKJMpYAytGXr1ClZGzHdqk+FHpnNfdHOH8y
prb85n5kHNyPjGNiA2tJmO+LbAm6eAKwi7BSwXuSsCKLCPpY6B83M609SpIw
ilntyoQEmI85nINsZkkYfw4SwZRIAC5SbqI/riZhesbcBinQxezPGu4xJ2EV
49uUj5IIwKc90W6tMRG7P5iqkZVCAIr/qSrY0iRiiUm+3FypBDCic3zoY3EC
1qBmvpcL7baZ9ldVNgFj7hHNK0gjgJazTaiLRTzW3jqwXvYIxkfgnNePgFhs
I7iuTTCDACTucff47cdgHLJ5j8uhDaUrkj65xmAe75xkqx7D+nDm6XFh/WiM
t+ZEUn0mAXCDlFQdYiRmd3O3TuwpASBGPEIj2RFYxejU1/+gH4x7NoSxR2Ay
f0okc57B/GJ+HaDEGo6pgxszodkwPqqX9QXpQjGPLi+h288JwHkibe33QADW
Pj3bO1MC85dYshU1aYvRO3bu6pUSwPvEBA+nhIeY+qHyC4PQX/y4B9yvWWPj
RD+3tjK4/9uGDstE38e+W58+X/KSANbuKlA6hmtirJvKti4VcP7q+0e6nK+C
GISKpK9CzyjOU6W4aSA5LGcbLSoJwL/Fq9c3Vhu5KLlwSreKACo403f1U40R
xC+wXqYG5gv9A17pI1aIBU01HXUdzHcL0iHbHGckltdfLwp6bNvKGwt3QSpu
3SxiqCcA0RNLkScfuCIUsWM3TjUQwKGWQpuSC+5I5ol/gVwYnA9YrvhSm3kh
zcLvPzyH7og+9WGAxxtZ0kjk4MEJ4Ljd11b3ZW9EPI3QINBIAFr7BozC93yR
j2dv7ko3w3w3vrbEdD4A+SV9QgGD1h5rOdrYFIBwGI6lyrYQwJ/T3A9/XQ5E
bLNsRBRb4bzg1MPM0xWIpOBicCAngN47Tipsp4KQupm/H263wfU6KTVE6gUh
NMREO612WF/6RnmTYH8VvK7XMArdWn79NO35YETTgkBv+B7W88skQpVuMOIT
/k3vM7R8llBzCOzXeS+qisw64PdTs3C0eB+MdHb47c5Dcz9uKbi5F4z8XFZQ
eNBJAIWj8RNnLoYg1/jH5hy6CMAsZOySXGAIYq6aJ7IJbZ56XNIDzr/R9jZB
7t0wf3+t82p1hiCvE8T6f0ML7G24dy2FIKPlfzn8eggg5fuJzDaqUOTgY7sd
RS88L4gkHrtyPhTh3kxoCIH2YOZTohEJRVSY9ehp+ghgap3z/UX5UMTlCkE/
GlqSy+VfnDqcX7S/FTF+gPPKNtcDTv1QpNGjajcR2qfpS0CvSSiymOGnwNwP
+8vM7/pw01DkWJ1C2iPory+s0qXg9SsTx7+yfYTzsvVcxJBuKGK4PyqSBc0W
sntU4XYoEnw+L+jCAAHkyLGm+aKhSDFi058PPU/blWfJH4r0m4hx8g7C8xJn
WOkGcyiyE/jXrhS6kfDqEe/vEDivJ9BXDBEAuvP3BfouBLH5qqt/ZRj204tb
t89nwfPCEUJxLfRaSM57Zv8Q5PPNKgV8hAD+K4222pMOQagf+KXJfYLvv/Lf
xXenQxD+aIWvbdDr0tO7cpvBiHfPaFDPKJwX6G8tg8JghOXO34axcRiP2nfl
hb+DkIyx+kL9CQLo/ljsTdUdhLCZeSdOQJ9Ps5iIehKEcLjs3p+aJIDnVe/l
3ooGITl/qlWNpwhAdvqStPTfQIQY6irxGXpK40JJYmsgwpu2TvdlGq7v9faQ
jUogUnK+fMv0M5wHHiQHvmcIRAQK7adnoVcZPRlU0wIQkTffXn+dgd9DloZK
ys8fkRmb112aJQCd9YVODTpfBDPNl3swRwBZMWFszcY+iOyKGf8KNP+D2oIf
Zd6Iwp/PB9++EsCKJqXwlyteSEdI1rLtPJwX12lP3nX0RJQYjAbXoBc5K9en
n3sgaufHC38swPlT9oZ9zrYbMlCQkei4SABtS41rIafcEE1BHe916JdKyoJT
fK6ILjqkurlEALcq0FoV1BkxM+3b2lkhAI2nFHOuRFvk63LstMc3AmB+f093
9PBDxMpZueMXNJlzKqdj0QqxDenI3FuF5yeZL0zOb+8j7gXNcv++w3wxzAqo
+KONRC3XJB7ZJACepkNth9PlsHKnbH7mP7CfWsmXaSQ6Y8q9hrax0JQPHYTm
ol2wBV62Mqp9OI9p+G0vh7ti7DOpl7ah7d1ZxatC3LHI29EXR/7B81H9Et3r
ZG/M9JIbbwYlEYj9aA3y8QnC9sNFrE8cJoLA00mSd/4GYRmzP15EQu/7HQSI
+AVjfY8f8nhREYHZh2IxFo8QTJr2Hrc+NRFU77w2uXU3DDs5r0RipyOC7NZj
bNNlkdh/gNY8FdrBk86R63gUpvi07TkDPREMx/wlmztEYf53AfEv9KfKDu41
vmhspekKYZqRCJ4G1RRuhsdgYec3TbWPEYHT0iqf0FgMxuVVntsH/e2267Yl
XyymffnSBfw4EbD1XB/taInFWrK4uHKY4HX5ij35mTjMeG/K5MxJIpCmZV9R
I8Rje1qZ2YnQmyb5R++axWOXGVk5g04RwdUIGxWZyXis23rQ+Df0o2odvgus
CZhla2KWEzMRWNxMKNlTTcCe+tBzmLEQgbjYFH3UmwRM4lOH0Ti0+h5/ocxy
AjYgEv5Mg5UIelzE+J0YEjHaFYrz8qeJoHjvoJ5CKhFz1d05RzoL492V9vBD
RCK2Lp8eWAgtpVQ4H5eZiNkLic/zshGBv7fAWurLRMya2v2lwDki4Lr+vVR3
IBGbX2c5VQ79mJrf+vBcImY2Ve0hwk4EHh1tdQMbiZhB1TaQOA/jUUEnWH88
CRvNTit4Cz2y73K3mT0J04y5QifDAdeTV3K2izcJ++g+bI9Bc718H9wpmoTd
NnMbBJxE0HWtJunNtSSsW5VFsgX6s9mwYoxCEqYoVf30BhcRTAqGlly9nYS1
kbQOdUCbvrV6i2smYXInti2ULhDBH1ZKz2P6SRj+J7WrB1rKcHiJwzgJk1kU
E1IjwHg8u39s6V4S9nZgKOUj9MrGnW/34Hwkjrn+ukskAuuHk0GB0JXFzEYj
0IMc3UPXTJOwy2lVTbokIkjn0F9IgPcrC9TknoB2j3B9awefx2e7FW1EJoJO
c1H1Pvg+hTqpPz5Dy380/q9INQkjyItpmnETgcm01uDm9SQsW3Co9iv0u+fv
WgulkzB2NtfzVjxEMCayHVIrmIQ9PsIcvAyt+Tz3FNeFJIx1vXLBhpcIGo7e
cB9iSsJSJu8qf4eO9UBe9lAkYSc6Nl858sH4UoliB2uJWFxlCvMm9FBrfpH5
WCJGly3q5XYRrq+XxXGjORGLiB6c2oV+JjTPmlOSiFG5u8h5XyICEvVEtnli
IhZkeurFPvQDE1FGCddE7J9KJX0APxGwa9eYHtNOxHaJm0MhAkTQaFrb+eIU
zK/jKVLUgnA9N961vppOwH7uiWRFQpNy+UY/JiVgKx+dreKEiGDNkW7Seise
mw7Y+J0uTAQPqdaSWN/FYQY2ycZnRWC8XtIkJDjEYaPaIi2Z0D/+feKgJMRh
HwWcY3NEiWBDqfN4VHgs1jqxzlFyBeYL9+Qsk0oMViqxLv9Oigi+HwtqKKuN
xMBOwj9xaSKouhT3p8UqEhupEnxbDj3DefDoI0skRiFiK5h/Fb5P1cROsn0E
ps2/eCbmGhF4uvvWHGYKxygvTK3pyhLBXGKuhyJDCJbx2adoAHrrFKVC7vNg
TCCL7b6KHBHkmB+U7UsGY7rndEdReZgPmVMa/kZB2EuWwWbuG0RwTzi8h+pM
AKZP1/loS5EICLV/ATvmgf3ssNKwv0UEstfpQz0m3bGwCGrGJWhh19z6iX03
rJzqevCEEhHcstbTzpJ3xagPMNtmFSJgIQTJ8yw5YhWbVbKJ6kRwsXmyCzBY
YHRTOd8u6RKB3iFryT5JEeQP5RXZ59DyXaGaajTXkFXeznQ2PSII2WMwPz8n
j3xwXZc9qk8EbpYjA1kxt5FUBrmMBQMiqPQ8eDzRqoeEiYysGRnC+LtoZ9wy
METcdR/KD0MvLJMc6ZeNEd385O8tRkRQX5I9abNlipyXmbuea0IEfAKiBW/f
WiLHzDyenLlHBAZN97ikp60Qikj6nwnQB0ccnE3/WiOzg6KZ/qZE8POtSJ7Y
JRuk0CZ03eA+3J/7q35Tsg7Io6QzNweh31Z+95Jjd0Qi35Q9VTKH9T8/v8Qr
1RGxOTx8U8oC1h91XSd9HyfkciY5i9WKCAT4LN8ZXXBBLjS93YyDNj1loHQj
2AU5uah664g1fP9zBjo5n12QLRH3rU3o8htCu54Jrsi8Lp2SzQMioOwhxI1/
cUVG/LOyZ6EvEhSLPC67IW+72pU+PiSC07RWrvzNbkjJT/0cRRvYb35u8vAe
cUeesv7YxqF7LC0sea67I3EyIcoStkRAcfqIMHuAO+Jvdjr3JfSz/9ijflW7
Iw6RpTtkOyKg+rTt8HLJHbn3ElV5Bj2jbLkodNoDuTM0mMtsD+OVnf3DXtYD
kduz2o2B1sk4HGNk5YGIcu2rHHYggn9DanVrkR4ISSExzxtah7LPn6nQA2G1
Jf1ah2Ycuzteh3kgNMm1qg8cYX89cqlvYsAD+fVG5fkMdCcPk4HlrAeyMjXz
S8eJCFJ+TQSrrHkgE4fdbn+ARknDCoGbHkgP39F8BWciENJRKNrc8kDeqT37
/Q7aW3jtRcY6LEJuwmpXXGD/q4p24vrmgWRntuWXQSfkxASf++qBJDbp7RFd
Yf2LK472mvRAghbX1DKh324F3yEOeSDOjMEFJ92I4LX8xaxD3R6IuSjrnyjo
/M1rkn8bPRAtvRL1Q+4wH/0MF/9VeyC8xy90B0MLntIvmijyQPZaH92g8iCC
8ehLYnpPPJBe72ONYdDXq9O/6EV7IDmXw6RpPIngro8XbaOnB+Ky8KcqEvpY
LuOBnYUHovDUWYjOiwhOHi5gV1D3QM5qLBfHQP/yS6q9KOWBrNLcIzF6w/03
m8H3j9MDwd+NZMVDH2ZgfJ9H5YEku6iePeFDBMaj6NLegjtiwdeakgTteXp3
bqndHZH8LH3slC8RrBaEMqnluyP0aa8jU6F17kl3HIf5Ma3Ee5jVjwjoTk8b
M+q4I6E1LL/O+MP6OcgRqfjPDdGxjXV+Au0VNtih1OuGXCQcXjsXQARhhe8U
Tj12Q/rjfn7hCCSC2etn7wZyuyHP5a0Mc6CrI+oSlxddEfffUyMXgogg3LvI
Mq/AFWG36O4mBcP5hkZbOpbFFfnBJqdQCC0klzsf9N4Fae6vbeQJIYITKVth
6m4uiLVMYfXFUCIAlKeoKFudkasb7JfLoJerpuKLzZ2RY0UpJQJh8H1/7tpU
UjgjVaeCsi+HEwE1H5uHx0UnJKJz92wF9NfPbXd33jgi+gH2qaIRRHDZ6+f0
PeCIUHwziBKPJALOE5k1VCH2iEqzuItMNBGkMY6sOcL5ldPzv7V30I9cnmSU
tVsjGwIkazSGCG6vHTox72eFZDxmMpKLhddT1eWn35sjXx1XFRTjiSDzNLOM
Gzxfn+rT+W6STgRG/e5HHF/cxP5p92Kj0H/bKN+OpqlgK5/lEu48IoLpc35J
MS3qWPO6wGX5DLifNeOLj9dpYY4sVM7cT+D6BL6f1WgxwXoMy7dXn8F6Ej9I
+o4+xGrnye0WWURwZ3vc8lK6DfbcPjN9GhrfZwe8P2wx78Bwif5sIijL3Ufn
ih0wvnxDr8pcImAq+nfuV54zFv6N9q9XAREkW0RXez3xxJxd/Xs3oBs/1pks
mnhhRn83n9kUEoHLQUqNxgVvTOz4Z8ToBRE4jwTliWX4YHMi1YGgGPZT3XWG
Am1/rK/+4p230AJCR8sD9v2xuus5F0RKYL8JSHXxzQrAkrVjmomlRNDmdVXZ
wyYQA96mVDT/EcG6jq4jW1wQxn/401AAdNDOzLH+/iDsdKxKwS/opbfMv4pO
BmPfn0korLyE+0myp603MRgb5/6P9f4rIijV85Ti6A3G2l4RFiegQ2XFmTNp
QrCnTYyRveVEIHNpg50I5/dIpRBdhddEwBsROyZSFoK5DP7ixaHDdS6xeX4O
wZTm5zrLK4jAlpdRoQyEYuL2ek/4KuH+9i3Es+1DMcJu38M86MHfvuMfn4Ri
v2nr6FOr4HoECpn+rIVi7RdOHjpdTQQ8iSczec+EYanSD3ceQ3c9ZTp1B4Rh
grZsX7JrYLyju2yyosOw/VDnEcIbImBtOsHWWRaGdT7r6i6AntWN19jrCcPM
P3jXlNYSQaHDvX8+NOGYyNJAqeBbeD6Rl0UHLoRjBxSXcl9DP7/8r0BaOhzr
ORuSLlZHBIb3A8/WqodjT0QmYt5Arxx9HahqEY5ZK4sGSdcTQeuNtaa/HuHY
FfMY93fQu+olrd2RcP7wm7MBDXA/3I1xqHsUjvWnXTVtgf7n5VXckx+OZb1M
0VZ4RwQia6f1jpSHYzbvvyl3QufNpFlYvQ3HJGfkZVUw+Dyf9OrtxnCM+nem
+Ado8d/8qxXt4dgg09YlDZwIShLvct9qC8dyLqpcGIbGqmZ+3qgNx+zl81l1
G4lAq9AOJOaEY1cN9+knoDMrOOmOB4RjtG6ah4ybYP1gS5Qr1gzHRuLKdmag
qS59nb5BCMeeF1Kt3m+G+TArydW2GIY54oZfFqCV9X+LVj4Jw5DRqpEHLXDe
FYym6pYKw+jXGXpWodMtv9YKvQ/FRo9aNDm0wv56qN6D6kYoVkh4V7MBzUTR
ZGVbHYK5XmUpc2sjgkvWP15Fs4Vgspp2ub+gnyGiodL2wdgxu7Z0n3aYT7f4
VN5nBmGTYedj/0GHCNgcMBcGYsVZbkFB7+H5YkxRg4cYgLm/6XWn6iACGlq3
Iss2X+x6P9k2Anp1iny646o3xrTsZ0rXCeudrZ3M4QQPbPrQiHYctCAnjbia
oytWxiaocqKLCDoSr562ee6IeYmGy6ZAR0pfHEQcrTEFlWlx1m4iqAj0HB/4
ZYgxW4jzP4Y+fLj3vqSODPbFL/4Cew+MZ+kXN/sodcT3FcJA6IW/9/ubeYjC
CVHqSD9UAL1b029+c8QDOf3l+w5PH7x/CHGE3jYA+fpbYbUEmvyEd7tGOhSp
OJn9ReADPH8uBGuHm0YhAZd2R8qhfcos7r9gSkBUrqv1iPbD+eBoXS3342SE
zehFUw30RNLTFa3hNGTR7aBG6iOcp2cOMnivPkaq4nXKGqDRAu5MwsVnSPCL
V7noABE0E2wYngzlIGqNNI+aoVcpmT9NqD1H2MdMYm8Mwv7OWvYnZK8AWVl/
E9QB/SH5mHllVxHyhu6Eh/IQETAHVDgtHJQioURr2z5oF2BzkuG/V4iGTKPp
nWEiuCE3ZdTx+TXi08C48RF6PXQ5ZJimCsmXMQjWGIHxEn/hfnC7BultKDo5
CD3ZwI9LjdQiOzI7eXc/EUG7sYCdUk09wvlOXnQIOvLm7qTqJIYoXktq0RyF
+ZkjcYvhfBPi9G767jB0nK6Q//PDLciTa/xftcaIoJ8zRH6L2Ia0vPNyHYHm
/jzbgDm/R1avvafSGYf5kPmkcu9HJ8KCMad9gsaTtn53vutBEMSMrDsB9++j
Mezxhw+IFfaqehR6WHxOiSb1I5KI/L2hNwnjU/uP9rfbIFKHKY2MQev5hjvv
hgwjc0iGpf4UEdAyypUrtn5CGPD5nXFoZy25FJmb44g4KhphMA3Xv2rWbXp4
CjHBA09PQrfxnvywQTuDRKJ9Lww/E4G6IqyVVV+Q1/g5ySnooC4Wjqz4OWQc
fdBhNAPnszecdspP5pHDjTW609Cvpu/vXB5aRPgB1bLxFyI4M4voOCivIFqN
d7w+Q/+QfMn359Aa4g+yj96bJYInm07nvP/9QF40rj6egaZVTxDOKlhH+oH0
RdM5eH8Wmi4aj03kd2NE3Rfo88SQdkOvbYQgO6xk9hX2k6yHYSqvdxHlJsLE
LPSKqmGnDWEPcZV1tLk/D9/H/7/xxeF95FnTuz9z0O9pDy0+6z9A2mXpY80X
4H4TohT8FHMI/dGkyz4P3eYSl0lpeBg9I1dYZrFIBCOCnCy3DY6gss2bMgvQ
F+jKFVrjaNCHcrK9lkvwfDi7qlG/dxRNbY43WoTW8FyZoyhkQN/JTa5ZLcPz
2CP9XNmM4+hCM5//EnSEYrcYjw0TekLe49iDFTjfhbkWs145hUq1tGYtQ4dK
mvucFGBBzeRPCj38BuNNyTDQoHsajWkxwVegWVbngm0azqJV8v+p2azC/tYZ
0d1uxI5Otex9/gbtUebSNSnHiVJfV3S0XSOCN4PZ0VZSF1Ch1jSKNeiK8z43
6PYIqO71uUS77/D5rNH/ehdJaFDr5QvfoU//MGfzpOZBS677v7b/AfN/i6lB
zIAPHWztlv0BneWx+iF05RK6f/3sgMNPIkhK8it2rhNEyW2WZj+hXc3OdPMu
XUZv36jacFwngsTv2nUhj0VQj7ZDIevQT03Xo5tcxdCcG2qnnDeIwGGp4WWG
nzja2fb0+Qa01fRJd+5aSXTjxoqoyyY8H4oJdRfwXkXPtUu0bkLf1ec899/g
NfS6Qpim6xacTzmJqfQmALVvH/i6BT3/ai8xcEcWfaTA5ea2DfNjJ3p7vkIe
HX1sa7AGzSucwCXgdgNlW6uVtdiB85xehpyT4U3UEBzhnYJ+OUAWIdvcQrNS
7hzT2oXn0VHL46vPldGZhWdbPdD3A/1vGB69jV6QXhm//gvmk5jCwb/b6mj+
TPALsd9wHk+ezqa/fBddEP0QVwaNdJ+xNevURHkjzrmS9mB9vEEh+zZAG304
bqX/FNraq+2ulKYuWipQBZj/EMHQ2doXvIr66GogBU8sNOLq+SLW0BAVHFJh
pNonglqxnKPBycZohff82Ca07feUk9KVpuhWr3CjzV84b8jLPf1GeR8Vv+Bf
OAedWkuMazE3R9++Z3UZ/EcED6qD2bVMrNA9tvt6ygdwHk1orjv+yxqVsX+F
tkBfvStzYyXvIdrIrMhQSUECAYull5cF7FFK69SNi4dI4HYwmM+mdkSv18+M
5kGH3XJISPzniL439SpIpiSBooV17o0jLmjfyxLEmYoEMP1D29lWHugJyl3S
CnT/YbWc1/GeqIaWPL3ZERKIDfvhUFjnhQ7/mfh0h5oEHC1XtsQ4fdFJRUYn
YVoSaNoa+2oXHoguzzo8/0lPAtUxh1xlo8LQi+INUdYMJEBXn3nnOU84ahtF
6zgDLe0YLEzZFo7+FMqV6WckgXFEXpBjPwLd8R0YfnWcBOzGvg+z6kajVKev
0DqcIoHMkhAls5fxKO/e/VPr0MJ3VTzXJBNQ5alkDhdmEiifDZlTaUxAk5//
FPNgIYHo0ZylR2aJaE04J/gN3RufFng9NxEde3Bb2YeVBN4uPhq9PJ2Icl0u
Mw04TQI0KpJKzzWS0OunJmwPnSEB/qHFMdboJNRq56hnCLQ00y3qQjwJfdlg
FR9xlgSGNxl1tknJ6EB2+uOjbCQwcrzvbYFmMrod3JYfA51xlLH/TnAyKnOL
WJ9wjgSMBUZTAz4lo/f4NdqZ2Ekg3mAqafNfMhpyPOhjCvTa/K3LN0kpaOHG
q0mW8yQwr2NIcr2ZgnYNTy8+gq659vSOq3UK+r2WcfMsBwksPTBOlY1IQZme
yvzLhO531RUdeZ6CigXYHOXgJAHqyn/d/FgKqmv2hDkH+orG2iY6koL63ujk
JHCRAMM3Rku61RQ0m/fXxXzo/YwW34iDFLSZnkec+wIJTPogTytOpKIL37Vk
i6CLxET5IjhTUbqBUJWLBBIw9Rr4Q8GfigpUV+qUQbdo2+mxi6ei6hmzZoJE
EtB41xoyfC0VdfVhsi+HrjreP84rn4pmGAMvERIJ/E3ksTilkIrWyzqEVkGX
5XnqJENPk7ISxMkkkFZkvph3PRWlpO19UgttFeBfLgdSUe5vfwqkuUngDHfW
FwepVPRW38XXDdA1n4cqeS+norav9RoQHhIY2+7xtiGloompke8boYM+GAMJ
1lS0yuPNgBwvjL/WhG7MkVT0k/7CVCv0bN3CaauNFHTvGsuyAh9cL4UjqWsy
BeW4cH2rA5q+ZZy5ujUFlaNyOVC6SAI3QhLyeUtSUIvFXLpeaLXmnXhyXApa
9t8B18dLJOA+OtqMK6eg/YmC/Hf5SeAIXYuBKU8KuuliJDEMLenbvppCkYJK
S9erjgmQwJdXP6/VlCajxudXdA0ESaBzlfZHmV8yGkRx1nwKWiKj6YGcajLa
0e7u/UWIBKI+MGsZzCehq8UFYfcvk4CAquj9pf+S0ONxQ4nz0OYvLB7xuiah
2ndFXiwLk4DzwR3Byd+J6NfPa4ProiRw/0xpcOlwAsqVfu6KjRgJdGw3Hb6v
moAaqtxK/wrNHCLzIbgpHh2qzdf9dIUEfo7VvUWy49C2JIOpBgkSeHb4G3+i
SAxaKN+5EHGVBK5b+kz+7QxDZ3/v3DwkQwI87rKTQkxhKEc5qdgbelu3S/+0
diiazh5oY3eNBJiecEs7jgWjEdviPzVQEhC8ZENhmRyAWr/I/31engQu3R4N
zOl2RvONBvQfQWfsa/6ru+iEzpyiaDhxnQR2GJ70lTI5oLqBBv6Hb5AAo5t9
P3W4NXpL7+ThZQW4305TBzR/0kYv0gcyVCnBeCj+3T05YIhbNv1nJ6BMApHi
UtzZSaZ4nsdEXyH0/Uyv2tdV5jjbV/GkxyokoPD0bXjU0kOc/t0aS8Bt+D6X
IkxK/VzwVXsDTiUNEgh+T8szW+eP01XbFPRCa143Bo6nAnHePz6X7twlAZEY
Thb69kDcPOKphK4mCZAM3SZquYLxyewpNUttEmiLcT/ztDgU35tfG16Gds7+
K8UpF4af4f9nYKdDAg5B38yejYThmrUc1q66JEC2b29R3AzHu/tNAoP1SeAT
r9eh778j8SVWR2pqAxJAjnzQaXGMwqmNAmOjoO1ZzfqE56JwueWcjERDEgh3
dnz1ti4avyf0moPZCOYzIed3K2cM7u/WlP8Iejg9RUotMAavOzRbnmVMAicr
qL/1i8biozc3xAkmJNB3rZ6iKTwW34mjfFcA7f6mgIM0HIszD52U57sH849Q
JbzHEYeLsBE7y6APAoa45c3jcPV7omqXTUlgaKBm9V9+HG5fKD9cCa1vJski
9CUOj129ayBhBvNN6N36yJl4vETE/EsdtI6n1uxv5Xi8w9PVCrlPAmZudxUy
vePxBSx0rQm69qveLJYfj1MdSXO5YU4CLsTwhIdd8ThBueB3BzS72H55/rd4
HCRVB6hYkIDM2ZliF9oE3PhT25F+aAVy6/wUVwLue34k5q4lrKd7X3+viCXg
j+8vMH2CHuOh63h+PQGvKd55pG8F1+P3TpZJPQEf+kHNMQ399L9IXRmdBHzj
yul8U2sS8GMKkBXUT8BP+PJcnIe+IttQvq6bgAs2S5RbPyCBiC85w0l3E3AV
WkXxVejRtLjPZ5US8Ie3dRscHsJ6Sjn3N1UmAY9MtZbbhH71pb3s2KUEvHDc
s8PdBvYvIcPXKSwJeCtX1O096FMaXueF9+PxWcvHQ362sL82JFFuTcfjFP8V
6x+yI4GrX844L7+Lxzk2386EQnPoz5dzPI7HZaS6LGntSSBVJIUuzzEe92xb
cT7uQAIv1Rr2e5jj8XT6P7+SoQ3nlCKT4PepukMfwOpIAtZA6up0SRz+c+pS
zHknmD+vROhui8bhx0gyTLnQlVa75xM3YnH+hyqPSM4kwELLI5/xMha32rF9
fsmFBBZP5ldInY/FZ547t5ZB/6JoizD7GIPr3/GcF3CF95817SsLjsFvl4Xw
XHaD+83sUv3sZDQuZvakVMwD1tfjm0zRTlH4y+M5PdXQLDMW1E4nonCedwVr
4p5wv89R2+2UReJsZ14LSXmRAKEgJ4D9cwRO0fe+8poPCVzu1R1L4AvHvX16
hzDoBxRMFDxvwvBN3sFt1JcEjjkR/Cbg/lsImZaQ8yMBqnIhjwnNULxXarte
IQDWX02j4A3zYPxJAaFVLYQEbKfdbiDhvjjzXd75fugl/hNbTS4+eByFILVG
KOwvhFCCo4k3HmggpagZBuNb+0iiVdgTt2JS79GNgO8/xB0a2+aCi/n5DZnG
kICJVzbTlXALvE9z9KtLCnz+0xDDuAxD9N7wpMEq9MQ6/+NdjXvohtaXAfNU
2C9Zs5PGtc3Q0zorjVppJDCIU7Sma1mi9/T2n0o8IoEPd9meRV+0RzeMuLT+
PIHxnJg5fi3SHQ2dJvW4ZML+tbeF/7XxQFlN+ORXoSdXKnPJqp7o1XsiwlNP
SaCBe6DAjMYbDTW7zohnkUDziLlxoZ4fympl3RacB/PXLiVTqzIILVq0lfkD
fVSVa8GeIRiVtnaqdHkO97tY+aM394NRkwfeueb5JKC8WJVXyxCCFtnE+ikU
wudZKxCrb4ai0quJWxj0t97QvsCkULTHNs1G4gUJhEjZLsqPhaLrdll6vEVw
vtFSqkkzC0OlHcuv0JWQgF5F/kGzQTja87OqLBg6rSJtMSs1HDV2ekv8A43e
13ov1x2Ohjg3M62WkoDHk4iuHuEIlHWzPdK8DNZfnaz6YtMItMil+2ASuqmE
XvdqQgTa4zq01vsfXG/mcvnDuQjUeHvUXOElCfz3V8/34Ggk+tNtagKD/urH
xSQhGIkG73zRkHhFAvV+fw0Z1SNRZo+FzlfQ0jSMqgEOkWjh7grgLYfz5lvC
YlRsJCrp+eNNDrT1uZPCF19Eol2/NgXPviYBxcqXl43wSNTI61dBEnQebc83
zuFIdCDqsyxzBez3TpnbG8uRqMKT9ql06Nffen/P/IlE60r+8zpbCdf3KDdp
kS4KFaxPZXkKzcgmQT5yOgrN6/Z5zVFFAq41RzkkuaJQ1kkz1VzogPLUeX/u
KDR69dYysZoEhJTvzn/ii0L/7V8OK4Rm6moMl70YhToznrnAVwPnLTUBxTqe
KHTh/EFDKbRYpfWeLCEK1Rdc0BV8A9cbuRY4djYK7UN6t8qhOz+cfx90LAqV
U6tKFK2F7xNrUHuVIgqtMcnkr4EuwGgB7Y9I9KJjcIfkWxi/BxG3lsYj0azA
B+b10D6KLH2TLZHoySR1CqSOBGSHfdiXiiPR8FyJp43Q51QeDjHGRaJ7rzkk
5ethfQ6dz7tjF4naNx8ZaoPW1dkQe6MUic4OrDooNpDA+cw0CTlyJKo9N0jf
DV3LM6SzA88bCFWefP872K877SaWn0egFcxRnzUwOP9Ldvwn5hKBcpMdfYah
o5bYNTE0Aj2mgFSO4yTgZHI2tqg/HA3WJqsZNZLAITUXLda0cHTHkuHbZ+id
zynuU9rh6HTEOGG+iQQeX//G83ggDNXIaMKsmkngXSt2KSc2DG0vKtJfgaZl
/3CLdD0MfdnpnvyjhQTWO0pXO0pDUX/6U5R7bbCf8VZxvTIOQTfO7T3zbSeB
36z0Zk1HQlBL/i9SB9AaWeUmRSXB6G3VV05UHSTAu5/Zc/F7EMqRoPzlWBdc
/6vAQ4FGgWhytohfEvTKVasvzssBKHX52bPM3bC+XLh1y4U5AP3ev6h+tgf2
Xzn52Yx7fih2MrSR2Af79aOqZophL9QkvSFbcgD2s4EkkQQVZ3TVKy+pAnp6
suLaZXMn1NMoMoR/EObP93s21d6OaDJJ04prCP7+RONS/y07tLXimyDtCAlU
tMxaFs1aoBc/sGGfxkjAd0K8rppfBa2poCi/M04CrQShd+7911H59IXcbui/
Z9OJldvSqKFRRRg+QQKqN6MPK8cewhO+3VJ9MUUC9y74sD5/r4pv0XhNun8h
gTtXtI885bTAg74Z9/2EHrrF7a3bZIkf+3C98eEsCYjy02jtG1njPOkn8o3n
YD04zWUjGWGD65OKbBTmYT4zFr406HLEF2jijRqhLzwTfm0U6oS7fHNRk16A
9cqOmo581RmPrUBFBRfh/UML1eqzXHAcfNpjWYbfe09y/5iMO65CereaAO14
NWpOedwdH6V5Pn10hQSSnK5Fd7h64Bt99s1/oe+VJw7fzPLE/Ss0qzy+wf6c
99pEUMALp0+XLlyHFsveTuGs9cJJRtTR86tw3vwR6fWryRt/DVZ9TNZIwMCU
72E38MER0oDdGHTvxr5+QL0PrvPt2Z3e7/+vv8J0Vvm++Ne+EPmbP+C86DsT
GnfSD3eseHClCfqzlmeNh68fHu115Wz1TzjvaX7d8pX3x51bTxTyr8P83B3s
bc7yxw2Or4rkQzPJiK582fbH+QvyVFI2SCDOXZE791EAzvzTb4xukwTqNIJn
r84G4PvSepbB0CkS9wM0mAPx3v7jgU5bcH6g3aR00AzEa859Y1iGrn5l4qLj
FIhnWbY/vrcN5wUZIxqe2EA8/HUu9yh0zP4Nyun8QNx+37dSbQfOA4vns33r
A3Htm7rgPfQdm/7iw/2BOJos2ovsksDUYn+/6yycx6eO6ddAmz9+0vtxIxA/
wbuyIPAL9t+GIj32Q0H4L+c2lwLoc7HugtqMQfjMuxyK879hfvI5UQadDsI7
aH3jUqFHb+iczOYMwl/f1WFj2IPnZQk/vUpyEP4kS+RFCPRHj4HJRr4gPHiZ
UewPdIqfQm7XpSD8odhyo/MfEihv7CgdhNYIaFVdga6aSKb8DH8v3ZU9brpP
AupnHvD+hPcjsvhYjUGvcrpJ0XMF4Qz3tLfU/8J6MPBQT+xMEL5VIhzUAR3G
9K/U4VgQPrnNcAz8I4Hu+lnNJsogvBUsPXkDreGo7CuwHYiXxbTwCB3AeYAp
/13tfCCeNpJVVQjtZjzEZz0UiPtf8JbloCADNcrOEdAUiFvaavWlQb8sth+/
WRaI335z2YDxEBk8pahQCk4LxMUpGZZCobuIh69v+wbiHKqLrvvQLLm5KoVm
gThNRvMhV0oyuL2VhmYqBOKjAl7n7h8mg5lfzXrWRwPxRk/NonFoSyFpj4z+
ALyoReiKBhUZXP5ceOh0TADupbdwW/YIGfjyemIPd/xxtrC7wZw0ZCDDSjSZ
eOGHU/YLHn8EbTNTw9+i4od/Y6N7eoyWDDgkv2p3fffFG8obq/9CH339bdPh
oi9uNCmwPEFHBn8i2HILgrxxBZ6j7nfpyeA6zUoHK5M3Luj8lbIbGvFcZ2fL
8sL/0WSy1zGQwQl79yunXnviOaK06hnHyMAgY9PcscEdf3is/RDbcTJ47ncq
/bugOy62HFKZCV08pfOIK9sN78g6YM0+QQbiOuFXvnu64utHd6cKTpKBYJQf
fpfZGZebmbepZCWDyjec0+q7D/CvsS0RfRxkoH6i++qHNwB/aRUkpc5JBoF0
J7hlzcRxTzn020fon4v26f4vuXGGX3W3h7nI4Ivkf393LMjolfsVLJMEGK8T
RP/jMspouFTu82VuMvAr5T4v7WWKqjObaNnwkEEBW4esQJsZyvaDnWYNOmjB
py7zmDn6Kj/j4U9eMrjan8/34LElOno8UXj3Ihnc+JfOgsTYoHwL/jiVEBn0
7TJ53jBzRhlSr773g/6wLTscN+eMfpf91bcDbeKX2LJi5oJWPXOaXrpMBrwr
R6drDFxRoGX+t0eEDLbSKF2txdxR4uELRxREyYAqPH2Qp8AdpX49xYBD2208
cCs65YF2M+iwvxYjgzH68csdyx6oduutq2niZBDV8yfT18sLlXKmlj8mQQZv
lI70yX3yQtm5WpQioL/11bCGiHijX3xk9L0kyWAkzaP27hdvtJXvt+kGdGX5
290hMR+08FP1AxspGB+/o2wVYT6oraiQl5E0GaS5Rk6bcvqial++BY5AX5Ef
ceO29kVFEooi1a6SQeyrzM5LL33R3ZULGbIyZPDY4XTKrLAfOp4xnV0Hfbzn
5EGkgx/aoJD5QvQaGbCNHGfWL/FDg/OY35AReJ36MdnytD9qof4Ry4IeVPHw
Sb/ljyr+i2s/jZLBnSGeyilPf/RimVJfIrTJwnyiZIE/yqhPM3IUwPx+uzr6
vM8f/UnTOhUMTQ72UGPf9kcHqgPn/0CnezTVZp0JQKvvX1tzlSUDzv4jYzxS
AWgG097WGrRuU4BrlXYA6oPX7FvKwfiMuBrIOgWgxnYuVDPQhByXhJ7IABSc
u8ygJw//X4RHSetZAErsXD01AE1V2DIw/hLOCx7F55Svk8Gnk36Ohu8C0CWS
JbEVuiox4uFYRwDaPUC4dO0GGdyUPE1752MA+jLws0gN9H8X7iU2jwSgSYJP
pYUUyIBagVpJYCwAdZ3UlSuC9hvsHk0cDUC1o1mULtwkg8+bmXXfhwJQKcmB
O0+gNYzWFhX7AlD2hXi9U4pkENkurpfbGoD+S1E2jYVuXPhOvfcmAP0iS/vg
yC0YL9fYZc2iALT1R6ujP/QMOfx3ZVoA+uJZkOcutECFhtDZwAA0WhkJdFQi
A5WUQ77hVgGo3e+9iGVo0cuiTAfKAaj6izcJZspwPzP7FEQIBKCiWq6PJqBf
3rb9S2IIQFkPC2drqpBByI/HUxOL/uiEcclLBVUyWMnaUSxO90dznt6a6ISm
uR+XPm/hj5qPL9Go3iaDFGM8u1/YH/2uxWN6V40Mvp57rPMR90MrUtrjRqBN
TAzNfgf5oR4fLer01MngB6XLtw3gh1Ko5p+6d4cMAt4vpgVU+6Kt0fJgDrpt
VvYW2cYXjeqYtbXUIIOcSw02Led90ZPXL7Tb3oX1ev8V01lvH5R0NcvTS4sM
XDhxRp8T3uiS57WCfejg5851kq+80P9qJj8GaJOB8XdkUlPZCxUXOXcpXIcM
si9//zvr44kq8mVMJeuRQWF9teou7o7anU6WKzMig/g7/K4Rs86oiJawg5Ax
GWy0hXeVGTujO8n9mRXQVq/aJdExJzTw2PHtWhMy4A7gv7DbCefDI7Ev2kzJ
wGzI4WG3hB1asxnG8NmCDDIt1aqYeMzRgw9eI0z28HvlrfiZefOjXG7HspKh
rwMa75p1FhSwPbc45UAG7aXTRZdKjuKB5j1bzI5kUNpmO/HHUgw/9Jvj1Bln
MjjH0XD204YSTsiqHM+A9rHdCaynUcPl5BXzzrqQgaFO9LRV5B08OM5J+Jwr
rC/nWcQ++mvhh+Fxn8OdDPj+uN7QZjPCSe91T2dDIwOR779/N8av265Nc3rA
73XtyK95o3t4aA2r/QVPMqj/+/JEC4cZfkT5QSzJmwzmm2OpauwscO6ff+8W
QIvx/XmlK26JK6Qln+P2IYM5A8uxe3uWePjn+hIeXxivoMnS267WOI3rsc6L
/mSAfXLUjhewwXnPPk8shWaIsX2k/MEGV8QkdPkDyCBLqzp91sYWj6Q1XRQI
hP2CVcvKNM0OL/pv++VLaL5KCUkRgj3eoRHtLhREBssLjj9Li+3xo88qjwgH
w379TobSucgBvyin2Psa+tBj27PDxx1xpcXJVJEQWP9iwkpfKzri0cLUJLFQ
2J8Wzz27UOGIl4w8+VYFnVMzJlM+64h3+QhVXgmD9THmrbvbCSecvl1XTiKc
DFxV2E49ue+E89usHa2FRnvLarcjnXCVE8EfJSPI4O708u+gUifctpr18Vto
k8rfv5BuJzxWv/SedCQZ7PlTjfIvOeFlByhvPfRbF5G3ypTOeE/+0I+rUbDe
vnpTlXnWGV+99eBNA7RWM4n9vKAzzvjjr/+1aDg/lCkdH0CdccHUZAUMutaC
69C72874bSmeY2gMrKeLT81n9J1x++n6YRzahu9NGWLujMeHqD8DsfD9yZYq
4w+d8Ze88+ZN0E8Cdour7Z3xvl4vfrk4mJ/Yys0hB2f8u/OxrWbormTPUml4
/fiZ5/Xy8TD/JMSN1h4444qJ4mP10FeLfpb733fGA2m7dkQT4H7Ikpl7B5//
NtCIuQxaTONK7ks1Z3zj109hUiIZlPWul2vKOeOXnELVnkIX7xYvVYk44+bL
p+2Yk+D8sODvMsTljD8zLY2OhdYsT/KtZXDGR8aQIqpkMnhge1jIcscJP64x
0OYLjQpvV89OOeGKXRZzW9BX9VhlRFuc8CC53xR2KbA/KA2xGBU64XV1sRzz
0Pmrgj6WEU74pgiXjFEqGYT53JrWsoTfs7RSbxh6Xuzma2F5Jzwrczy1LY0M
Fk57OXTsOOKfTtlXXEuH+R3cjiT2OuInYg/1V0Ob0/t5Gec54sG+vPSFj8gA
vCK3XlJwxOu36nk5Msjg9x+3YSkWR3zLVk0hHdqWqG8y2uqAWxi5B4U/JoPW
k8Mhb77b41nDR7P/QQcPFHup+9vjI6rPGtyfkIGTQMUZRzp7XBFp3bXMhPX/
VTZL+Bk7nJ/zpP3NZ2TwLvla7wyjDW7xqCAGhx6++isiNOQhnnVcqlgiC+Yf
DfdjiZ0H+AmKe195suG8E7AlzjxojW/O/KdPmwvnKSGf+jxbS7wu79bNzny4
vyhTxZ2ETHFF7iAu5TIyUK3g3Xf4fgO/L7hr1gvtyBBIkf5MDvcXtytQ+w/+
nnNPNi4VwSsV9C5qvoT1Ug6Zar8qjHNYCYsZlcP4V/cdimYnopsvvtx0qCKD
NaU90xBbNfRYuU70OvTRj9Sr4gZ3UN7a3h6XajK4FRbGYPRPAzXueHvHswbO
S9RPO/wRbbRjKckgqJYM3OdCrormGqJZfHIOKQ1wPb9nKFkszNFa4drXLO9g
P1fliH3DYYEOSgluPYLuN/I6c27EAqVVYvN6ikEf3jo3fM0KdXm4EVzQCPNz
mHOF+ccDNN7Zuo2nCdbDuD3DitSHaJH3NE0J9El1yQB/CRt0Oror9mUz7P89
3PRGrraoYmle+ptWeJ5wXWwP6rRH71eeGZNqIwOJieqaQW0H1L8+/lwD9JJ4
6c6nGQe0sts7p7Edrp83ZNbIzRHtG/w5K/eeDNgZBdVBtSO6NGFJboMulo/k
MN10RDlWNUo6O2C+DiJSCg+dUMmtjlXlTjLQlk2r/JfnhN7dR4T6oOMuJaxM
wX4UyXCpaqAL7t//Xof9lnVGnzPn7mh2w/3NyHWX38UZxdhPS32Cxnl5xJ3z
nNFN/sPYRA8ZcH0ffsz9xxnlpvXU1uqF8TwIzZ244ILqz61+74M+kCd/GVJw
QRsfj3A298F5pbbKLDzGBd1yVa69+gHmm9JQtGSpC8qj3qheDY1xdT4ldrqg
8dQlQUX9ZCCs8Ejq2YEL2vSFg43wEfb/FQKB94wrutWQUpEJ3eu/9OqroCvK
m0GrzDJABs0CTUwf5V1RAxe/uXjoqhsXvb9pu6Lxtzd8aAfh77GRVZH/VVzf
8Vy9XwDAlS07qzKy7qVtJqPnUUayy96fj72FkPoqW5Jo2CmpNMhIIeVahSiK
yk4lCSFJZPQ7vz/fr/v63M89z3Oec87jFYoa5T0FYsDen5FUUXgo+s00WLwM
tv1gUKcfD+8bMdM93gP1o6nXTSAd3lf7fGgafKOjq4YzF96XoR7m9U4WJ2wS
ou0phPcdK+X+DM7qT5+NugvvM5Ipsn8vi4etdf/+KYH3yWWjd+DHX58ezisL
RQ6M3L0mHyDfss1G/cpD0YXhmKBW8MckmzYfeN5Y84ftQK8svtq2YyUDfr9w
2a+gFlweJHt67k4okg/6tE+lD+ZFZnuzqBvwPkOrtw/AvOctRjRyQlEa0e4j
1w/1O7nVYmdaKGpahxlvgL/25Q1ZxMH7BitztwzAPGtXda8yLBRtq5ZXvgIu
/rY6aeIZihwv5XdwD8piQxerN7KwfmkBG92TwC+TM6o0YH2bDZJW1w3B99Jj
Ry/B+v+RWb1yEiyiFzasAPuzjSF4129wEN+e7ZsYQpHTwNiLgGFZzHfzmJnx
WAhKf2zvPA6OG1jufvMyBC366aYNfITfWysJ96eGoO2HnshZjsD3cDn2uweE
ICfp3Q2vwdl5l2hHjELQ8z6RuYZPsriAprOLxhiCLupNHb3zBfofn7LKMMxb
zyVpU5KjsL9H2RP/KgSjxZV3cbng7e0ZwQWMwcj5IfUo9assPrHALFwE52HH
1kvCx79B/SQ4e7S6gpDLMmvZNHjdWDaDY1YQuvT+1CGvcaiXHKNP1Z2D0N8U
jxP232XxVKVlRe7bQNSytG9AexLm3zfHkd5Hf2SleZO7BvyrgPC57uyPvkZx
H9gzBfW0Rf4o87AfYmT6ckf8B8zHkpTM9ne+CHGnhC1PQ/0SXVYqeuCNqqSG
+R7N/f++Py71TNQdFRnGHJL7K4vdbeTUPtdaIdXUqZPXwCGf7vfxn7FEz7us
SoWWYR7PLqy5pmOBvlhuF2JegfiFF4dsO82RhEvPl0+rUC9FAm8rDxugzFDi
dO46AlskCPV039mOiKq0Cv71BBZ6VeUdGS6FHi39/XoWfFvy1jznQ37UHdVp
FMFIYLEcieWMQ3wUz9mIzZbMBJZ6zqXB16JCJV59+YibncDP2743tQoZUouB
wtxp4Mj9App/pY0prwNuHnwcBL4XniSUSJrCPLUqJLCBwP5qm567wrzJraAQ
sYmLwAHvDyquKlpSpxmjunLAbW1pwdy8VtTsu5dyotwEHu02DIr9ZkW9iXTr
E+chsPjghz+a8TbU5eZMdRk+Ak9bv7racMKeYs4cvXgL7JUf8eoZ6UCFeStM
EvwE5ooRen2u04Gy5m7Pld8I8bafPOjI6US1jgjP3wMXz5oePVjgRKk9dDPa
IUDgf1a2Sc93O1ObbdZWdgkS2IehkL1O1IU6t83Qsgw8KvXluqmdC7Wyklmi
IETgD9N20vmXXSi/zlHmh+BejWPoVrsLNVSg4KQsTOBortdbXP65UCahUY8f
gUPkfr/ogH5Zp9fOvVeEwAULPwMnHGjU7k0intVgps+dutUJNOr6pBu1bxOB
nY/khKuU0Ci+unLhWvC9cgdlWheNiklbC9TcTOBGL6n76rM0ao5u2PoMLKhr
MlXPSadcVbK2oi0EtkzaPjEnS6d6WL9G1IPzf1iee6tBp3T6Fd5oixKYtZJH
h25Cpx4VR8k3gQ8K5SbddKRTxOn2aB0xAnseVX+V602nMs1F+p+DcdHuhMPB
dIpNxl1RX5zAFSbPyIfhdCpioTy5FbwqfnXhwwk69b117bOBBIEP5SW8qo2g
U3a5hhrt4IJ25QnXUDr10j/rktFWAsc6jz1550enNPDXyVdgX47+EiE6nSrm
V9QxlSQwW7SJwg4LOiX2NSqvC/wsNObhloN0KrWqfd5cisAS2ZU3JnbRqbWz
Isbd4Ms79PfmC9OpQAf3WxbSBN7TvdiuuUqjRnZVrL4DF1d/9Hj9kUaZrftn
aS1D4EmFbmF7ikY1dBs+6AU/unhveiKXRinezmKxkyWwqKLWcvxxGlUY8dVp
APzNlW6sbESjBAwVqxwIAi+e+jm/KkGjFmbaPZ1JAj+dskhjolwoz0aR+hFw
WeN/qpbJLlTvZXcRuhyBPfYkS3874kLV7PvX6iZP4DPXiamZKmfqwMfD4UPg
f29mr1LazlRHXIas1TYCazDy6nK3OFHDnTtj9LcT+EHnr/P+zY4Uk4eDxrad
BNaxFis/mmJPpW648/0GOGabmoTcvB0lXP4rc8suAg/y8TAL2thR21aS5zl3
w/4FjIolCdhSZhdrSmb2ELjb8g/eQ7ei+vcyO3gpENjIK2FAuMSSch0y4/gE
DpRrnmyat6DC5MY93ioSmDH/eWFD5FEqt05o6yNlAs/9aTgx5GpGjU2EXIxU
g/yNH5E9F3WQCkqj8C/wLDaUa23UppZUNsz47iNwoZZOejwjpjijbxg6qhM4
d+Rwx7kFNUpR+A0T1iRwqvxJQXZZWeq/g7vCmTGBu5hlbvZMKCKBvHH7NH04
/5f4wzhjj6LTb4R2bzxEYL2z5yYrTlmgCRbd9Rlgo62ei72hlqjhWMGdXAPI
9+5eUSUXaxSgb/f7tiGBt2v8Hd+x1R71nUpqlTeC+PQK1t5wOCCdise5xWCh
vaSX2C8HtFls44EKYwJXaQSf0HrqhFrm2lOfmRJ42+TozD8hGlKU+0vDZgSW
fblBKC2ahvId5VSawByjY8PpEzQU2ho30GpO4PpeuZEnVXS0NV9Lrucogd10
i7+e0nJD57p9l60sCMyn++a1d44bWmDLed0HjpRlMQj97YZehSyEfrQksJpp
UGLNLXcUaVDaMGFN4CuCGzy5pz2gvwxd9rch8KfWzuff1T2RWeUGr1nwq4pC
kfx4T0RKeHEv2MJ5Uj737JiAF7pokfEpwo7AmQJrqdE2XmjtbHPlMth7VWSz
cY4X6pnfar/OAerd1beC64S9EdpmuisOfE6hij5s7o3uOf+3jtUR9jehU5KW
7I2iX/YVcToRuJIkS/G8N5r6x3ryAljb+J/uRVkfZKOiasLvTOCfDBcOhlr4
oF3XL84Lu8D38HC4DN3zQdnv6ltywEK3KiKd3vogpg0zOWI0OA/U1lnXPz4o
CIsFXAe/W1Osm9jkiwaOG2pL0wlcvtLyeWafL9K7f0LgNvjVZKFlkLUvqhgp
+ibnCvmw+nOvd7AvEhN6/+Q++POPM1V9yb4oyZApdZcbgYvue0Q1XPdFv84o
0srBPlI1qlsrfZHTYxdlZXcCK+DU5N/NvqhtMpW1Cvz957K0drcvUpZ81r/P
g8BmUiIl6z/6omtWkyVPwf7UYue+cV/EkbIpGnkSmLPpluDYtC8Ka9C3aATT
2J5Msv7yRZ8WjpO6XgRmMA3LKJj3RW7/bphR4P9u867vg+fjrF0n9nkTeGti
CP4464v8eFdvPAS/iObc/3jSF82KbOvY6QPfRxh8cx71RaGS1r+LwLJMmXLD
/b5oUT5OXMqXwO73XacVO33RKcVy/TzwPfVTDC4NvohBYzhIyA/y06W3zLPc
F8Ud3JCTBv7pqP7L+JovYjNSa+LwJ/BNfP6d0DlflGLhPhUHZuV96v4i1Bfx
OF4U/AfW/1Be7uLgiy66U/tPBBD4YoFty3dtXyQUMOX5C7wSkV/pLuuLxE/r
PfkWCOcrxV5Nb8wH3UgM+UILIjA//VdLRZMPItKucw6CC3Rnl6SvQX4U/HXq
Okbgh5LZQTvMfFDFXTLpcDCBO3mY2zshn1QrLMqbwRx/LH9dWPJGWk0PGGtC
CNycRfRF5Xqj+vaBHUqhsF8339yq8fZGOj1sViXgWwPrWeVVvZHRV/qdguME
FviTy93U5oUcWIWNk8MJnFL0qaxu0BON8OiEMUVAvv+iV4Re9URuIseuRYEN
Ov7IXnXwRH7y7T+DT0D9Vw+ecH3vgU4ans6wP0ng+cN/S5ur3VHOhW8fd5wm
cN0zDvdZ7IrEswTYi8BJDY7BjD/o6MZ1bUXJM5DvKxu3SGTR0d3y3DjBaOg/
Q1KnsidpqLrbVH4thsCk5NMzNUku6INwdXBnAoEThBXvyh22R48T+1X1E6F+
mWeJrk+3Qxl/Vv7WgYUsT5wz+GCLrD5oxz5IIvDaAeHV43Qb1JPRful8MoFF
NvHsSj1uiboEP1YaphI48eGRQUttU1QWv+5EE7jKh0tBqssYXfgtraVxgcAX
JgbsbV2MkMk7r+fb0qAeZaynrsUboI7Lc+/YLxJ4/0xdWNm3g6h1I8uflisE
vu5bEzNvoYjuxMrVogwCb2kWcjkZvxsl/jp8ugr8ciXhVm3gNqTXfYG1KJPA
UQZPP9GCt6Lmi5tEErIJ7PREdLCFd6Hu5nrNwVXwzqquL3bnuajYYKfrx3Ng
PZSEThmPClMHjhTKuecSeMZ48cLT9zJUPd/OfTpXCZxlZ1/b90GRuh5tuloL
7napXDfYq0yd/nmsQSmfwKhzb5Jgpyq1/81jA+lrBA7qERs8k6NOPU3DdusL
oF4NnBLV6MFUHoOreCT4brLMfweKtKmTQfGff4IrI9gT9UMPUOpmL30+3YD8
rMtP5Vk5SNXwWJysv0ng2seiu5fq9ahIHlu3A7dgfQM/SJUE6lOaPE7GzWCr
WtvDL4UOUXXcXhKtt+H82Bw5tMnEgDrD7c92uAj6sWvmnb3DBpQ2d/DPdvB2
P22zLI/DVDPXqabOOwS+9o52dsnZkIrnii42v0vgjc4290e7DCk9roQr3WBG
hj03p/YZUWxc56Is70H+ueqU8uYaUW2caZ4fwA455uxm80ZUMucVM9v70D9K
N87c1TWmjDhz9g2AtZ/qXRW7YExxcV6Tciwm8Imu22b3uoyp1xtubvgIXvgz
o2vKYUJd2HB33qWEwE+sLcM2aJpQZhseDH0GH1u56DPobkLxb3j4wu0BzGcu
is0tiSZUN0d16RiYMHDUfFdgQl3meJblVUrg0GNaKZyVJpQVR2P0BNj/yorf
8ToTSpijxcevjMD7jjdnCjeYUL3sHUenwdc66p7/rTWhctjfaAaVE5jlqGAZ
UWpC2bO/l50DJxVkq97IMaFE2Qe4QysInH7u9vnjUSbUMNvIn99gm8DVmlI7
E+oa29eR8Icwv09I7HTZbUK5sE20LYH7Mi/YZKwYU1JsMxUnKwmsKfC6hNZo
TH1hnc9dBZv/dsh/c8aYusm6FHf6Ecwffc9yf+81pjxY1/zXPYZ+YxssPPTN
iCJZGa1jwS/1Vswz0oyocRY2zFxF4KVPg1+UFI2oeyxc8olgazbl5fYOQ8qX
hZ+fvZrAvAcPvQh1MaSmmUVHOWsI/FeqcY95yGGqlFnyVSpY+0vljvI5AyqI
mXjM+4TAhl+jrkT6GlC/mPYkCdQSeHzmTGyBwSFqkVFnh+gzuI9txQ+4a3Wp
GkYDwXxwkjazeDCbLhXJaLImUQf1TVaRxmumQ62ut+mSpmAeERNV83t9gFq/
3i90ewP0yxpyy1NBRDWvO+ZYAhbIv21QYKdFxa8L09vdCPcdD9arX69oUGzr
zogoNcE8yrNjKWV2L8XFcPmp+nOo99eHZ89r7aHG3mYuPwR3OJ7VV6nbQdXf
ylXf+QLqA+9apuK8HBVqWFgt0QLzyF7pokJ1SWowo6KSqQ3mZ5YevXUjX+qK
d74pft0B/VAwpMxBcw8ysue+Su8hsN24fpjkZwNE7OIfHABPdB30wgyGiGGd
0BbLd1DP2AwEvogZocrbYtn67wns0s1rqW5tgkTndlzZ0Uvg+Job04nO5mgy
yfD8wgDMl4/mys1vWaJme9OOwEHIH7XPlzrkrVD+rqMbvoNn9UvbtpVYoSM9
dmcHhqD+bGewcyqzRk8kfOLrP8Lv5YobtYpsUfLjpP+SvxB4r5PHWKiRI9Lb
FPiJaxT6/QN5y9hGR7T+lKVuOnioyoLTS9UJndCW4sr6CvvXNCsdI+yMvDpq
8259g/6VPrl11MkFyey+wSA/DvWd9673zTQXNJKe5FYMVnjGuV+6wQVZW1vu
ePgd/q/6ZbqeOA3pfZ6urZ8kMN0/ovlmKw2t130noTMF8+WO2SvvZmiorqg2
tgX89WHX+RuCdKTin2T4+gfMBzddutc50tFsZ0Cp+TSBS8Zp/6VE0VGxouXG
d2BbjvlNN/PpSGZRcmBgBu6HCpbnjvXT0YgdG3KehfvF8/0e0gt0lPds+sZn
sILHIxY7Xldks/Udi8dPmA/sXwRulHdFG2Nrfb6DpX5E3TSG/vj6a8Frvzm4
X7lOFbFYuaLkQ0mKs+BqZtH/NH1cYb4LyAj5BfUmyv3H1ClXtJ7b8u8C2Mug
7IxQqiuqC9JwipyH8xGxjbvmqiuK7JZsXAVz8FuF9tx3RaqqbET0b1hfyUfp
XtWu6GfW9FmmBajPJW06x5tcUfFyz49EMFe9oN/fDlfk5VRrvuEPnE/alrE/
Pa5IpqHgUSr4WK5Duv+AKxqRTtrEv0jgG8e2GNiPuKK8hID/roCtT5y4UP8F
4v1u8UlkCep3i19A/ldXJGCkoZsH5nezylsAdz6QvCvxF+7zjpmdL0chXj42
rkLw9JO0OtHPEG/odBCxDPN8YqHE9BDE+6Gn5y5456s9d3EvxLuvVm3nCsyX
mdl8Qm8g3ryCvDLwuZn9PEGtEO+/RAblVbiPqvxWMatzRXO0ALcq8C05Dp7q
CldU0mzRqr4G/aL0fO+9WxAvqbGjDtyXcpJ1RybEmyyZpv0Pnid28qJEiM90
2voQA4lPjGQlyLlCfBU9te1gz1bmIWZTiE+wVsJ0HYknhlo+xexzRef6E79Z
riexUdG/IG8OiEcrwLAPzMOt8bZvlo7WX7codWAk8bvr33YuvaOjSHfJcFcm
Ev/3RnzcJo+OLu5ePT4Kjh77EawC+Xd3qTfUnZnEn6dee4440VHv+bRgTxZ4
rup2oVKUjlQf//P3ZSNxzoHe7P5kGjI5M+A3BX597HhdhSsNuR+u8vVnJ/G4
CDd7rAYNXR4O8A7kILGHw/yK9LgL+sky7BbCSeJtr9l3c6u6ILY3Na7z4Jaj
v61NWF3Q1twr9ONcJFY4PdUeUOqMTHYbu4Rzk1j/mUEOmnJCxdZP7U/ykviM
nZ2wkIUj8rqTcyRWgMTdD55KNozbojPBYeZMgiTGhhsCJsJsUabmEbN48ISx
33cDJlv0oovdJFGIxM8OjaV+FbVB0ksRBudESPyDnq+goG+Fhg2s8SVREper
5uUEnT+CLCc37iqUIbHiWIXvYpoeSkiajtkiS2L3na/lJZt00WPZtg+XwOhs
YxXfHx0k5BIVHUeQOGjQujvT7SB63zPe4y5HYo3X4n+tbDBiCW6SHwZXL/ea
PlFBSJUnP8pKnsSyRPG5FEoLZRgcldPfBvv3TTh062d1ZFX37KTcDhJrSzIL
PvJQQQn2WV3XwQOmZl9aBJXR48Vg2U074bmw8tX7LxWRkJJcJ/suEqutihKu
envQ+6KLUpO7Sdwpq2e5xEciFl3/cNc9JL5+c/JSd7cMUv2s3zEAFm2qmOIu
lEIZoqvHOxRIvDpPW33aI4qs0z3bSpRg/wR2jnrHc6CkXQfECWUSPzjg8HXB
iBFVt4uG5IM/2aRbiV9b3C/C8lb0ggqsl/jY933cVN2hwuJjrKok/rc5f/wt
24+6CJz44jT4A9t779P5f+t6IzWDgvaSOLexf1d0ORvFJiL8fBzcxmdv84mZ
m1J79HMTTY3EWyrXgqfP81FZM7ebzPeROFDcqdRBV4hqTYkWeQlWC78meOmY
CLUo7+B/QJ3EafP7zdmjNlM2bnzCShokdpm6oBa2V5xKWjflex98YYOWg/Go
BFWd/6JeWpPEtJlrNy5Wb6XGNQoE88B3OdqF/wRIUiJ9J30EtEjcUZ+/3UhQ
ijoUZkWlgAfXuW1Iui9FRWxUEGDeT+LnIsrGeQrS1J2yDd7/gdcxnGdJK5Km
eo3Hnv0G2/dJ5vpzyVBsk/X8AYjEEsu3ApCrDKWWlOs5BuZ36xjluStDecmG
PXXCkN/6h2jfh2WorEYzvg9gpYkO/fdMslSr83YPU20Sz/tzrYxslqUWV5hr
W8A8LM8+bZSUpeRyRnjwARIf7kl1OCEsS9nurXWrBieeUP4iuCZD+bhFDKsf
JDFby0eB1i4Z6lS6is0zsPq5W2li6TJUat3cG6RDYo5hPfZ9SIa6Pllq2Ah2
qYxT0BqQpipE/J/r6JKYJLY+NXKXppp1t6EWcIdDv33ykBT1PvhbtYEeiTWD
QptEdKSo8Ws3FTvAzpaltzZnS1J/O2jFJvokztCcjK0Y3Epx/hUn3oDzwv27
l7m3UuLk4LWjh0h8jtdNV89FnNptkb3pPbj6pW1P7RlRCkdbXbIxILHphps6
Tac3U0cebOQaAI9Q2xJbHEWoMLZUhpHDkH+/U/SCqzdSSSqGkXRDEguHqt2a
VuGjcuhs86PgcPUzSqQcF1X3NObbdyMSP7SsOv312zqq6zui+RmT+Fff2tLh
/j91n4VW+6fByucPruUOjdUxHwt//cuExGZfRs9wxP7YL5SvfCjMlMSXUn/V
cMas7Jdr/9mwCH44rd62ZM2MjGT9Hq2awf6diQvu4udHl/tc8liPktjAp7DR
nk0S3WYRF0oGb2mV3MlOSKNqpYELnBYkFih4pcRjKosGz1vG8lmSWLWz+dLn
BnkkfeCwzxZrqG+qnLFTaQqo4p6S2m57EleVd5k61WugrpMsPVauJI76yMTI
z2+A/p5sLOwCd26rLeCrM0Cyp6JCDruR+GD5XlZJn8Mo8tQC/353ErMUhEbJ
NBoimf/GzGU9Saz7Xu9DbaAJioh60fnLB/LprPDOtl5zdCMq5pq/L4m/5J7U
49h+BL2K2h/4Ddy5XenM81NHkNTpx9wDfiQu40wfOit+FHWcvm3cGAD1+9Dj
NQ87C7Q1OqE9LRj6i3TLtsxiK3Q4+kAuRwiJ/14ri2ufs0LHo9d84sDhgZdW
GdSs0cvoMI6IUOh/UXs+HqGsUWiMh4FzGInnXq1c+lpvg/JjpDb1gfuvpB8K
WrNBbTHD40fC4XwxXitrV7dF4rFWSXoRJH5rvHNlqNQWtcbqteyMJHHk1k9M
Pcl2aC52fWYRuFCBLc+wzg6JxdV5SJ4k8diId4vvrB0KjlNlETxF4u38j+Ku
mNmjvLi5d6lgsfPJkxlR9qgl7sEttv8g/68Hp+25b49E4wndFfDEay5BUQYH
pBf/WSAsisRHJNgL3eUc0LH4/NEZ8M6a6gQ1Uwf0Il4o7stpyIeb82+CshzQ
bPzbo45noL8MjES+eeKANiekSn8Ac+3QXikfcECBCSxNL6Mh3jmxDd9FHNHC
j6qdB2Igvh3fRMuUHdEpS++sGnDWWuzXFROYf59tZlSIhXpyNLmuw9MRJcl0
+N8B6/Y0+ImfdkTcKf/1SsSR2HCLOO3nZUd0+deug5ngoy0XOXXvOqLN9iMl
3PGw3qEbR0SeOqLrjekiCeDa+ktGfq8cEbHtYOwqOMiAtWn/kCMqTp//EZpA
4tC7tMoLk45IcemWzRQ45XRGutOiI6pxsW5yTYR4vbLb7zE6IdzKtmsAPGV+
tjiEywm92P0k60gSifedagutFnRCRpm+jC/B6rx6PJGiTujtmmiA9lkST/67
llkj6YRsPF73VoOFNCLkI2Sd0PCr0wf3JJPYsjRw5DHphNxUFB4UgXvMyN4w
OSc0kfdZROIciZ148I4aeB7EdDk2A/ys324xCn6/4Ks7zZUCviFi0wbvP9W9
YBMPJq03e2bD/zNq3GlaAWeYNA/OwPcl37DdFXoezrv3eo3X8P28HBuyJ8Ep
TFN79jI5oYxjTxldU6Gf3NQL3LnkiET7/AP6wZmdH24/nHJEN7BEn/kFqN9c
7kkdw45I7k7XwTaw38jD5shOR/SAJ+YBToP97D7L2VDniJTDlTZVg6e9i3lv
FDuiJ8OjsbvTSSy//VP01mxHhPUypm+DE4J1GVGcIzIWXGq6chHO+1O+EA8r
R9Rz6t4urkuQf2w7d4RrOSK7UfvsOPD7f9+4VKUdkcfDuoCQyzDf5ZU3vp5w
QFObg/omwOOZkW/KOhxQcIykDv0K1Ocf1mfMSxxQlHncJvMM2G/DZpWPPg4o
c8ageVcWzBP76/Zd/2CPxK2Xd90GP+9oTJgptUc364qzxbKh3vRnl0gl2qOy
8zyBnDkk3rPk3GWgaI9at7/bNJFL4q64lrHdp+zQX0+XwFvXSKxyPPnloS82
iO48v0ZcJ3FpdkhfQ5ENemmVlHoH3PXX976drw3K0S0ruV9A4ie6yeMcs9ZI
XZphqrwQ5o2Oh29tZ61Q5PA1r7oiEnMvu1tZ9VigJYuPtA+lUC9C5f8qe5kh
F6OQnzZlJI6x0nl+TdIMtR5kje4HE9JaO88+NkVZiruvD5WTuPmGMefTfBOk
xnt6+MtD2G9DLaeIcCMU0S5uP1sF9VJ0VvWuzSE00lgxcawa8iOsrDm0Xx8d
eqIX+Qt85wRvzkNHfSRyNyB7oYbEfyrEy1u89FB1Qt2HlVqo3zlSb2sv6qBF
bScL9noSHwsMaavH2iiC8+e+GHCAiJ3BgTGMlt7HSiyDja1MmUvPY/TX9+7E
VAOJV2JC/N42I3RSVbPLvZHEJcyK9ikSCK0wdD4aBkeJPm63i9qPVq/Mn+lq
IjG9L0ki7JAWinJJ9DBohnz05Do99FATrW3bbNQItgo2N0+V1kQM9Ui48jnM
x7POg/M8Gmj9RHJJZguclwcpQT/F9qGYSrFLvK0kfvOIsKsvVkOMp8sizv7f
WkJr27EaYhJ4f/BkG/TP9Ecmv0L3orhhL/l58M+r2Vw2QnsR891lbv+XJG6w
Z9QKeKqKWPZL9ju1k7gyqouvQUgVJbBVUh/AGqJebSztKoi1W++WWQeJI0Z/
CPLGqaCkq33JbWCNmZNnPmmrIDYvv6ADr6CffB+7eIZJBZ1V/GdZC3aMPh8z
166MOFbTNZRfQ73g9C9UzVJGyS0ykiVgzcjCGUNvZbThYhUL0Qn51mRCU0DK
KMXh8FQ+uKMzZe7rJmXESQ69Ee6C/Ug9edVrSQmd/xlYlQZ+zL7PoXpICXE/
XX+V/Q2J9wt/ket5oYRSE67ExIDdqzNXn1QqIR5zOa9lcJGfzYRvkRJK21Jr
HPoW5sGN9/jG85UQ75ix0g9wec2l6O258LxsRMSjm8RX7grP7c5TQnwnQ9aG
wReU1bbMFCihi7oso9Y9MB8X/6mkFyshft7sti5wm69NeFwtPO/fXmrwDupn
hcNmk04ltPFW3eVGsOcgi1XNNyV0OdA8UuM9iU0UbD9TTMpIQH3UuRKsyGkV
bk8oo8tM4bo7P8D9TVe7PsFIGQl2sm+/DZb6b2VNI1wZZWTn8Ur0Qr7oHzwW
dFsZCbntXsgEh637w7+pXxll7moc4O2D+Ypv6eM2fhUksmTRcBbMML6tJ8dE
BW1KjUw52U9iVv9CSe8eFZRjwxU8D5YdKQ4uF1NFm6WvW/sPQPwVvv3bfVWR
aPVzKedBEp+3uNGdwr8X5cXYsPWCfdoyqhz89iIx48kfZkMwf7032LDr5V4k
/pm35sAwidPVd3VnpauhHx4yD9rAqStcpZms+9DTyb2FZh+hP2h2KujH7EP2
v53OO42Q2K3XINQtXh1lsZXQIj+TWOu81+Thek3keb7eat0XEte1WtOP22oh
Vf4ewySwMI+1Z86CFnq3ZVklYxT6ZXpOUYAmQvy7DTgqxkgsufXh92dLGH16
6PBP7RvMU0r3jvdZaKMytaB5CkyFjwydLddGpgcyh1+Nk1gw3UAnKPAASrH8
WvF9AvZLu/ts8/JBxHwq2l5yBuYLufryfgN91MNwxewOmLYz/HdklT66GX9H
d/csnM+znz40yx5CBy507tb6SeKvaeIVIkwGKOqGGJPtLxLHz/lnbXxxGC22
1hSn/SHx0J61H4vmJqjF+FWB8CKJ1+7H3eduMkEZb0cy8sHVaW9XB5RMkcog
a3TxEswLjuarezjMUPCMpWXrMoljmy9ONH0zQ9qh3odNV2D9Nl3yoIubI96l
U+g92Egw8UqhhTkqXX9TfnQV5tltlaFzlDmKSqwS912D+8J+YnFu3hyZcLZv
nANb6DL8d1L+CBJLH2Y78Y/ELwPokfGOR9CU4NzqP3DOlJ8nR/oR9D8UZO0D

        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 0]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9., 0}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"0.2 \[Delta]s\"", "\"\[Delta]p\"", "\"0.1 \[Delta]y\"", 
       "\"\[Delta]z\"", "\"\[Delta]a\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1/3, 1/3, 1/3]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 2/3, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.5, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.769385957681671*^9, 3.769386032383911*^9, {3.76938606371821*^9, 
   3.769386085602303*^9}, 3.769387335814354*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
dvfuPfIwn3r6MQ+DX6n87okGox27Oa0Ok5GGVMGRLjCxmcbXCbbuQxdFYV7f
fKFgh4E2GUVRm7xOgX+QXIj14D2LR0QywK2dBNlDOmTUe7U+4CO4OHxIqRK8
YqgT9g98QyHrgKIuGSk/+ygnBfO+f7+lVj54SVXz4lGweZyAvuQRMtoqG+/u
DFbb33ksA0wee/QrBCw6kWjFp0dGIxXXZOLA/1IMHBLAE8v715LBI5psZ1mO
klHfao7LLXD9XL13GNiJt87/BjjvTkTQKlj6djIhBhxnoBHurQ/5JPPzfCDY
c/1XzBR4r0+GvT3YNO/5dUcDMvLaUrqqCVY280/rAxs+TNAQAwtu2nP3pCEZ
NaxePrAM61srmXnUBv5SPrDwDtx3qrBY14iMAhLWzl0D38s62tcMjs1/aGgA
dur9wWpkTEYJtmd+MIJlhGNVOsACR8L0SmH/Z82kHE6YkJGJ8nSoFbgspeFa
D3jvkx3Jv+A8L3xyfmVlSka1KCbjJpjBKJfv9DEyKv4++KYc4qE+7jDMflC/
Qgp/7wdfbRr1cDlORmymue7PIZ54tSUbPE6Q0a9nGdg9iLeeiNrFOfCq3YmP
7ODMN/bifiehvp4pm/aSpmGkg9lBwWZkZMewfSdJCs4/6NDDP+B/7hmuARDP
Tyr7P102J6MHZkv3ayHe9yntkP3PAvav1MFWB/JBTyZ9INmKjOazqn6zQz5x
uqqyC1pDvSzQ/aUA+fYpt2ffbbDE47BBI8hHawmBpLs2ZPR1rmzgIuSvp1Cy
VpEd1Kux8owHkN9KZnvOK56CzzPelntfGObn5I7MMnCNya7nd6AehHNxr7yw
h3oQ33wzFupHMktC3nsHMjIacHi2F+pL5VI055AzGZ36wuvIy0bDNj4G92zz
IiOK1tebrCtUTCKAKzsZ/HFd69PQEhVD2x84850noy3tfK4v4T4d7vRhmd8b
8ufespoP3LcZ18X4hH3J6L1959VVKhUjZJf3poOfHvUpHpyG+n1Y776IH/jw
n5NNUzAfXPPZs8OfjLQV/YseQD3eRKg3EQskI6u9xuQwqN+kRkuhu2B1j5SV
i1DftT1mBsUvkNEunnN6l0fwf28j6CUZBD8P0/qRCPMni8HZBFIIxPejRemB
PipGmf974iH4pYXIjt8wf+reSt5BCSWjg8ZTZ3aC/xuqKpS6CPWjYavl+a/Q
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
J5WjIvuZ9wWJD8/MwfeiKnJOwP8HoAvCVA==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9., 0.856}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"p\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.769385957681671*^9, 3.769386032383911*^9, {3.76938606371821*^9, 
   3.769386085602303*^9}, 3.7693873359775877`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Hymc91s2nE4YPQt486Xh1HCPwmE6kfWL5+X3BW61tYxIrOehK7x546l7o0Dl
CJ04hK/kfd58yYgry47Rya/3Zrzn4Rt0OL4yhk58pevkKVtUrAzQPUEnQ+f+
P39+LGV4ck7Sye84J978Sboo7mgYSyeV+v0SvHnlO2Sy7jT6L/r/55dkve3X
nRfoZIlnxDiv/t8bntmUSCdiHRxeXqz4vnSZURKd2HEmflL2ncfvz0qmk1RF
N959qG77vZ9Dl+kkT2uQd95e80m50JVKJ36y+3nncejhY6sartBJesjvD5SV
r28PyUujk4Gxt7z5dmxQcDIkg06CK781UnacHLm85wad1G5iNlBeLvZe3zET
80c0+CXlj5oFh8lNOpkQDHxOucj4qqJmNp1srVhQTTne5mQF/RadyFzt4eVT
EurEL3CbTjaXlfHm4dfLq0y+3KGTixtn8+bhpSciMS/v0UnTmv/Pw/W9H1/c
y6WTb75dBZT/CBYJJeTTSXOrax4v374KLbz1EP2Qt5PXnw3n1zg9LUE/nlt8
m9c/f1JWviqj4/53nXffXLP9r1BHOV4/Npv39ZZTOWPdTzCfn07e4a3n4+09
fRV0EuPB5eVloe/CdUNP6aQ05wfv/W7QSgt/VNJJ8tGOB7z5t2Zezr4qOkks
F+fNA4Ot3mm/4YaCaN7ziHpXXQirppObMsd5z/vu6MLYf3DvViHeetxM3RcR
8YxOjJf/461X0IOXQfzP6ST6wKZaXj5vYHpFw3tHR3nnifjAQac5L+ikMKeV
Nz+6prXYnIJ/ZcXy5kWOnJrF3Bo6kRc5xJsXIVrHDM7BBlPxvLxlYtG1UroW
z5dx6wcvT7qtVL0IS7By/lLuOXhacUEdnUze2C9A1eOBu/rCtJeoB8O/Crzz
+vmFaRnwupthvP6S6fk6xq6nk3q5bbw88OmPyVA2vP1tJy+P5Epc6Vn6CvPE
KI93fzy05FfLPXhbYbgfr1+MLeu0GjAvj/RGU5ZzzHxSCI/zn7pCuX/fVKHO
azqZ88f1Ia//TtvmlMA7nrKbKUdm3k3jNKK/FQTHePmhXCCxAj7asknOmOrn
tp2xa9+gvwqsDCh/+f4g4jks5xS4m/KDOXP3mzehf3QdL1I+Qvf0qocj2Ytf
Ud6sW+60qZlOWkNvz1kLh5WI/HgNv3d5bEb5uq5D5OYWOtlE8D7wy5IsiTew
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
xdpL/2JesObc3Ek976W0S/fg15KHnthSzzsVzbd8kkXiDFMPb4R/OPm4PoBd
VV71G8G3K7c+X/0P/eEvOL6Kel72GtUyWOWnf5EK9bwnFOMMprC+J1epLqCe
z/Kr7To+Nnll779sgtrP3KbiWphuuvrFZ1hqXvEiy2lssvLO1KJm+GR7dL/1
dDZJqmqSzIZN9HzM22DtVMaDeHj61a13t89gkyYlb1YoHOqmuN+Fn02EiwzC
1sLx6pP7PsFvL534pkzloz+tgW4z2aT/cLSFCNx6Ks7fYxabREaOv25A/a4s
nPLeI8gmVocXHjGHNx7u8BqCI9ZcKGLDbusf7PGezSZfK/unpsMJXT7/7Z3D
JjMWjdQVol++z+pyDRBmk94Hi2dLwYKvH7mMwo667RsH0I+LU8477xNhk3cL
xl+VwhvVN+zaL8omCs1Zl13hHNsSh7C5bPLezk0mG/3tmZW8OUqKTb6JZUvK
IY8d9g/axD+PTeYqtIv0YT4k6m62Ogonzmi4dR+ubpi9MVqaTWb+ucw1hel/
gs1OyrLJPt9kUz/Mmy4zW3JuAZucHD/vXYp5ZT0oqXaNwSadZx2mdhtzOcdi
vkbKM9lk3kj72Bq4kPni7Tl4Z+5hGxFYeld4xBEWmxiu+73zPvJaS9PnJjcl
vF/pDZkpQy5nlv9T5S44Ztyj7g28Uiw13EaZTbbGPRG+CV8w26JkqsImebZr
Da1hm7LSMCVVNjnbZjGUj3l8zCGp4Sr8KXuJz2m48Lc/c/5SNlFawEz2hKW1
lF7NVmOTcJVH/xTglsx42qA6m/S5GO1IoH7/c633fpdlbMJQVo8PgFd+MK3r
gFcsqDi+hVC/LzO5r06DTXLKdevnwbZnPV7c1mKT3ekGP69Rv/+rZqjAWs4m
vpXRZ6jfh31YuyAgFX5/4+Y0X+r3Y2c1Ljizgk163l4J4FC/D30tx09gJZsM
FEcFKcHBJLr6EGx00tlWAm4N1fX1XcUm7dLLHn3GeSQoK1P1GY71VNNrhrUL
vs930mYT2UaTjAo46duNp5t02KTx3Culq/Dz2AjZGniJ3+e1cfrUfWy7t+Fq
NhHKVjKPgO1cxWW01rDJuOmQmDscM21ozy34rY5Nwzb4YWp1OV2XTZqv5odu
hD+vSZt3Cd7+NFTMGJZtC9stpccmb/rlz6yG1wXZPI6FLfPZ4xpwsKSG1Ex9
NrEY9t2kAmfdE/rvIDyPPy6BDrdu6Cv9CbtO41YspJ5vsFzCh8Mmw3++dchS
zxeT4tEH75viey8FezKDSnYQrD89placet4KK/G38IZg7lUx6nl3LnG3NGAT
CbGLO0Sp5/07s/gZnP/nxwzKSsndYsSQTbhmLnGUt60qdn0IH3yUNWMuvNs1
uGu1EZu0DSgnU3n+wNkVdqWw9qpletLw6bIfrznGbKKoXf5FTp/6+9C75hXw
wqiuq4vhXFnvKuO1qM87ZxzZcOVaFc4z+L9NrQrqcIt//0MzEzapnlb6YRW1
nleua9bBW2wMMw3g8TqnnI2mbHLnwd7dFrDwuALrNfzpUp6KHazAfndlyzo2
ifeP7HWF1bdenN8CN6+vT/SHSYTNOTszNqlZdVyf2t/NdyRFOuDT5hkt1P4H
CZ7m617PJn/UX9TnUvu9wjzU2RzPyyhQ+l8Fdx5PZfbHAVzkUklayG5kOcUr
tM2YaurEMPgxQ0NMQoQWexRZrtxrz3LJEiIpRSKVsiSiso6StKAuyaRECxLZ
fp/nz/fred3nPvfccz7f7+F17kM400l0fACeiW45+BKuqeYMfjAldM14acwC
5nz5h52O7maELqr66rIa7pea7f4E97J7ZbRgYR//R2N/YjwsBaeY8+pSOZuN
jv+F+X3KWp45T7629WvdJOy+PFOEOR9uquZ+a9Yc+WBJ1BuZ8+Bd+8+K/E2o
iffrlduxvi6xFKViYfXrCsK2cMWmnkQxS+RjsfHZQPhVvBV3uRWhGpcmC+/A
KnomR+SsMd8WfK/7Hev7xpVNutq2hD7J2XjJE3nRHsTq3HMA+SksGDyLPPoR
VH+hHf7WMdKkiv5MLZjta+JM6LJjfjKmcGDwxIodLoT+tFO/LBNWDXlnoXYQ
eVDpbPsL+rcAdsPjsSOoL27qvUeQh3lszjkPN0InFcaP8eA29g6vQbhLOeXx
LXhN6G3xHndCL0geq56H/w29ZFbvSajO0b5VPCPke1hkK+8ooW38RTlMf2cS
ppe12JfQ9gvkZi18LGzuSDjsH9b6dy/cEnZ8cYAfoVSgQEMBee3HcTV2OE4o
a+ZObzKcw1kj0wXvbjgyXwI3c/jvd/sjn6RCU1pgRe6eaMMAQv8YCFslgPrQ
xDVsXB9IaNpOD1VneJQrmH4Z3mwdUhgEK4TXuCoHEdqokp2UDB8N/5klGUxo
bVEKtwY+Gz76LAGWf1wa8xRuDC/JFw0h1Mnf5eMgLB+hbjADXzURrxJn+tGI
/lXH2agHW7aoKMM+ETkDn+HibNU3G+GGCKnwt6GElj9kWTPnb75EdPxtd5LQ
9X6PxJyZv4dGJqi8gNeyRVf6wl6RrPstYYQ6ckLEEuGJkfL1ehxCPbPUa7Lg
YKvDZyph89wv9ZeZ/veurNAGLuZfbL7MTTha9V+PAphteqvuLiweF/JSKZzQ
wih+VSOcMqalnw7zX/UufMK8v21fsXgEobIj/ue64Nz6JOlIeO8/LrFvYHUN
fe4sfLbe9eF7+GrS+IhfJOZf81bzz/DGqXybYVhaIlfjG1y53/r+gSjk2c9W
lj9g2iSq1QOXK4q0zTHjoV11Znc0oe917VMEUe9N092EWmCZvodXhOGOOXnP
XTGEnr5eKyEK27g+elkB55i0NSyC+W2h+jqx6EeMvNsWw85bNpRchiONNNSW
wENn+6WVTmE9DAY/Yq57L0zhpsFSDz40M6+fcDP4tDSO0A2Bo6uZ+wc/nbCJ
gBMuS1cy7y+0reD+DPxRtrSYeb7YvH+0/OIJzdM5PME8v8TiJRkfYd93ISnM
50vzqRY6kEDojbm1Mcznl+/y8OyGb27Lf8aMTx5V6rJIJLTVYX3QB3htQbt+
M2y2fiawHy5ZximhPEITXU2fd8Ob/TfJVMADbTYJHXAVf4CrnUToebV9F5uZ
8TRM+3QJPjgaK3MPNpOcup+ajO/fU1q9CO4MvqK19DShoVdYdefgvQO2GeGw
sV1S3WnY9WaNp28K6m+C4PQJeFjWu2sI5tOrv7jDRznKvzulEhr/JOCNHcy2
CJexSCO09JtA+E44/bPxA60zqB/ZQ7/OYD0oWk9rXYIlWTlSQ/DFmqsZChmE
2uv7+7yAS+OXeYllEnq8wrKolFmfms9khrII5VWl+drBPw7u98o/R2iVXUla
Htazk8P4nHou+rHJ605RcMue6IQCWNN8e5MbnGlQWlx0ntA7rps9N8FbVQSG
r19AXnB1U2uQJ4H8c4dqLqOf9expa0QeTVn2Or64RuhYZpFXPfJuv6nvV5tS
Qif4Jlp5cJO+SFg3nLzbU4QDn9monfv6OqHD3kXSerCuRCj/7U3cT7V/zQPk
Z0Crou2XctQXcl7xKfK3r/7GkE8F8tLFweg2bFRlGDgGV9iNNTC/LyFd6Jkx
UYn+xNCv3RGuiKx5MXOH0K19vocn0D9O7rK3XHQP4+MTsnEzHCD29VcOHNEi
G6EETz3nKk3DyVETfyyBf7gVDg3XEbonM1RtAPUg6Oft7S716D/UK/SfwDMC
j2/xYWWuQVcNPJs6frL9PuZTbrNPFszeH+Vq/AD3n2/wj4XnNGRN62Ezntr0
CVjg3s7VZQ+xHt0L2HthwaHY4vRG1D/W5gxlmFOmcFqiidDFzUVXVsFCoaUB
MXCVh6i+KLxw1XP9oGb0e+7OS77uYs4HHlo3DktIemx/BwsXTot7tGD+OVZM
9MCsHcrd9q14Ps66Rc1M/ytaVvsCjsi3cboHizw1zDf/l9DvIq8NK+Do7K7Y
ZljeYlt5KSx6yN1brw39a7BkWSEcs3He6g4s2yu04wK8eDZp2+ZH2H90jFpm
w7GNqsrFcN+RB5Pp8JLkcpb6Y0It7u5ddxqO22cynAPv46e/Y/pvMfL6yep2
9DP9djqn4PivXuU8+Ds/gRUNi1cLZi96gn54UOxwBJwQmcrhwHIrqqy58DKL
tYemYc5oYEcYzJO7Y+bXgf1TpXfXSVjindmmEThdeK07Y15pn7TrU0IP/PQh
hvHyIN85Pvyr1cwG5vXJBqwB605CBT4XHuDAKyQymtvhXN2tiuHM9W7Na8bP
CJ0L/rY/El6ZX5NSDwuKqGrGwCleFoHbnmM+KYsHxzH//9s64FAGp62e2c1j
ri/0N1j/AvVjzuJaCiz5eJHmJTjxzUEe8/staRlnJZReoh+UEvqWw+xHnLUn
0uES9zc9F+F0rfoeiS5CF5Td0y+Cpacs62JgVrW95g1YJiEwLqgbeWL6yK8O
zrRZenQczvST62S+f1mVXGuPHkLrsxRLOmD5iodrHF4RmsHxb/sPPsuxEX0J
P5jfIvEFVjD7OGL+mlDXOLmmH7Biv0SlHp9Q68Ig3nLMxxFX1ZJm+Jgmd4kS
XP3xlwvmvYS6Gd1eth62/WYfb99H6PZO8Ssm8BnRYsfAfkLV/Ha8PQUfjL+3
Z8Fb1KPjg07ZzH5uRef/omHb3z/tuQY/k5vekjZA6C5xNq8TXqFtvPjGO+wf
NGomVbBe39zcN687iP2gklCLLlyq6z1eCzuvbPluBv+ll85ve0/oylUvbU/A
cVb/3fgwhP3i/fahp7BwcJit8mdCC1Lnf0tFfnQKpJoXwPo6ISYl8MWIAgPt
L4S6pFSHNMJ6iY+1f/uKelCUbfIDZucpLPxnDOuzt1vOEfk12VR5lfcd+wfb
yAQd5FujWdv51ZPIJx1rFxM4raMvLQeO+pKl6QxveSUSdnUKeVD6KSAdPvrZ
yqppmtDmpsiqGXiX32GTv2YIfb7WslQS/aDEVPDO53CDCztIC74meHHdwCzG
46RZhAPMjipXdJsjtGfpyF1/+E+x1pWjsEHe7dpEWCGJL3piHvOtvjjqMjws
OTo7D1ePPVtRC/8fmzRyzg==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9., 0.899}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"z\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.769385957681671*^9, 3.769386032383911*^9, {3.76938606371821*^9, 
   3.769386085602303*^9}, 3.769387336129293*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
WrjXw/+efwI+2/aFF69PjbdYyroJiP4OK+4Ro3LD2l4CEnS/ivcrHou/1f0D
BNRo8hjP/7v9Vfm2g1Cfxa1wCzoHJw6CjyvT4Ba5uOHydQjmAWFHvH5I3lli
HhuGfLHai9eXot3PVp1GCOiN1xhef2TyvYa/gS1H7uJWfDX3fGIU6k8vC26N
/kmb6W8EZBZMg9cznVln6dlxAvI9dQ2vd4a/R/7NTRDQdzEO3Cas9l0/JmH+
GsjC66fZ7oH8n1Ow3gX7cFvKHg9e+g75n9uJ11sb7W7TlWmYz+Yv4nZ2al9d
nyWgdK0PeL0+43uodXOOgFKkQnF7Xm1N35qH/hG/D7dPioH3nx8E9KF2Ca/3
/nkNutsLBCQv+AJ3+LvqGeoluJ9HhrhjZyoS6VYISGxyGe8fGTJPhlk3YP2i
snE/88mS5v5NQPVDnbiFR1P2rv2BfOMSxl9//Ujcnt5t6Ic/YnHX0NEVtfwj
II6Zdtyr1WFSr6iIqD1nN35/TnsvSd6lIaIjxDbcd7/9LLhOS0Q6FST8edvv
eUgE7SCiMKdQ3OqMjhRbeiJa01fB12vXpAlJmJmIzgvX4+trnNH8iJWFiE4d
2YvvR+gxRPwL/iB2D/ds/T7C8E4ikpwLx/dPLOjZw3Y2IiJH/8ZtLb9XvJad
iF7QXsbjoTFTTCybk4jSl2PxeHHY+nqKfxcR/XegE/eWVXpWIpiaThCPL/md
vKIRXETEhp7hzrjMIuLMQ0QH/BZ3YfazWRciCRDRLelqfB5b0ksNzwcjl914
fHvJqUxKChKRk08Ibnd6/1IZISLilVfH88OufA2p7iaiPX/y8f6ly7HmZiJO
RJtrx/B5sPZ3yvs2sP/PPNwa35XlzAhENC6/gVulxm/zGJGInhek4fkp5bka
Z08molWpTjyfOVpXnl6QIiKuQmkxzDdfJHOvgG09/XEzZykFXdpDhP2sxb3D
/6Ju8F4i+ilxFO9vG8SV7qsyRGQe7kfAn5c9WY1eloh+tVXjXtxSzLwOPspM
h9eX2U7fMzfliMjMMxn3cNjyr1QFIiqaz8H7YZ+1YmO6IhEtPyL+vz7J+MZn
K8H13LJwNw0uiRTtIyJjjRi8vtWUKUyXqhBR8swy7texPs9fqBJRTpcNXh+f
qC7pvVWD50vchdfP3nLZN8/U4XlyHf9fTxU9ZXMPENFn6se49z59/ChNg4gu
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
ns3+wObRyl1/k8Gy3q9TlrG/j5n+5M9rDetv1MC7ASbqmngIHZdA+qFj2dj8
qezNMPEAc7xJIS3WjzKa7MVsJJDSX/VrDNg8tq5lQT4B+XPoThP2+ekV4p/3
BWDx9xdI2PdZCeZv9PfYSiDrnxUneMBlRUr75eygXmy66glh/fnL4vPnYCFO
hY3d4N4dpXuVT0K9UHcNEwNPK5zLqwCXK88PEsBbDpKi/+vYTgOpzv4wgEt1
K5nGEsWkEjqTFkpT2o+1v7USJUSkqzIkGjW2G1oUGiTXkhgkihaVncZSpCxZ
SpKENF0uI5Kl+D+nl58XrvM7y/c85/zu3bCf0J0l2eIqsHjIh+gCuCPxniRh
+S8vSWqrLep3ZJXgV1i92y7kH1jVpp+vCmtJK3B07DAeeT/JrWD7P23hPYal
XaRdWb52dOGPbj9AqDz5FLUK9ow196iCpw3+eVkNDqqQFBrbEzra0nFQHY4d
quHWwpOJejNXwxmKIe27HAhdNKP8NHOxqYFVI3ygllfNXOfNadxzEONXENvH
POZdmlwHG93Z1s2s4uPnYeiI+lwgm8u802ejTjkcbLnJkdnLZ1hq6yGs9/dl
Avb/U3yyOnLgw3VPjZhrfVyzVnPRXymh51l7x3xUA27Bxx+YXWPPo+zbvUvF
Ce3bYxPGntfUN0kxAd7Sju2R5RFf24H5hwk1TjecsZx9vq98SQRcNSM7ZBlc
4/syTPwIoevNPPpYf4/4Rhw4B0u/e7xiKazkZ6ouchT1fc9/25XZ7638ntQO
wq56dTJsPJP8AhJcnAlt37T9KRvvar+txz7C9XJfrdh8WMLLnvPmd0L36V6T
l4WNee5t5i6EiggPGkjDJ3mrbtfAhr9N7pVg9/G8VJNSV0IFNrtlxeBhnoPC
5mOoj68annBgxdMLhQ/hkuellmz+ep6OCkl3I1S7SETpG+b3Yv9zz8LcCV3S
F23XCxv6a8eJeRDq8ruK6r/wH/4TR8/A+ieMWzrhKn9PsVMnMF6D7sIW+EQA
18DOk1DN54v7K+DKQP2KlV6Ehu9y/RTPvo8SKMq/AT9qH98dzd5PnCnmKnpj
v+jrzoyA3c+s48j4YD6eDV5zHl5wdqneN19C1UM4EcfY+4pznLIqf+w/j1q1
t8LDwpyV2gGEti1RltGEfSyOROfBuh+lOlazeqT83CUtkNC53addVVj9Kw2f
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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9., 17.07}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"y\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.769385957681671*^9, 3.769386032383911*^9, {3.76938606371821*^9, 
   3.769386085602303*^9}, 3.76938733626542*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9., 1.0349000000000002`}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.769385957681671*^9, 3.769386032383911*^9, {3.76938606371821*^9, 
   3.769386085602303*^9}, 3.769387336443079*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
c5+0Rv8D3xD0Xw==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9.5, 0.5175000000000001}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"PYK flux\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.769385957681671*^9, 3.769386032383911*^9, {3.76938606371821*^9, 
   3.769386085602303*^9}, 3.7693873365990677`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "is", " ", "my", " ", "new", " ", "system", " ", "used", " ",
      "in", " ", "paper"}], ",", " ", 
    RowBox[{"including", " ", "signal", " ", "dynamics"}], ",", " ", 
    RowBox[{
    "assuming", " ", "fast", " ", "signal", " ", "diffusion", " ", "across", 
     " ", "the", " ", "cell", " ", "membrane"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"maxTime", "=", "10"}], ";", " ", 
    RowBox[{"t0", "=", "9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", "3"}], ";", 
    RowBox[{"\[Tau]", "=", "0.01"}], ";", 
    RowBox[{"\[Alpha]1", "=", "1"}], ";", 
    RowBox[{"\[Alpha]2", "=", "1"}], ";", " ", 
    RowBox[{"\[Epsilon]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{"s0", "=", "2"}], ";", " ", 
    RowBox[{"k1", "=", "0.5"}], ";", 
    RowBox[{"k2", "=", "0.3"}], ";", 
    RowBox[{"\[Phi]", "=", "0.014"}], ";", 
    RowBox[{"d", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"h", "=", "3"}], ";", 
     RowBox[{"\[Tau]", "=", "1"}], ";", 
     RowBox[{"\[Alpha]1", "=", "1"}], ";", 
     RowBox[{"\[Alpha]2", "=", "1"}], ";", " ", 
     RowBox[{"\[Epsilon]", "=", "0.01"}], ";", "\[IndentingNewLine]", " ", 
     RowBox[{"k1", "=", "0.5"}], ";", 
     RowBox[{"k2", "=", "0.1"}], ";", 
     RowBox[{"\[Phi]", "=", "0.05"}], ";", 
     RowBox[{"d", "=", "0.1"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"basal", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"timeCourse", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Tau]", " ", 
           RowBox[{
            RowBox[{"p", "'"}], "[", "t", "]"}]}], "\[Equal]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], "  ", 
            RowBox[{
             RowBox[{"p", "[", "t", "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                RowBox[{"p", "[", "t", "]"}], "^", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "h"}], ")"}]}]}], ")"}]}]}], "+", 
           RowBox[{"4", "  ", 
            RowBox[{
             RowBox[{"z", "[", "t", "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], " ", ")"}]}]}], 
           "-", 
           RowBox[{"2", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"p", "[", "t", "]"}], "^", "2"}], "/", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], ")"}]}]}]}]}], 
         ",", 
         RowBox[{
          RowBox[{"\[Tau]", " ", 
           RowBox[{
            RowBox[{"y", "'"}], "[", "t", "]"}]}], "\[Equal]", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             RowBox[{"p", "[", "t", "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                RowBox[{"p", "[", "t", "]"}], "^", 
                RowBox[{"(", 
                 RowBox[{"2", " ", "h"}], ")"}]}]}], ")"}]}]}], "-", 
           RowBox[{"\[Alpha]1", " ", 
            RowBox[{"y", "[", "t", "]"}], 
            RowBox[{"(", 
             RowBox[{"basal", "+", 
              RowBox[{"s1", "[", "t", "]"}]}], ")"}]}], "-", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"y", "[", "t", "]"}]}]}]}], ",", 
         RowBox[{
          RowBox[{"\[Tau]", " ", 
           RowBox[{
            RowBox[{"z", "'"}], "[", "t", "]"}]}], "\[Equal]", 
          RowBox[{
           RowBox[{"\[Alpha]1", " ", 
            RowBox[{"y", "[", "t", "]"}], 
            RowBox[{"(", 
             RowBox[{"basal", "+", " ", 
              RowBox[{"s1", "[", "t", "]"}]}], ")"}]}], "-", 
           RowBox[{"2", "  ", 
            RowBox[{
             RowBox[{"z", "[", "t", "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], " ", 
              ")"}]}]}]}]}], ",", 
         RowBox[{
          RowBox[{"\[Tau]", " ", 
           RowBox[{
            RowBox[{"a", "'"}], "[", "t", "]"}]}], "==", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             RowBox[{"z", "[", "t", "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{
                RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], " ", ")"}]}]}], 
           "-", 
           RowBox[{"\[Alpha]2", " ", 
            RowBox[{"a", "[", "t", "]"}]}]}]}], ",", 
         RowBox[{
          RowBox[{"d", " ", "\[Tau]", " ", 
           RowBox[{
            RowBox[{"s1", "'"}], "[", "t", "]"}]}], "\[Equal]", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Phi]", "/", 
             RowBox[{"(", 
              RowBox[{"1", "+", "\[Phi]"}], ")"}]}], " ", "\[Alpha]2", " ", 
            RowBox[{"a", "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Phi]", " ", "k1"}], "+", "k2"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"\[Phi]", "+", "1"}], ")"}]}], " ", 
            RowBox[{"s1", "[", "t", "]"}]}]}]}], ",", 
         RowBox[{
          RowBox[{"p", "[", "0", "]"}], "\[Equal]", "1.01"}], ",", 
         RowBox[{
          RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
          RowBox[{"1", "/", "s0"}]}], ",", 
         RowBox[{
          RowBox[{"z", "[", "0", "]"}], "==", "1"}], ",", 
         RowBox[{
          RowBox[{"a", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{
          RowBox[{"s1", "[", "0", "]"}], "\[Equal]", "s0"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}], ",", 
         RowBox[{"z", "[", "t", "]"}], ",", 
         RowBox[{"a", "[", "t", "]"}], ",", 
         RowBox[{"s1", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"s1Sol", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"s1", "[", "t", "]"}], "/.", "timeCourse"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pSol", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"p", "[", "t", "]"}], "/.", "timeCourse"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ySol", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"y", "[", "t", "]"}], "/.", "timeCourse"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"zSol", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"z", "[", "t", "]"}], "/.", "timeCourse"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"aSol", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"a", "[", "t", "]"}], "/.", "timeCourse"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"a0", "=", 
      RowBox[{"Mean", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"pSol", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"Array", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"0.01", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
             "100"}], "]"}]}], "}"}]}], "]"}], " ", "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"ATP", " ", "concentration"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"y0", "=", 
      RowBox[{"Mean", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ySol", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"Array", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"0.01", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
             "100"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"intermediate", " ", 
       RowBox[{"metabolite", ":", " ", "TRIO"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"z0", "=", 
      RowBox[{"Mean", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"zSol", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"Array", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"0.01", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
             "100"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"intermediate", " ", 
       RowBox[{"metabolite", ":", " ", "TRIO"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"f0", "=", 
      RowBox[{"Mean", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"aSol", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"Array", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"0.01", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
             "100"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"intermediate", " ", 
       RowBox[{"metabolite", ":", " ", "TRIO"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"s0", "=", 
      RowBox[{"Mean", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"sSol", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"Array", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"0.01", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
             "500"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"varS0", "=", 
      RowBox[{"StandardDeviation", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"sSol", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"Array", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"0.01", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
             "100"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"varS0", "=", 
      RowBox[{
       RowBox[{"StandardDeviation", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"sSol", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"0.01", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
              "100"}], "]"}]}], "}"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
       
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"sSol", "[", "t", "]"}], "-", "s0"}], ")"}], "/", 
            "s0"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"pSol", "[", "t", "]"}], "-", "a0"}], ")"}], "/", 
            "a0"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ySol", "[", "t", "]"}], "-", "y0"}], ")"}], "/", 
            "y0"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"zSol", "[", "t", "]"}], "-", "z0"}], ")"}], "/", 
            "z0"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"aSol", "[", "t", "]"}], "-", "f0"}], ")"}], "/", 
            "f0"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "9", ",", "maxTime"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<s\>\"", ",", "\"\<p\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\"", 
            ",", "\"\<a\>\""}], "}"}]}], ",", 
         RowBox[{"BaseStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1Sol", "[", "t", "]"}], ",", 
       RowBox[{"pSol", "[", "t", "]"}], ",", 
       RowBox[{"ySol", "[", "t", "]"}], ",", 
       RowBox[{"zSol", "[", "t", "]"}], ",", 
       RowBox[{"aSol", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "t0", ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<s1\>\"", ",", "\"\<p\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\"", 
        ",", "\"\<a\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Lighter", "[", "Black", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Orange", ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"aSol", "[", "t", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "t0", ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<a\>\"", "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1Sol", "[", "t", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "t0", ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<s\>\"", "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"N", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"aSol", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"{", "10", "}"}]}], "}"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.769385819988906*^9, 3.7693858200629883`*^9}, 
   3.7693858729382563`*^9, {3.769385923018053*^9, 3.769385948678588*^9}, {
   3.7693859970127907`*^9, 3.76938602662453*^9}, {3.769386060258065*^9, 
   3.7693860602685747`*^9}, {3.7693861547111998`*^9, 3.769386187364188*^9}, {
   3.769387369865275*^9, 3.769387388570437*^9}, {3.769387459967669*^9, 
   3.769387460333907*^9}, {3.769387542344287*^9, 3.769387548772668*^9}, 
   3.769387614899496*^9, {3.769387649956594*^9, 3.769387661418262*^9}, {
   3.769387698814707*^9, 3.769387700370761*^9}, {3.769387749802814*^9, 
   3.769387785143731*^9}, {3.769387841962373*^9, 3.7693878690420237`*^9}, 
   3.769389097191293*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1:eJwc3Hc8Vf8fB3AhhKRkJnEvESqpRNHnWBWVlSRUCA2lIcouSbaMlm8ldc+9
p0JDVBpWSlZJNEhIgzKK7PF7+f3z/T6eD5d7zufz/rzHcaPifsDOk5+Pj69D
kI9v8v/CVrfxXxZ1SN5vyqrDDMl+/mypBjxrafCJvb4MsV9V7WUDPxVZ65F6
hCHXNDorr8Kq/uaK7/0ZslpA66LxFBaVbnC/USaIId8CVlbugX1mM0OywQyJ
67GYSII7XqRNlwphyMfPuz1b4XtUWlt/KEOOPOQuOcnPovI98v76hjNkzuI8
j1vwlS3ubqYnGVJMl56vhc/oyViLRzBkRkrbGFuARWlfOZEUc4ohedP6dDbA
114tqiCRDHE5LuBxBNZI1djSBd/czyp/Dkv8mLp4RRRDbNuWjP2GDY5qOdfA
g07GOtKCLKrzTs1lj2iGrFnnes4TznF7pO0fw5DOZwdexcNWV1Y798Gpy8NG
c2EbA19P71iGtLCuuAtNZVHlXYJvTOMYEnUx6+wi+DA3eRYNL5J8WuYAP3H8
2zsO10VWjoTCqxxkPG3jGRI81rCIBysYf3W4BLOP/HJ7DfsWOjz6Apd3DKcO
wPW3vEPmJDDkkJto2TwhFnVi5fEUa1jug/zIWrh8SfSvILjAasGig3CiVY/f
VdirVN/tAnx74zz2U1jccF1qITztd9jXGjjn3paXP2F+vaO8Jthpwa5hSWEW
9XO3zI6vMN9V/4UGcNTx+cNfYJ5MpKsbfHqOz+53sFX82ZRoOOZDzsVC+J8A
/eIubHu1IIQDXwq8P/QR/vVGbOpx2ORPiTa/CIt6ceC/eZvg9l21OzThS6p1
T+bCZ5pak+1gjfPzKifvX2/z39LASR9oMbwIf66YMnQNPuxbM24BR5jM1K6A
Ky2O8f/F+mo9Ut7RC885Z7wiCX67WCd5zjTs9/2gOHU4gEtKTWFBPr8/97F/
ynOtB71hvaPHNxvAL1O2a6XC+eJlzH3st4+oz/YncFqWdMN8+PFA3HNxURbl
dW96Wjfih9/CaKs+/NXGxX4yvizTOjt3wuyNBwSPnGbIB0Mr2ccw831WXwXi
VTlh/NZ3OPuE07QfiOddX7KpWWIsao/B48J+xHv/iRl798Cvgqc/7z2B81Vb
MJ4KXwxe96P5OENOqR5MKYQrbmx2Kg5jyOyXb57IirOo9/EVjW44X7riyTNe
wJwH+9VmHmNI4DYTzh9YYDQy8QrOa1H2X/2501mUw8TNG/P8GGJju8n9CBwT
tzV99BBD9p+bncuSYFF2KopB87wZcv/Hcwsr+KPV+Y3r9jBkVN+vKQCWfPZ+
pccuhsQ01AnXwG367sp+OxnCKJ93CpvBokIPDRsNOTGk59Da7pvw25kJEo8c
GbKiZOBkPVxcZHvU24EhLzwdsxZK4nx8aPjEs2XI15vyfI3w5yiZPSFrGaI5
+ipVeCa+Plp38o0ZQw5vDFywFK7WUHkjbYL47PlkFwOHbi775G/IEKXll2j9
WSxKtrL8YZIO4j9yw0oPOF1q1UG/hQzJej9anQhbBq9QWK/JEMPAbYPf4fEL
4/qVbMR/gdL6s1IsKmiG4FY1GYactcjo+TObRR086ja2dJBHVraMZChIsyiX
XtXewD4eaTrmsMkU3j3zS3VuD49oMGJ5qfC+O6Euwu088kTIP2iFDItat/Hp
3DkfeaStxFIoRJZFHe8Ouz3rAY8sW903R0SBRZnyl377tpdHPtZZVenAKjdb
v7725JHQ/TdCt8Jf2Xcm7rjySNml7S034fO1Uqu3OvCIy0gZd+McFlXSNGXq
WmMeOfnw8pIURRZltCC6pliaR97qrl2rNI9Fbfr+fE5ZPpf8+r1Oew1MDcX8
ls/lEkGe5Uwf+PLPpKd7bnOJ3hyrhqdwo4bNA0EOl1wU2HxgmzKLWmTR1bIk
nktc37mfv6SCfJSY7HllB5d0+oX+UFBlUXOtlY0PC3GJkM7xShN4+u3WRqEp
XKLUceLuXjhO+ElIxghNbLafCsqHra5p5LX30OT+mrgZTmosyvzbLN3KBpoE
yqatuDgf8f0orXxaDk1Sav5TLILjF67tkMumSWbs5Snt8PYutZAlN2jSNHG1
Ql8d+eTh7fKwdJoY/+Tt+ABHdMtlnoujicij3NOyC1hULaU29HE3TYo3Olab
wNN6P/obetAkqHV4tg/8Xq7rXdYOmnSJUdeew1Ur+nWfOdDk3fbyJ4c0EY+/
T/53yZwmCb37BC7Ds4f1DEKMabI2aoZlGbxy8aISHyOa5N+1f6+kxaI2HBm9
fWo5TdIFv/ypgBvrpPxi5tPE8eIJ/QG4w2Gz2DCLJrMWqYaxtJH/S8yLgufR
JGLLHvEAuGJBy5MncjRZ/VtsEwdWHTb8L1CaJgPHsy++hn0n7lVumEWTvTd7
589fyKJmhL3ev1icJqrk3H5b2NL283FqGk0+1+rfD4YTP6Qt2SWE9R8LMa6F
5V93vuzno4mejYjL8UXIL/vP3NUY4JCetpvXbsGvFGWSevo45EbAxvZ62Pej
xsibvxyieD3Zf+FiFhVYtljscxeH1K9Y/tQRfvhnwclpnRySWPleIAJWFo/Q
sfnFIfz9ikmfYMP3s/8t/MkhT2IK3k/VQX4cZf6WfucQv3nuSkvgGcf8hwK+
ccii+4KeLrDAxYxIyzYO+bmOd+s0fDVns6z+Vw7J+Gzx9x58/aCftmkrhzgd
/q3fBJMnshv2tXDIbOHEsGlLEK+dV0dzmjmk6r8lL5bB1z//fK4AR+q8E3eF
X0430M34wiFUqf+mWDhCqbZ2LTy0VT4tD34j1Kg/A77X9bi5BV6ucL53oIlD
9p3crj5dl0W5bom+yI+vq8lN8dGH7/xpL1gMN2Vev78TnqJUOh4GXzBeM5IA
P9i+ubsXtqv/aZwPc5ROL4jD9Yh5x0Z9g2eu+7TWAtf/fGLha8mlyK98lm1a
uL/Q1DfShnDplv/OLsP96y/wddkFzxE/0bcT6/PnqfT1ZHjsXPy5fKzfTbuH
7U/hx9NFpxv84BCPH0467bC43usfX7D+QcW8lJnLWFS349NDiR0ckny5r98A
7uhYJ77zN/b7mLGTO7znR6aiM/a3cFPC0xg4y9yU/1gPh7xf1KCcA0+P/U8m
H/HQNU0jogEmYht4Kv8QH4VFltrLkY8fzbF3H+aQpf9JZNvDqgd8Pq0a4xBL
f+eZIbDCIZH7qxB/x7T/va+CT/yXnpaN+EwUNlnVDx8fe5CmIkoTbmvCFSU9
nN+u6tr86TiPFzQ8D8CN3iJ/tuM8/PL1KzsPSznKsfbI04TfulirELb7pDr7
wlya6Ex1+Su5gkV9m7vngRvOX9yhxLB7cGzW9T8xBjS5vqGx9ROssPiV0vXV
OL/qC9YI6LOofreAC+9NafLzc7G4PZxwbgc3wYomZpb9F//BGlnTP44hfzir
mY7NNUA/NNGmXbyXJof5zriugf/zGy9JOkiTq3kL1M/Dm6Nnya8Lpskoa9t9
/ZUsaunQ6driFJpIjd+QdYNvGOlfTLlIE82P/YHR8LGGR0OOyGeOiWeMP8EJ
FelieTeRL0dKqoNWsSgZ7dlL9hXSpKJeUpcDV2fKHk4tpUnr3W1nK+G4JHmD
S+U0kdw94DzXEPcjr/3V+B1N1E3NCszhx60+rQ0fkF+Uklg+cNCKXnrjZ5rs
e6fZ/gw+eUjR7d43mpy8fXTDD/iLbMnta+00SYt5fnuGEc7n8dYjnp00ues5
U0oflnbtfjKEfF5Gbfd3hU1dFj3f3keTL3NufYyCTyiPfU0ZoEl//4DhXVgi
8yTnwjBN2FlJAvyrWVRB8d9nM/i45JN7WNlCOHm+LN99fi5JltsfvxXOlJ9b
oDSVSyyrnexOwZeK8pfaCHMJf8Q62buwtdya/HXTuCTfQK+xEQ5kVtWLiHHJ
oW52hghhUTXKf+cniXOJBj3TaxmsZabo0zqdS5qdJjRd4U+r8k+NSXDJBcnO
7lg45/s2t68zuMT6xaf7D+D3KsliZyVR34LLAr7CH4adr0rN5JJnS/JWz6BY
VDjfJWtX2P/HdYFV8K0n0xyC4YWXk8q84J2ighO74Ta7sPhkeJsMla4OXxLZ
b/cMvsENO/sIP9/+mZNsB+x8ZNVaZVjsyLpGaWMWdeBAwrxtuJ7iBXoZxrD1
kb74Q7jewC9sr/3wg9hOgR24H92zMzGQ4TxoUv/m4347LCe6n8P7fO++Kxfl
kmt8nfd7YMW+cOkNWK+teZ8CFE1Q7/acUM/EekruK1u9Dn7640/Ab6x3mUqe
wBHYnG+dn4Qgl+jHJ8VXwEKmXmOjEzTpMQmzG4Dly4+ZV47RhDe4T5ZtivMQ
dfBOOOq9jMe6jED4wLN+5Zv9NKmW1/PiwhFBb+/MRXyces3WegsHvsrzD/lD
k76VE/cXmLGokGerPYV+0+TtzLyyD/DeQaOj25qRHwrYPXprWNSztuQUgZeo
73MmVveuY1F/7Gu8niXRZFlvygolC9Qz/cGOyASa7KjQ0LGAc7Ns0jbF0iQv
yE4lHU5qS3k9HEETj0ZaYL0li2q2ClsZfYwmhZc3lF1bj3rBWZr2xZUmv/1a
Cqvge+4POsS200TWyv/RIOxv5UkoZ5r4jKfftNqAeTnZ9GTRZpoo7uiNG4Zv
9m1naa6nyVHlNFs7K/SHr549uLGCJtcGF1mGwNP8jQ/sRH9Q/abEhIHHUhMu
z1+K+n2ic+k4vPF6/4lXi3D/LZTMTWsWRSd9XBWO/DX+qE6iDk5d5xUUpUqT
Bcl7hflskO8yZHdeQD9x3CR1cDP8+LDhkjolmiy6/uPTFFsWtWCHflmxLE2c
goJrteEZoXNtZGSw/ptmVm6B85ZKB/rOpkmjwKqnWXDIrsNcy5k0ifFISN9q
x6KcXrJqvMWwfobsCxFwCUvuuxjyc8vsh2duwycOzD+UK0IT/dKWE1M3IV/l
3KlURT7/rrbc4y78Mv7xPd8pNDlgdiTgI9xHGXQeRP4fdM9JmGKP/BSyXsN/
gkNEry55ZAtvcQ8OvYB6kfLsYHUAfC6VHZ07ivry+fbXDNj3+mLfTyPoFxQW
SfyFbyg8KlqFevNAfz9bYTOLGkmvkDo2hPq+JVPfBH6qJqryZBD1N1VzZzK8
J792nTP6nYZ7e47lw+ucuTZ5/aiXNUx86+T3Zzl0ycH+EuoPdR0Q/3dml/ah
H5rQ9qpygleYP+rYD0etp1vD4fJ9J0O7ejlk5t62gZtwQfsRf384LYo9vRae
ncgpmwqzee6sEbhq8QLvS6ifmaUZK9hbWFT7FXn7lfDytuYN62HR88cDvvzh
kGf8yu6+sMkhsZpYeK3KjqP/wVaiQTYEfkOuxJXAY6VpnUOoz1u3f874BSuL
6F15DLcGKz6QcsR5XCbnGAF7/+dcuQo+lTosaQ/3PUpr2Ql7+jBPNeGQDx/7
Y+Gn/QmbRGChATnx+/AlKe+y393o76QdVRphyVtDMz/AcsvO6wluZVHzrw+o
lcMZdvXrtWG+g8rDxbDmIWk3ezjYpeXkpHMS7f2DYbPgOw/LYMPslFjO5Ovv
qSfUwaWVb69Wwk7NzUM/YatfM/P64OF2vz/8k/3HNNsKRScWFXX3+F427Kpx
ptkMnm5ywMkSbl/z+t8+OMn5ed5R+LCnhNhZuHG3gd8teOTkRuWn8JN3p2O/
wRHX4pZ/g6eI7ulWw3pOL6qwnO7MogJ8z53bB5/7Iuq6HM65zvN/BM8bt/Db
Bm+4q3VKHPvFKEbHnILXZI0+8ITztwrn1sE1h3rdNLHfpsfWlI/BrFVvnp+F
K8+d+qLmwqLE3DaxhRE/TbUCov6wVb3/zRF411+TeVdg51i9glD0Uz2S4cte
wOLD4TxhxCO/Fd8OmW3IJ4biFZqIX/Wy0Zw8WHjj6JpcxLtNUaNmK6xdKjLN
D+chMP9JxvTtLGr0lcfaVTgv1ZnBiR7wsYmfwg04T0eSRvfO2sGiePqxxl44
j1diGluM4Hfe4WcccV5fnnziuAcW+ag8YsNPEwX/4DWFsNyifb2bBGlS5DSq
4uOKecGzRzkD579jU+OFi7BOlzxfCeaP2RufzCiFP6r8uNSBfLGbBI/NccO8
sPppmyX6OQnV0Q+vYDP+nlArzDPOnSOJajuRjxrDnmxB/xbxvUHIFqaXJxu8
QT7L/vI4JBjW4bRVblRGv/c2yLsWXu5ZJe7IpgmTN7LmhAeLuqLfXc1bQJN/
YSNjjZ4s6pHZz4cLkH8TZ414p+5mUTGiRQN+yNcydqcmnsCNJrGPnbbg/pNm
pHyD35z41GSyFfOmpGq+3h7M+8ol8+duQ38jsVHkI7whX6J7EP0fv1g6Z643
9r9ok+daP5ocETD9zN2Pfnr+kNHMCzTZ2hdj9egwzqPXya3DbTSxd3gi3QLn
lg73+P/APPaws1HEl0Wl2y1Z+w/91ZpgG29HWOX4qMJAF010BWWiBuCJC71V
EkM0EZ2dUbTcD/lrj3VzNOr946UPlt07innAfcIgdgWXzPX9qnArGP2Yp4ch
J4FLhNMOW/udZlG9xxrmWlvzCN/c7tTLMLsm/K+EHY8Mp3t/KoWPNY5WV9nz
yG/aw1MmikVd3tF6ep0Tj7y56xD0ALZkp29a4skjaa9W8oaiEX+pGUPlgTyy
aIh/IiSORUXuE9fp5vCIenCYGReuE757+iSPR5QnRqKr4XZ/PXmZmzwiNfXf
7HnxiG8Zyarlt3lkUPKHZiEcarose/sjHinSqHDgT8R5Dn9xxrqKR+wdU7Ij
k1hUZ7vsmSO9PNKVe2fzPVh5QG3r3388EiVVPfoZPvt4zrd9gzzyuFpk/fJk
FnX4lY+E4xiPsMxDf3yFNwudip0qzJA/S/YoG6eyqNYWhUM58gyJSYx8uQ+W
zt4tMTiHIaqd130uwL+9S/P0lRjiyDQ96YYLKr/2Z7EYUqhkv/XKWdTbEOs2
Ly2GJIiR5JFzLGrql4cnhQ0ZorHHxUD9PIsqSzfhE17NkOIXAc128Hz7jGdT
KIb8O3F/0U24Uze6/KcpQ1wGF1Q4XmBRL7LXXwpazxDNb7MF8y5iPrxySIDZ
ypDnJrq3WuBFZ0wVNzszZPtVa7vpaehH51idHXVhSJJzzFUPmJs54r3SlSGD
NROGUv9hvtHWFzroxZCXzzr8Dl5iUepJKV65hxjybvVtm//goLBpViOHGdL6
zFfrBXz+c/6HlUcYMv5stHnOZfSTFzovcv0ZsqxAYsPLy5PPF/RlFwcxxITU
zv8Ll2m9dKOCGWJTcH7K3Css6gL/r9eWIQzxLlB+cBieN7a7zjKMIdcKdFlK
6ZhXxN8//BfOkDtkYHQdbPv+lW31SYY8K3j83hfucVsTlR7BkI8FZvGvYF5i
dZRWJEO+k2m7++D2eZt0vsN9BVUm866yqO8Wm3QunmaIZKHD4BF4xkz5vh9R
DFGi5tSmw6dLJlJORjNEq/BLVjm8s2KOuWwMQ/QpTtQ/eFuT3b9r8JrC3TuV
M1jU4nsxyfNjGWJPLVy9Ho4bZUSvwe6Ff+T8YU3flPXScQw5SOX1XoVFaynT
43BIYWB1Bcw6FP2lFY6hyI1+OGVm2nSjeIZcKBSIULmGn++QnJ8Ac6my7Rvg
kuak2vfw/cI4g6Ow8qaH5nIJiBfKdvY1WNpabXzy+f7rQunuSviQ/2B7KNxI
fXo1AFvbe/VPPl/vKLzCYV3H/YZUShbDg9TOsI3wF065Wj0sVKTudAwOXvRD
pQWebfx72XU4IpT50wqrFN2ZUQ0rDqWeaIAXGft1DMI1K1c+K4cNiwxK2Rzk
96vFqXdgS+PxdCv4s+rtP3GwY1FxYAB8IoVdtGPy9w3GpzdzYM1Hpt0a8JGi
9Tqv4fXuS3f/xP2GG0uKDcOOzjJyV+DEonffVGnst2v6r8nn+ZeMLxZawwu5
fq9/YT1vFm37LxD+ff7I7ZPwQ2OWPw2nyh49OhN+UfTd5g38VshR6iz2653x
La0R2G7tXx+Jyd/PFB0Qms9lUbv++PuHYL+7jJe12MAvo9/KtCI+RosGHwfB
xTqNqwxhUZOn57iwXOmmmljEk1zxiUM1cLTaUPEbxNvSYlF1dR6Lqkxo8V6J
eLwSFaBkDV9e+3Suzyl8v/VP6aNw96N2ywuI5+aGUsGXsEmxQP1rxP/6a8tG
u+Dg3RGzP59gSN7u670yDIv6W/ghYfL5fty/461ecHRUXP+rUIYMPO7+mABf
H8gpuY3z5R6+vSYPpgf54mNx/gxmGBYK3cD9tW/4oBqI86IxcJkLOwf++K8R
59m22/NsNTz1e8mVg74MeZL7Lq4f/jMnV3UY+SDF5F7Qmpss6mCAeUinD0Mo
l/1bv8Ons8PqNu1myC1Wo43ELfS7J565JCOfyLRbrtODV9b/6y/1YEinn8aK
SFhR69BicTeGpCV+nT0/k0W5K1/fIIX8NdXBTtwKPrpfWXjIAedHsUjAH2Yv
GDtUa8+QtTeu/C2F99ma6njZ4HwXb33jmYX303mpxb+WITuiy17Gw+NcCes4
M4aUW68oyIVnl0+tEzVhSEbj7Oyp2SxK1sz4dxvyr1X/61ga9jtmGyuuy5BH
T1afrIKb05YKGyxGfj+ZFfhv8utTc3K3ajNkZEbsHvPbLEorqzXt6HyGMAvW
rP0G25fFGqgpMIR/2xN+tbvI/49/V6yd4BGJ8QpnGzgqy9JwzwiPKKQ33A+C
l0rbfgke4JElLcNeb+GOv8+aA7t5xNXToCLsHupb/0Pd2iYeKdifl/IpB/VS
NvSNwGMeCQ69o3omD/2l6b5Q1l7Us3mFIY9hna+hFbkePJJa+Lr+O5xB+sXJ
Dh7J5O+OMnqA/rhmq8Uy1OuGyIWdHfDpJ+vf3DbikZWJN3PNH6GflzsQpjyD
RwbSOWtGHmP+nnKquyKLS1xPb3/CfsKiVjk9sZ3KcEm5j5zuBrj3g0yM0TUu
uWQUN/cybFr9JfzWOS4xafDtW/2URfmo5ZZFhHFJvIzptfBnLMrmo+02L1su
Yce3jE0rYlHxm74pZA7QJO7If766sO3WJ86r/9Kk33lzuxPcXR9/4D3m+TLN
V+9uwfPUD44qtWJ+Lrtza2Mx5uvpKUKiVTR5JHB8a1IJ4n/Zuj0nODRh/TJ4
/Qg+ebkv6790/Py3vWatsKFfpEVhGk22Z+zSWfoc80rn260LMP8LEmvhOvj3
YaObx0NpYh2olCv3gkU5zNJeeRjzuqNhQJwZPHrDy+evA03cx2t3HoTb7JJu
hdvRxD88elYZfPbASpt3FpP9cN+Boy+RzzMXlpkaoL/cYL32Oly2bEXZeszv
9yRuKr2Gs7s8xzyX0ORF8o6q+WWYH8PCFr1F/9mVVq5ZD3tdeFCbNAfzrosa
P/8rFpVGt2YtlUP/OO/4x4XwfL/KeR2Yv2WuL486BUe4z5Q5J0ETZc8zO+7C
MjG25nGYvzXVf+l9hvd63d5+Af326ltXvy0rZ1FfE7l3etGfr9s/8sQV9pix
57op+nm7xQ6pcfBJXanum5invXLETNtg0wMLJIowDx/081KQrEC+aBPPPIj5
InBF0Z9V8M9akaUGmEcSHvtfTYE3/bS+LIN56UJIzdECuPe6vIt2F4dcI9rW
v+DX6IhdfmOenXJ6vmwli9qxU0SL6eCQvJKWMRN4QlWTNaOdQwpPGdb5wIo6
zgrJPzikfO35zDT4h3t70pLvHPJu2t+TL+DmofnCXW2Yjyo2OP+F1+yihl9+
5ZCf8TxdpSoW1V++5W9BK4f8teYXtYTdFYaP1rdwyOjMbS1+sGrLZSlxWOjd
g4cZcFukgZ1bM4dInpt1pgoW1FZ7Uf+FQxQc9+8agu/ebZuyH1ZVKFutVj3Z
37++oAovamTJ2MIzdC+zx5s4RP9KSGcw/OgMy3AYNnH98JyBL+89GCyP129g
Lb30Dm56EB3uAju0xfvyvUZ9jD3wuwR25f601Ia3CJ11tMH17N1tynKEzUuq
dvHjeo9oXhk6Ce8Q/PrwExz6e/DNbZjr5NDxEfcblb2JaYCDxnr+48P6JB/M
DhN+g/tLFd1t/Y1DLulO27IUnr9e7OcLrCe3b+eiHfCdi0V3d/3kkDt5z6bG
wjdGTtrrYn/yj8l/zoO3LIh1Ucf+VY1Wx0rUsKiZEjcvJ2O/LVvenDOAw9a+
/jKG+bas9G2GB2xzN7MoBfPp84T6B/nwmw9PrlKYL018PxR/g+NHshUcx7Hf
Wz5VSb5lUbdmLmf/h3nyiXLTVy9Y/5vKLA7id+XU5q4kuCVy+O0ecZo8bG8Z
egIvzTWvdZKkyf1732ZI1bKoZRm0ylOcl1tmnasK4FnrY40PadFEY0H3mg54
f5Gt8nEdmnCn/7GVfofzuM+cl4Pzea2+b5c3LHrY3iKcokna7tEU2ToWNabz
2+k05r3oOLHfB+oRD+sd7nRG0UTo0PSBNFhM+Lf3okTMn5tn8L+AO8T15u0+
S5PjSlJyiu9ZFKN3fsPDDJocu6NgVgZPydmyxPsR8l2qonUvLBBwjkgVYB4M
UHJS+oDra1HLv/icJgdNWAePwDZryj7rvabJrncLLil/RD1a3xTjg3zY9lCL
tx5+tYl7rPQ78tPlhff84RNeJL69gybNJxY/zYCbrPbEfMR8uN1rSVklvM5d
1TkV+bbRcmntADwxO15Vvp8mTouXN7E+sSi3pR9X7ML86DCo33cM/iPqenjb
BE3eNa6cuA6n+vqzpvJziV2RoehrOGRt6CI/QS55Q6+WHoZ13wU/zRLiEqsY
SlmtgUXVLtRXuS3CJZU+Jlo2cPianLIAUS6x3GSmFwSPPk80kxDnkrIVa4y5
cM46U5P9mFfNFddtqIGPhWefPi/BJcpr+3yH4AD3C8JhM7hk9NDV/1Qa0b+Z
XFi4UpJL3l/aUGIBt6R7vHkF33s52HEIrujye7NoJpck/OXMSoOPDpYo7oX3
zLVdWQz/4qhmTj5/N1s35tYB90TGHt8FK/veiJ71mUUNmH2+qgWPXt58dyU8
d+a4Yvnk+5VN+egOiwu7CZtNvl9vFl8svNx9WkAari9ByUkjBxaRLo2txvXv
tRCyaYAXX7uxrWXy/o7cOyrQhP6xWk38He5fOX17uhYc/fZXHk8M7/dK9OUm
eLZ9QdA2rNeHvryuIPiWzeKAfqxnzrydMhx4+F1yua8wfr7fY88+2LrMpmYe
9sP86q54xS8s6niwwV0b7JdyhVSuGbxFKdloLx+uX3mf4Fl4kOsc6TyK+rRe
TvspvLTmpO3yYZok+D/f9A2ut13aMoJ6bVapeH15M4sycHc32NSL1x+tMq6H
54bI/zVrx+uvBewZh30e7dJLRzzuqVJLmt+CfDzheLLzK+oTO7TZH14SonZw
TxNN4qsXhcm2Yn1VI5t639Jkt9qZJ45f0S8efBX2K58m82rtVjR8Y1FZVrMy
VWJoculDeqHQd+SbGq/h9kiayDX9ttCFs4UObHtwkiaS7ZEu0XDePkGeewhN
+CbyT6z4gfX3eWUmcAjnQZNdmfIT+WDP4+UZW2nionNwcwHc0LbZ+SPq+4fl
T5s6YKbjk7yCPU3eUFv+GLdjPe+nt+da0aTQIVamBz7YubhhqxlNrob3um74
xaKIn/j9yXquGEV1HIVXRaU+0l1Mkwvx8b7X4TMKlgnTFtLkzAX1yGG46Nzr
4ncayA/ZzreY3yzq8RfJ9y3KNBnNYZa9g3PSzn0fU0K+ePTv6QTMazj6lT0X
+eB54huHThb1314dTrw8TVw/lfwT7ML9fLzW8X4WzvMXyTAduMBDbL7pTPQv
37aJuMAKSrKGD2fQxKZnQCEH3qzW86UA+bPynxmnCTb56ONmh35h3UjSQtFu
xJP8pytd02hCCWlTbvDNj1vnmwkjH4sFvIqDq8bq3cam0kR/5gu7h/DiIWuD
QkGa6Ci6es7oYVHJ2i20O/oLZd3UmKew7Z+6TfLI78MhsTrf4QcxW14vQn9R
+yq8XuIP4s1u/64NoxwS6XaI5QpfMbpQmT6M+pe1uywKfrwyL7JuiEMMhnb4
3IXfGj3Tl4J/n7HK5/+LeuvxeRt3gENeNJq7asHNzQ+ejqA/SdcwErKHl+e3
djnCdoVadjScoZV3SRP1SFucPVgF56xQmZqO/kXIUeFKP7z4gJTMHPhRt0jH
2l70xxdNhSafzyav4jtzEG4RefvmCerbvtMDyy/C2pod8lvgNbVdDUXwEWn9
94N/OER53vcTHfCpJSvHM+DhvZ/VpfpYVP5nvgg7uDbvXdUqOIYzsE0UzuSv
9PWAdavPnHiFehppVSIfD/++trotcfL5dVp+QS7cv9c3aBts8P2uZxNM1AUM
deFZujfEhP9hXo1bJi8B/w65encxbFQlIPKnG+vz6vwWR3ixcurYJzhdOnHs
OKz1VKS7Aj7mFnn9BlzQEFFTAttlhVi8hdNMxtMmn8drDx3pHoZPpreZTj6P
n2q+7yy7H/NXZnfRO7jpzM5VG+DN+adFJ5/HP2x0ajkCh86Rlpp8Hp+sYXf6
cv/k58X4aliTv184YrHwBZwrd3zF5PN4s0Kqtgs+fTd9yeTnB5TE9QNkBzDv
Cb26lwkPblk8j4IvGaXf/gHXXJ9fuhteH1KquADrd7N7rncSnPOrqesgHLFK
emY+XOy5Q6kA3n5a/EHr5OtfGeZKYb/0awW2iQ2yKCVlu0wf+Nfev4wLvOOj
aPIK7PfzvHarU3C2vco+Gr7C39KXBX89tiZAHvFhl/aamoAnGubkSE3G0/cX
39WH8P0LJSsuwlN1n8XZwNH6RnVqiL+HrzI/ZMC3PvdlWCNek6U5oeWw+NBe
l07Y2+0/1V7YON3z9xn020pD0QfNhtG/m+2waUe8R2jsEvkBWxg9afmM8/L2
3NRWiRHsl8JmIRrnad5UzmM9WH5j/qlDOG/5Lc0+kXBsS6W/Avr7njSnOrVR
FqVeLDnlpgDmgWlD2Rvh2xW7w9JwfmOPno/yg+2NZMYScb7n279bVQqH/dH7
Fo3z7zzd6prHGM6bt+O0h8gXTNDvoDjYQDn06Gvkk/72mM334exmvqxf05Hv
XrwUERxnUfzBGba66M9ehBkfuA6rV+uFDmB+0f27zLB1Av2aRFydwzzkQ9da
aVE+NtWy8MGcPOTDqupD3Uvgb326UfIs1Idb2ddOwJyTu179VsW85aExTWUK
m7rN4iwu1aSJ6Ps59Tv42ZR2luz7pSto0vKY/+BnQTalMp574h3mtTeCJrdE
prKpl4/KR2uR359tPPF9KRw/rmT1Hvk/7cuESww8d4/80XYnzEMCYxYrhNjU
RVU+41U7aVJsOcBOEmZT01JL18QcQb/48dd7M1E2pZoTt+TaRZp4DLwjmTPY
VMn6uZskMb/eiXx2/h1M94j3pKH/GpFmukfhA+1tFup/aJK8LCh9oySb6nh1
R84c/VfRIZWJLjiw051JRX1W+r3/2ZJZbOqcHCkKlUa9bhYyejCbTel3vc/Z
SqF/KtdfWSzPpoqt42ZNu8glDua1l+6osinK5khitzOP5NUIxjTA/1Y61nzY
ziMy2/WOCqmxKfXpUR8K3Xik3v+irQt8aPN6ufhdPOLA7BASmc+mVl6eGiXt
yyNb0O7uUGdTsy0qnL5E84hjjaCphCabejvNc5pSHo883KanYwA7X3sW9eYh
j8h17JrrAcsM/3lx/DGPfOCvGHgEN18VcflUyCNblyVlemqxKV7Uz86DFTzi
dH6uzFNtNrVz0O8Ku5lHnLfptXsvZlOmtLC7szBD5HRm9abA99r+KcdOY0g9
f9foY9j3rvPHB2IMsWNoSXEdNtUd1j9LRJIh63pn62fCElVmd8LlGLI8ujfy
9xI2dbmiOOuDBkP+Or8+M1uXTT17tq6sVpMhdxbdSjOEU7c9W1ehzRDtd+7Z
cXAkLbj5tg5DWPPe1mkvZVM5x6viLfUZMiP3jur+ZYgP82/Pnq9hSOXpuEVn
4c/x5Skn1jEkxmm3/lO4rems9kpLhgjxKW+Yvhz7N/Vv2JWNDBm1TPTNguNN
Zkbq2jOkvXl/cace1id6nIS6MoSbY1EpvYJNiTWe0/nrxhCPSLV6I7i/9qiu
206GNGt9bo+Hty3ZZKjjhfXw3zBzkT6bsjVvnpPkzZAScS1XHwM2tSHlifom
P1x/Pq/iIrzb4nRojD9Dju9SXVEKFz97Me/xUYYYFs+VUFwJxy3nEwlkyP2j
kk9ewV2+DzdbhTJkllq8+j/4vZiymlUYQw6+nZaivIpNKXO7ctccZ8jChQJ7
j8IKu6PrVcJx/a3/ZNUMsR+DdxeFnmKI4JnDJ23g7T9zWSaRDHE36u4Kgs9f
aLcch+dd+Fn6FuYT6+3cHsWQUHPPJePwxLK3pgLRDGn823JpgRGb2tHdezId
vrCxwfc4/KNtZkBBDEP6h7d8uQXP4Vs6zXTyeTzzzvI9/M5st8Ez+N5m2zz+
1WxKgLbt14ljyEyBapVFsJZwgvZ/k8/n71jGb4WrbJ+UjcLV214ORsC7vIMe
bI5HPIiZedyBg1fu/UbDMQ8LXzfAibQ66YR/ehqtEibILyl2d7USGLJGKp+r
C7erX9BwgzmFerO2w+f9HyfFwwI+OSHRcEd21ofJ5+Puc3Ta78P7h1e3Tz4/
LyzLtG+Gs8PJ7cnn60r+CwrFKDZlcChMZvLz9cFsrtYK+HJ3tejk8/lPb1jn
3WEv9fGjdbB+aDp/Aqxi8tli8vP157QUfR7BZnsN92VMft7+w4WPbXBui1rF
Mdg+Utpc0phNOU5ssFsD31uafGcV/OEuf+c0WLJFQnEX3PzjfGQJ7tcnIfZ0
Mqx4ZpuoL1y5SqT3KbziImenHKzZHrG9Hf7852lIzuS/bzg3pXy2CfJf2Woz
M/iHaehyCmbPqbxWjv1Z82f4qjc8LT01Yg3MuXJU/DysWln67gH213Xo4NdO
ePoUuf2B2P9n3E4reVM25T2YEluBeFG035tvBp8551I6E/6QvTPpP1j+u7xB
COJLz6V59AXs8ou2uIZ4TJ22bfdfWOa8MPtJBENsPRyIhRmbslI4/LkK8Svu
GPLyEFzs9iLi/QmGlK3nWKfBXX5Syu8R79TSvzt+wZfWfup5gPMxOl/+p5Q5
m4pydJ96MYQhDxWog4bwES/xygPBDNHhTzgeDysqf104HsCQ3//ui+TBm5Xy
mdxjDGHaG840wXciE8664zzOq1mQsXgNmzr9eE3kpSMMkbhaWlQDJ//bOT3R
hyHlKb8thuH64w07e/YxJPK01FvWWjb1n6DsvTU4/2M+bq2+cMY555GaXXg/
ozF+mXWoB4EX7rshvzBLVGNXw2wZXaM925Ff1NZL7YKrPly29nRhSIP4RfZD
eK/IyqaVjni/hmVmThZsai3fRVcna7zfa+fKcDg2yK5DEPnMpCTc/hZsvaYx
4zry3aObbzxG4Qv7FY8+Ncf7Bew7dcUSdpld5rYK77c/ZfpLeIHT0teZyKfK
bvlnu2H2Iu/nv5Yz5Pw6ES61nk1VuOvuNEf+jZTlvGiFq7KOtXqp4v3EKqzE
NrCp4+k2b21UGDI+/qd+KXxq5r+kRUoM8ftOfkTAL8RXB5bK4v1yG4TVN6Je
Pq8bdBXF92+SsvC2YlMHBTzf23byyOE9LYIpsGuS1Lb4dh65Fna7MB+2dVA5
/PQbj0zJXK8vao383X35xMhnHikUjFC/AX9/KF/YU8UjRnl9U3/YoJ6pZi6r
vsUj+vL1xe6b2NTiM8ndEzt4ZPdiTmgMfPaA7a5+Jx45b3545T149MOFwrbN
PNJ/SOLeFHvk62cZpTfW80hu+ZqMq7Dm8YGBj3o8ohv8IKxpM+rzuOWSMTEe
WfjlgqGTI+5Ho6nrxT0uGX8t7HQKHpqy79TVTC6pLvQ/egfeZ6SZcIzLJT7X
7O8JbUW8+fJ01dK45I6npEYOrJJ2/3jACS7R/X1aStwZzikb32TDJXpD/h1P
t7GpVa2uU/p7aCLU8U24Hc7dRzbr/aJJ/Sd7tdnb2ZSHZ01h6DeaHH2i67oX
jjswMqjxiSYPw7rqZHawqeGhJ6EdJTRZKeRVdMAV+Sc9wX0b+iPRgXdNafAv
2nolSaXJpx+mo6Vw/e2bbgsTaRL0SmWFohuuR90oa/EpzJtxnzPL4DK7doFa
zO+rpTZfUNnJpm6MXnlQvpEm+yx93lrAb0J3cN9boH87cVr8MDxiWv34rzlN
/nU/Ol4MBwlLLbVfTZPMSqU9Oz3QL+ZpryrDfP5JQP96LMxxnqa5QZsmIqts
P+fAhZuujX/BfO5x46StoCebKvUuW6WP/nNO5E8DGna/fe3sXWnMy0+nHKmC
4/aILXyM+du/TyH7H1zxTeVMPebtt+4bWWu8EI8JZwtNRWnCl+bl4gMrByrN
Pod+elFN2LlzcINfyeoR9N8x5J7oD/iNT/CKiQnMC/4VZjN2sSkN339nr6C/
/57VFroCFtlT22U7wiHGirK9p+FfzeuL/mG+8Nmks/AO7K6z5MN3zCeXYix2
fYBv/JJX7cR8MzgY1KCxm00VNTvxVmI+m69zVtoWXsW3OTa8k0Psd2VbB8AT
5grDzb84JPzKy+gM+M3a5RsdOjjkdl1zySv48AHfr60/OaRRfHjsD+xsFaVw
+geHiJpJ6Svswf0LERvT75ivgrQPm8C3zDN/yH7jEK975pl7YbG22WuntnFI
avv278nwloIvtWJfOaRY+ZjyYzhw2uy+yc+z92xJcvoKO/wIk/JqwTyUeDNV
bC++nqeent/MIRtelFQvhc9GSwhqwoFjjSIucMLNknv3v3AIs6zfJAIu9DNR
cobrvGeEZMJi1449mgvzX9d48A62WlI4NNrEITqfjP+MwovfJTsMwdtnOmup
eSN+DueskcLr49Yd8dwIn804YbYezg+LT/eDtSemvJr89wE/87gfL8MfDAqt
ZXE9Ml0FUi/grm2z7TNhM7WPG7vgBQuHbNxwP4dd/p6W2cemlrnUF+nhfq+m
iBWvhi9FEJWFWI/qctVRL3iJpN1PM6zXyJTVeonwPBu/xFCsp4bBloMP4MI5
52M/Yb0dDh68+QWu2ldhsxX7E8GLbhPej/XVMd040s4h95quKenAWmOmXYXY
3+M9LvnO8DFW9p467L81v6zDafisgdDj2ZPz9+yaP/fgJ20ddmGIn99qsfFN
8LDkyDlpzLf5K8wXiPqwqWs3Q1reY36Nsph4vhy2PrA95MUwh6jt9x2NgxU0
9cIWTKFJX+jCCw/hgm9CKlcQ78Vnfixtg7f/sDpNRGiy/b6z96oDbMrGt3G6
CObFCyOmn9rhOJ/o3bQKTbymj/tJH2RTNS73dfzn02T5vIczjWH+6PnkgBbO
m4m2xQU45VjklLrlNBGPmf1wzSHkq7t696gNNAmT+3b2+mE2xW2IuhwdQhMr
zfQlr2Hx8MLFX0/SRNFwa9UwnHnin4RhDPLZjipBO182Zaj/TerzOZr85eb6
8h2ZnG/+NfrdpknhwwMztGH7aNnRnbk0SSxfcGsLvPnmjK/LHtNEu+tyazYc
msE9dPgFrn95pO02P/QznOx/0xtosmwt1RkFLwtxe1r8hSYCW4ej7sOJ6i/e
m7fR5GqwT6GYP5vq0XO8dAfzpE+ChssKeOeqpPSzyM+GV1sH3OHsteFXTfto
8rHEYXE+nH99furAMObzOsmKb7DPnGcho2PITz/KvWYeRX27W76pDPOl2VAE
vxGstN2W31mAS2aJkSu7YYtKdd79qVzSrDhkkAr3enmF1Qlzye1FOXUFcF/7
sn9Pp3FJKLX/0C946HRanI8Yl2ywU58uewz5LG+g54c4lxy7GVtK4KXPkjVl
JbiEw98TshuWz959TXYGl7xxstdLgsMFdyh2TD7Pv/ew6xF8wdLocKIkl2iI
zeW1wovlvE6LzOQS+50ndogFoF+Qpm0c4OOPv8kug3U1PMsD4EwpyzcusILR
jnFf+IN3dtQpWPXLixFzWPD5LONsuLXsbkMPfr6O4tGhenjxt6f5frDLkYa7
E3B9xOYndbieqEqyVyOQTS2UfzJ1FnxflcOyhbU3byzUwv00B4s0BMCxzT+k
VadziVjdvpRrcFmgoe4o1kNvYc36Cvgn24HkinKJ+6nlgn2w08Dz3TaT//5g
+fgR8yDkT/Ud2UuEuOR7vPtCH9imL1s6UBD78f3Ft3Pwbo8W7Rv8XLL3XKLD
T/h1ZHpjwThNznX1SswMZlNqZlM4N0ZxntY4vjSABxKz/UOx/woDyvqx8PUX
4Xs7/9GkfMs9+UUhbMqt3DB4FPW8/7bMWwc4dKvMY6d2mrBEgmLC4JlZgS9v
fadJ4EPTkTdwTmt5yYIWmmjK1zX6hrKpsd6tcpl1qFefBtIfhaEe+Nv+2P+U
JhbbjOabh6NeTOge/xlLk5/v183aD+cqGCX+jaJJlJ39eCp8/Yv6A75ImpSt
9a5vg28JqDlpHkc91b0YGXGSTf2NDDR+dIQma4T/fS+JYFN6hzbn9WynyfcT
fLW/YM2IBK3NLjSJHBUrkDqF/vnPrfTCrTR58Yd1fifM5z1zMNOeJuaNNmsF
IlEPdXX1myxpYnY3k2dymk1tku2xu69Pkzathyl74ffxkrNT9GgSwS0JS4bl
9IJHApbR5Pl/n7a0wq2EdnbVoYlppIhIeBSbihm/IX8G/UEr3+y+G/DVjF+l
d5CPwoPmNdfAl6Lynn9UxX4c1HuoEs2mbjI5z82Qv0ycPXYXwbQx1RyqgO+v
O2DfDq/eFWHcKofvtwmiZsawqedBcgMbZWlSZJ4s5wY3LizYsno2TSidwjK+
WJzX0opz4RI0ab5ZcV8DJq6rLDWm0+S42vurNrAcJ3h5vRjyk0LXsavwaOXz
y5bTaEKmKi6g4pDPVbpmn0X+Pe5U5u8Nb9vw6pCHAF5/+8jzc/Ctf99WG/Hj
/ZyqdnTCHemugmJ8eP3tgCy5eDb1MkLi58Q4hxQJzh8xhV+NGc4eR39icjv0
XBp8ysZnrswo+gdBrbZSuP7u9rbF6FdKtr5f8gc2X3yszA71wUxQp2ptApt6
ujL0cc4g6tXWRgVfOPxeZs4f1JPS7KjdV+A522vS9OE1W1sE/sGSGvOFWlB/
IrPjbZUT2dRdy/2HTeCXAivT18PfJHwuZ6L/Edn6/bc/LEYdCpwHr8tOXnkN
luodGU3rRb0SIFFV8G/DFLl58CvHX3WDsM6N/MJbqHei2efZqmfYVF3CwZ8U
bClgdsgavn6KF970h0NiHHueBcKJgWfCI+CKrEviXDjOyaVBFxYXsHCqgZNn
GR5vRz3d4PiPNwr35m7xYOC4rIx/6kls6sqnRYEH4Ep+K9NN8HarhPurYXHH
4TOhcJRtqNDk5yk2ZnGbbsAHVIV3/kP/lsC/SbsO9hZe8rQRrt4yEcCXjP7t
W6dwJSyRdeulFny47uTyyef5VvyO0lvgGbNL9Cef5ydsEdwZDnuu4gq+gl9n
3rmTBYt8U497D0vybxv/AEfeNCnuhG22TNsgmIJ60lN3UQzXcyYz9+JiWMXA
deqSyefxU9x/OMH7a2oHJn8/MWuLxPJImIQu9Zj8fIBdZn74XfikYLhR9eTv
A6bsetMIay4o9p85+fsQByklkVT0M88b+F3g2ZkF3kvh/r6L77Jg+yn7Hm2H
49+yvghhP1Id5IRj4LoTGdK74Lpbz+1zYUV1Y+9q2MFhbo/YWTZVO+xL3cP+
nrv1ymgF3PR8GXcR4uE9n3+sO5z7vm7gLux4q3r+I3j/vC3aVYinC3xBR9rg
2ceE+j3QX3/crF484xybWiEkGCCAeHTiO77NC2aO/Dtmj/h13rwkVeo8m4r2
WD3NHPE+2HN6fBWc1a1/WADn4Vxc024PuPTHNreXk8/vS2KNcmG5kwm3duA8
Wep+/+5wgU2xgq63vEG/9LPK0DYMLrrxan8+zmPknpTHPHgap033Bs5r8VXq
zCC85+kTk3NTMW/N+M8g7SKbCti/4UgWzvuHm3+uF8PSZ9aXFGD+8F+zTuIX
bNz5ie898sO9kH+tq9LY1FSSz56NfKL52zruM/zg1S/xMswzCq8EvyhfQv76
KpcjMRf9kIezhQXsf3V/sbcSTRz47uUcgp0f/1xaNY8mySt2RBXDHvlCipcx
L4lyHy3xuMymKt3Wyx1EvhwO94ngXUE/GrjnWQPy6yfDDwsWZbCp5em7K5Nt
aCKX8/rfVvhGSXV0qh1Ntix4WXQK7jUetUhDPn8nnbf1MyzxRTb7riNNqrtS
ouOuoR+ri5k6w40mJVet2zuuI17mCW0IPox5T/Alw+PCu0dXfz+P/q8yV10l
k00Ff5HNWI36p+tpr74BtjBQj+rtRD0Y+zv/KJzUK7XnJvqrdYt15lfBHUYi
43P7aTIr+aZqQBbmceu40jlTuIS7JV2lJhv1f0a52T5ZzN+tUXNO3EX/ccfk
g645l8wdcp7RksemXHj+ZmPXuUTpaYrKz0LU/1YDtRYHHqn2D0mXKsLX4xX2
1G/lkTCdXXMJPLM+yqPchUear6+UPwdT91QDst155HpMi6RZMc67ZOtNLx8e
0XBczHe1BPkn1H9R0ike0e0tb9rygk11v61RTbrHI62Z911Owo7TA9Ksc3kk
xevKp2z4fGvAa7GHPNL38VD91JfIL7nbHUKe8siDQrnqHPiW0uV9pmU8Ypjg
9XTGK+wHt/m6/WceWbOA/9LLCjbV6XvLw2QqQ+wXnNPrgf2qOX+DhRnivkCz
Rq4S8dPX5nF/GkNCF9gJ7YU1Z1W+k5dgyIMF1w6KV6GenzDVeCbDEA1NE3Pb
ajZ1v8FH0VOdIXqa9V8C4KPD+xv3LGCImebewGvwElfh/r1aDHHTTL7dC3fI
yyi7L2ZImmar/LnXbKr9/KMG1gqGiGmFd316w6ae7VI69tWcIQpaMtECNYiX
T9XPmbV4P62bbG147eegoj0W+Plabx1D4JgB32NNGxgSrMUqmfeWTbVMUAeT
NjGkS6v4vEct+oehx2dlXBkyquWgGw9bGu9QTHJjiKh2R2UuHD12L15oJ0Pm
a8/iF37HpnjxNTNaPRmyQ9t93w3YUlbI38mbIW+0+Y276tBv5riam/kxxM7a
aIZMPZuaElpg5O7PkHeHjn02gk/nll8KPMqQD3ldAfFwpH+yU1oAQ5qphnva
79lUyb+dZSmTn+/dKXPCHg6wkFxyMpQhbadsrYPhWWt1o/aFMeRn+ctfFbB/
5JUR7RMM+WN/X9X7A5sqb3yTvDOCIUeOdv9Nhkevn92kcooh/Rc1i/LhB3Xd
CR/g4aar20Q/sqlxvr9mS09jfaY0aunC/z1z5dXD42zZ4a1wsdzTzb6Tf99k
T/y5G7DwwFjchWiGRMSWedTAZWf3DSrHMEQoW2DpENz+cfrJyc/TR71ZPUXl
E5vi8FwV58ZiPXsDXq+DPYJD7p6B46RzLx+Eq0cOao7BEvo93hdgxa6rAe5x
DJkV4iXyEy6TIrtl4xmSmp5RP6MB5+vxoS4vWKa4kbMCvs+XInd78vP1bbK+
O+Dv3zd86IYVhDcZn4Y9Cx3nLpj8+zMLEmbchm2v7X7vNPn8fcOrz/Xwy4xF
/RHwVR/BzHE4pMtlDw9mJZHA+Y2ot8vPsCY/T8/JCVxnBVc2FkhNPo+fX58r
4w8/Pma1sBlmBnvaLsNX06/8/+/laM7RzimFbX/M+m/y7+lkGu060QnXbhZ/
M/n3dha5XrOW/oz8K5Tf9QS+E/55rhEs2rz5Rzq8lJb77QHflVx4MxDOe7kp
Pw52fRmnvnHy9wEdCVH34fe6xdaycL54uUPj58l6qSD1EfdvuHiqmmAT9quj
1y0ZfmZL9WpNOjVZ2xSmjgQVbYJnyja5T36+vvhcXmIQ7Holvy8GNnv0Z9t1
eOFm8bcqk5+vb9DWroDvej3ouI39Wje+a/gvfHbk9qLlcLny9TKFL2wqKFU+
8S72f4Np0zkTeMYnvVFVuNpT3nMvfPVziWci4scmyn5pMhx8J/hxD+LLvqr8
dQtsN8294zziz7+cOyHejPNzI9e9KpIhF1+GL9aHFXVqmwYQv01FKxMTYCkZ
/jNaiPcpBTIFj2DzoXf/LTvJENUnf7va4IREUyfdcIbsybtptaoF/az4lqti
k5+vz4kM9YLHepQmvuN8Zd9xz06CJV50FOTh/PXdVJD4Cd/8zSguDUK+S4+p
Sm1lUybC75Uu43xnXPIaK4B/J7r6yh9hyPOLJgt/wT/f2Z+JPsyQaanDccZf
cd5OTvlgdgDxG7V3QxcsfGdRptpu7OepNcHybegfp25fu9qLIR/DWZlmsP5S
OyVLD8RnyCex/+CEnpWrViE/3ThkWbH2G+bzXYOBJ7YwpNJn/shh+NOOK8t0
NyOfefNrXYGNU79n19kxZJlXfkwfHK7Fy+7biP130rTM+I78/PlxaJIpQ1q2
CAVWwqkLghvrKYYIbm69MQBn7VW4KrGaIRbWadOsfqBeOlsu2ayP/GUq+moY
TtuglWOkjXxCfR9U+4l5VarAQxr5XH51sYYtfPaihOkXNYZs1w+M4sGfDIyD
LOYxpF27Y619O5vKT1ifcXQm8ot0+YusDja17NHtJKNeHgndaiNVDy9mtdaG
dPPI+KX6HePwAGvDqnu/eGSC/XXQ6hebupxa9X7gK4/w6Y5q9kxaMvXgQC2P
TLFalKjbyaam+9rsrLvLI4KRyVsedOP6+rL+3vfkkYhXcpwv8JEzH/+75oqv
T0/vEe6ZfF7/Lf+0M49MTb0V7QirKr2ZamDLI0LXnj8egndXr200NOQRkWf9
8wz/sikrk5b7fZI8Itbv9LOwD/VWO4Jm8rhkuDKvrROmbh+RJHe4pOP6rBaF
f2yq527v+dobXFJuW/7xCGxvresxeIlLorIMKjT6MY+smPZm5UkuEfKUy/7f
JnwH1jc7XF0++S+zZ7pytTjhF9A94e+6Z79Zav9plWFBL5DfYXG6fxGw//6o
sTdnF5CvZx+yYNMDYH9S3zVV5DcwP3uoq72/AuzPdW8JOwHk6y/oCH0E7L//
c5psafAX2B9hVwn5MnGp/TvJ96axQP5brfDoDT1L7e998DLqAvI5dp3VqWpf
ar93HpP2EyBfYp9MkEXtUvuaX4UyM/4B/Z8zszctc6l9zsWzEkeB/IOHBK7N
AJ1/sUJT9BOQLy8Yq3c7HtheDXvI6/Nf2WFh7Wr9iWHA9qeuLVclkO/lZpjO
Cmz/SbHMZFsG5BdeW3SuyxfYnrz9hekykH+uomGDoudS+58bA/7/B/J7eXeG
nHJZag8A/KzdpA==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333]]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 
         NCache[
          Rational[2, 3], 0.6666666666666666], 0]], 
       LineBox[CompressedData["
1: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
rI5LAz1PjxbAa28zAVqlXEosW7h7pz32gyyXHoEnXJp/ql3jtgPme6xgc0Qw
lwyyxx16Dce5C1w6fpJLHv2SSQOwho2rjddRLlXbmbD0Hdl0X/qm3wUPLgXr
pIi0wW5/7ro77uTSnz8+DQq70J+y98+YTFySU7482xR+5B2v8n0Fl8ydkjZ4
wTJ9sY3Ny7j0sPZj4Ss4+02ajSDykGPKmsQ9u9nU88EtdJk0l8I6bL6GwP2X
VXY+XcClgsWHF2fBUrt2zTSV5NLCC/fCpuxh076a762F4lyqdRY7kgjbdly3
eo78JnhTIb0GDnu5WUVwApeU61f9GIbf9FqkbxHk0lmDQw4mztiP7DVLLUeQ
x/3PxbjDMi4lNv/Gvn9Ni39/Hd61JDKhAHlST/a9STd8Z4ulazTy5sFtfYFz
9qJffunxNx159EbolAJtuOJRhUkP8mp5icywI/zdd7BHr4dDQ+O01S/Ah8z9
HJ52Ic9qWLqkw8rXCpVNkH8tXFzuNcM7NGfUCCAfB9w5/XniPvRfdhWva5Cf
U5riFirDr0s1rr1Cvj7auy1zK7zhmF/4a+TvDYJzLQLhhWveGQ8iny+cVfUj
BV7vMbDOBO6UPXOuCd6dbb2gBPk+c9kaRZH9bNKbaajrAgcZ/nuuBkdZf1lC
sMXWp7Y74IUmEzdrwrL73IbPwtJL5szZDvf7KUVkwLEuPjlJcMHFtqWfYV9J
5yuK+LyLcbEVYgfwPK9PrqqAbVK3Oq+A3W+dvxiL6+W9mD3RCa4V//QpGvcz
9LYiLgQOFgx4/hL3W9JxWjsHTpOKkJDCeEQMra7vgMue+SVexXg5Th11n+3C
pj/npyzT7+aQ2qKMGavgcf8Nmc/H+AstOfhgL3zH1jRIEs+nWpdnGAEf6nPR
XI3nd8P86+dCOGXBkYywXxw64HjjaA+cI7RGbdogh0SDZ2Xou7JpspXnIfdR
DtVfLd90EDZpWTl/xzgu3X0Q1HMdXjt38IyLEJf0q4blBuDNV1svD4hwyV/i
y+WbB1EvrcTzD8zj0npOzJIKeOkf/0+mmM9SWlte/4Vf9yuWrsN8z9j+WsjM
Det7USMdVeRSX/wTN4FDqBdhDXeyNbE+1E6ZWruz6d5IT96y7VwyNpOfOvcw
8tUCuYvZCVw6fO9MkQ58v9rY/0sil24J9h7ZBYtqW86a9Aj5PyWj+yl8XVmj
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
NVz6H8xMobE=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[1, 0.5, 0]], 
       LineBox[CompressedData["
1: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
eazH
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0, 0]], 
       LineBox[CompressedData["
1:eJwU23k4VVsYB2AhCYUKJUnnVOYhZSq1NkloIEmiKEWl0kCUkroVMockiQwh
JE1CZCpkzBBlKkLJOcdWZsr9+efe530Me++1vvUN22mF/WlzB24uLq5+Xi6u
mf/P2fkU/2VQsrw+00mFNMl493atHNwqeyfQrYgmFhtqHM3gXdFO+vrFNImX
Y1c9hG8Sn8nqEpps4lG8pzeLQUn1Gj9+VUqTnovrq47DpnP2nHAoo0kAbTx9
G144105AtJwmX9qPOXTBam7+uTYfaOKanbTmOjeDene78mt+JU2WqmYdSYPX
VpZ4b6uiSfGj93cbYO07GfmNsHBY918mD4PaEimf/aWaJllzh9S2wymjPk57
amiy/yrPEVdYsF7HtwpOPcWoeAeHz+H/ll5Lk13da/6yYMfn23nFP9JkzFpP
TYyXQRkXfHXygA2NDkY4wP2zrJvX1dGE/fb0h0B4B6ul3A8O1/CaegWnfDrQ
2Ap3MmLs+WYzqKgVKcKn62nie+/JHRW48PO0wjNYRSS/3BK+9ypGkwN/8q6a
vAK7xKvLrW6gyeW/rSrJ8KwdB4etYKZr/6Fa+JSYSpg3XPFrInwU/v7MdDQD
PntIoHw5H4O6kDNPoh5e/HnJ5FY4LfLYjwG4YKe8yhn4WU7mAf5Gmji+1z4U
CRd4a55eCgvpGoUXwkJOJqLy8Ivne8t+wm9f6uisga3lj06IzGFQdo2L29bC
XA/dlHXgQ7sqOGpwsrj3wUOwAo+qoxy8M/BO2C2YWSSrJQkP8zwqfQbP3hJh
yQdHe7wc/wLbP2/KYeH+9AdLlLj5GdTToD97quG+ow12CnCNRsDyFDikoyvU
HE7ioQQ9Yc09v997wNIWGfO2w+2Vs8bj4dygJ0vF4Bv6okqVcLhjosJnrK9i
jozdH1ilS0P1Dlyvqha6dC6DCu6nl22HLyaR95vhopNH+qewfzLLTMdOwINe
jIBkuCzMVjEcPrll1/A22FnA2TYP7p7zaekvxMeb0YB3QgIMatx7pctCmNt4
4z5tOECu/WQ44sskis0+DNelOTfOgz/r7pR4A3tJibzqQ7zKBP1L64WHuWRF
t8NHv2ZQCwQZ1Gb7krgkxPfINWGn47BYYrCcAc7DpoaCf+Hwhr1t3D4VNLm5
8kxYIXya3vWlCOdnUdnHPAkhfP/sCr3lOF/qQqHCpfBRnr//ub+jiccB/cRB
eI90Yc4FnNeijN/ay+YxqJZcyusszrPZrt32rvABjfCrxjj/pyIWvWLMZ1Aa
jj4Dt9/Q5OWPd8Y7YRcxS+WduTSZ0j7fcRGW4MoOm5VDE7/WT3Pq4Nba+tQd
WTRJkblr7SXMoI51ub69mEkT+uzWgVT49wXuf+wMmmiVjF5vgvnufhHa94Qm
pQ5WT5RFGJTkMqxnKk2+py7haoO/z91jsziBJgpTH8LniDIoMwf2Iv04mpzb
4SG/Fm5ILNprH4v4pFvM/eCnulGHvO/TRFoj+pH2AgY1dEX9s00Y4t97+/oj
cKPtK22d2zR50jxVEwxz+aeOCgXTRNfjwFgvfCXSxveuH+K/QHrbnYUMas3c
9Hfa12hyxziOHlyE88++tSP9JE3Wd07GSYoxqOtaLRbSTjTpuGC5ezNsaNss
6nuUJnIpglnh8Cn3yff69jTJ43O7pCXOoPbnnvu7Zy9NuktM+DwlcP9fNP9M
EZqs2zS0lF+SQZUIFlbnCyI/ftpZrQavzapgU/w0uXLq8ZV9MOVbNZHPS5Py
aNvOVDixVS5+++QA2T9ZnrRjKYOakypOO3YMkOvZD9aESTEok68uam/iB0i9
+tat0suxfu0kbHrVAOlnGSkZwouWGA5qSA8Q3mQTUWf4c+JePifxAaK5dGdr
Pmwwe1taFd8Aucez5/QBGXz/s1bLmz845GCj/d3oFcj/Aa5Nwo85hH3+yg/J
lQzqmoyFfZcKh/CpXa3Sh/3e8lSel+UQ6V/XnjnBXALHL4vKcIiZ7c1LuXCs
o8WIvSiHvDQMELZehfzTvaXQbYhNPCSitO6tRj6okpibmMcmYXX3pYrgeO5F
HV9fsUm6/4NZffD1oFMZck/ZpGP6YaW2LJ5fPtmmK45N9H4m232GX2c9TPrr
wyb8Oa98JOQZ1AtbiS6RvWxSvMOqRh9ufzkQVWDGJpe6JhY5w7WEUfifCZtw
BKn4d3D0VMjTrZvYpNG2Iu+sAoMa2XCG82k1mwT9OcnzAO7Z1l+xZgWbbPUV
NimHtbtkuxKXsknuM4tmaUWcrx/JG+pF2CSW9+tgJbzJgp/ePcUiVveuaY/C
RCxT0HWURRaorPRiKDGow/e0j2b8ZpEbe48LXYT1R5SuuvSxyCaW4O5E+L60
pvB0N4uMXs24VwvTdfI3kr6xiFPqn9WrlRnU+3W/2k0+s8hKEnFqF1z8WTzB
qJFF2hu0X16GqzgrFh35yCJmfz31GmCzpRebh8tZRNOMf/9VFcR/4bGroW9Y
hO5OjU+Djb201/pns8jjizv6muBEO8+IR69YRCoh1E1ZlUHp0amJepks0qSl
kW8FXwsXO/PuCYsEVzXz3IBPM000T6SxCPeI1O0WOGdTt6xsMovk+RU0z1ZD
fpF7E7zxEYucX24vvWbGVVznPRJYROUlr8N+uK8l6npHHIv8NEpO84HXqLof
dXrIInHtxr+fw9o/btdJx7KI9TmWdges/0fQY+oBiyyaE+w1dw3qzcWzS3jh
6vtrStfBK+7/OaYZzSLeao1CB+GVZbcVwu+zCPXebbc/vFNgnCENj+9bEpUF
u6x9JP4pikWec95864S/BOnX5MAnr9vKzlNnUBULeSSq4VWLZzlrw1Ge0fnC
+PmO9ISXh2GejX6h/8GReoaTQXAg89fR1bi+edNPvVw44x9j/hQseMLftwdO
Dh234o1hkXfTyrUiaxnUGfbJpRSe70r4RzFdOOPSNDMTz68t77L/KLwro23z
nngWGcwXSwiF1/mc2aqWyCKp5tl9+fDbVZwhvSQWOfLDWq0P7ohUEPVPYZFL
xclhousQP2NrSr+mskjog6ERHbg34vyYA/bv8QU9a3t46f4Da6Sxv4W7g/L9
4Myy4t/8L1ikWaVV5gXMHLuQtTqLRThz5W60wqKedj3uOYiPwiITJQ3kN1ed
qVeFLLL2/vwMC7iraeu5hHcsYuJmI+oJ8+Zyu7xH/F1QGm6uhkO7BvYl1yF+
5uhvGIGXv1OWP9rEIkldQTHSmgzqzsB5C5tWFmmMlHM4DUf0Ld/9tYdF+l3O
l9+FTwbWyzv3I95MixULYZWSZBPVQRZRm73/t4gWrnfi0A+DvywScDbY6zk8
fN0sJ0qCTRK2t3W1wEuEe5yipHF+ZeUNebQZ1Ji21ePCVWzys71YyAKWY248
5r6OTQxMRu4Nw3bT9oF6u9nEZtXmv8t0GFTbu39FCjZsco4r5KAhLP/Vmpd5
mE0eZsnL3oUXvzsqqu7CJlOMAy+11zMon0Oap2zD2GThv8cSh2C9j16H9txn
E4UvIx634BsLxE10E9jEKjhErwUWcF9MKp6zycvJkppLGxD/nY5inh/ZpLJJ
RD0RflHPHLjVzCZdzw7cqYKjH7v+Pt7BJiLHRm2W6eL3Lwr6fbefTWQ3GxRs
gcO3Xnn0bZBNNknfZjjD8en+I4OjbHKyUaHv7cz3H7+p6sjDIdefum//AR/Z
9M/zPT+HRPm9eyq8Efvrv3Vj7zwOeeYgulAb3px0ZlXZAg4pp2zdDsJmrF+q
RyU45OvStC++sP/pX57vl3LIyMio7jP4aEDAmc7lHMJ8cpuHexP63468O2ao
Fy32XuXK8KIfGdE/FDgkdPGpwH3wh7VGzaqoLyY11uY34ftHN92VX8Mh3DeM
JJ7BrS6SBz+t5ZBcHc22NvhRTPKvtZoccnaAGcdP0O+9CRAz1OYQuUeijutg
j4YlHKH1HPLNelrhIBwbGRt/awOHRIqwB/xhjUGJG/m6HGJa2vLyNbxrbgJ3
6kbUt8vlF7/D18/OSTLbxCFv12RtEqYYlK/fT5EXsNuPBJ4NsMfxzaP1sPKD
2+WOcPJQncxzuNvcKzAUzuv5dcgcjuY/Zf4WljW2in6F32/x1lriF3xhb39u
O64v6GrUJqbHoMw7+p5W4f6K5TXj9OA/Eq4uN3D/Hl+ZjqdgJmMt1xwdDlG/
I4qBjEGpT1TtttTikF8m0wPv4BweKydXDQ6J52K/pOH5B9ypw1ivfVktF6X0
GVTQUlb1SqynyMnyTUbw3t2P5r7BepevyOJxhSPGFnfKKnGIduDtwEr44eqA
uYGrOYTW9zIfhZeKuEvcYnJI8thJCeZmXH9eGjmMei9+xCjOA34mOGciewmH
1CzRdEyC68Svz9YW55CbtUzFeph+xS0VjfgZWj/9Ut4A/cXKM31LBDmkXjSr
/DO8RF1qh8QkmwQXMGlNQ/RDNUqRpp9R35dOb/pjhHlPWXPzjmA2WfcnTEva
mEGtamtU7/FjE7tKOTVjeIHLhZ7/vNkk65L5iliYKFg71HmyyZG2RzzbTBhU
dW5VZOlJNil8sL08fhvWt8bB8OB2NmGd7yyshkt4pW5eM2ITiZ1uOWNwzNvo
sicGbOL8LzZ153YG9Thz2xK5jWwiZfcnYAImS3JbUlTYxF0mapf5Tgb1xpN+
NraQTeLHVEw8YVvVa8Ot6A9qPpbop8DF1/XXVs1jk5XX2Gv/weJWolUNc9ik
vpMSTzVFvJtyh1xF//Av59P8T7DXUODbqnEWkQ91msNlhn4nPEB+NfqJq/rh
Y3tg+j0znwv9hErCj5ZZuxjUVdfiZoufqJeXLjcowbp+/IMCvSxyc7do1V5Y
bHX6xprvLNLGsyH/CezV9PXA5a8s4nckKHafOeKXmvPnfDOLZOkyI2/AolP8
g+GfWKRzUXbIU1jKI7KnsAH16X3ntdm7GdT64Ag/gn6jd5XGkWdw3dRv76YP
LHLawPXiF7jgAY/weeT/MfsXQbMs0G+4egdKl7GIwMM1ObvgHTxuJBT1Iuzt
mZqLcJ3S5v37S1Bf2p9+j4P5vnforSnG80mqzP8NS3j2aE4WsMhr7VNMyT0M
Kv2wsjL9FvV9b7q2PiweWJU7kI/6G65wOBTevE3LaX4ei7Q+P34hF9Zz/HhW
Gf3PkbqUwC74HntOu2Uui7jNl81Wt0S/8KzqcTn6oWklx2pr2O1gDy0C+257
1PUfzMWYcDj8mkVEnbpHU+Gplr2TBaiPUb7MeQ2wed3ehJl6yUy2Z0zCfSa7
ze6in0p/H6fF3Iv4CUwYEoU1ur9t3waP23j+F/GSRd5yy9i7wMtk1ftXwltX
2Lnfh+cLJMnkox5/JDEBJfDXgO+L7OB9tu1x/XCK1nCOANx1Wer1QisGdTm0
Z1bhcxY5cd+magM86v+04wo8lBPVeRjesdldbyvs+fnLiD+spN+8dAnMN7pY
6CV8TjndbugZ6rOY1Yo2eOpx/b/P8OJ1dzV59+F6+2X7S+E486ZtSrD/vBvi
b2GFs2KHLOCk/evOzfhFsIXbZfj19dyBMlg3I8w/EQ7d1Xu1BX5fVf+wCha+
4yMxAu/sF80agnmWOT+SxP00z91VKWXNoLZkH5cygg/KhXwzgGsGuJ1nnqfP
sHb4JPy9+aN/PnzOYb7gHTi9POfobKzH5PUdMvmwjWTinz3wjfgAjR545Sq3
FU/heUWVJvNsEL964t9FsN4RXwUOasDlUYYKl+Dl/4zPH4A99Mp/suEUqVt+
N+Fen+cix7F/ufvmvPoEjz9c6XAB+735gmHFX3i1Scd5IcRHVcTNr6v2o588
sCU7Be5o4BFwgx+0iUSNI56O/tZfHgMHJutKZ6CfokX+W1cK/36z4oET4pF7
J5ed+AHMk96vLSYRr7LlUy+y4G/0HmUPxL9ZUZtCF+wzdvvbNfRfHrl5cfNs
cd7+vD4fWsQiNemXg4/AQxWXuWtwnlxvTzktsGNQk6yTNek4jzF+bZ0b4U7P
2jfjOK9l1/Osjs9Y7ACfaSWLSLpdNiyE9cUTzy6oYZEi66kVzgexP1b57RM4
/792t0Xeg9MDFg/6Ij8s2pEn/B5+cfJLpzTyxzFy+e/SQ9g/oUgp+xYWmb9y
6vMHeOJys4lBJ4vYsCeDVx3G+WPJWDrR2J/eVr5dsNPS3OWnkc8yvr7xvAwL
rVrc7DGE9ai/dKIBVro/3pQ0hv3ImjS8dgT9WuGaUNNZbDLsNfm3zQH9+jGX
tmbk3+AFkyfCj6Ge8/OoHEW+Fje/OZ0H69uHiHBRbBJzWzisB25tvRPyQB/z
psjKXM3jmI/2euj3bmWT8vk7+L/AWdwldk/M2YRbMDZx2QkGxc7k1xI4ziau
PJvbk04hvkS3ub6NZJN9Q347c86hHhmcPrCGG/XdMk+sEy4pV14SNRvzcDa7
jd8F56nbWXv2XA4xvGx2wgreM9Fxo0sY9ZxX3HcUPlZsGJi9jEMEFsUVaZxH
/N2oUq1CvX+z9vW65+7Y/4AVUodcOGSZy3fJtMsMasOTtu6SXxwyJ+qc6Xkf
3J9V6sjH3wOEa9lA+AN4TDLm4p2RATIRe6LlPezyfWWK1cQAYT064iDui357
wSEXNhdNPj6zvPQa5r0tMuXIT5OoD+uTx2+hPvBxHNZK0ERlnHvaMwD9qdAR
5wXraCJ72csgCbZfPdHepEETmenJWzXw1MWiBVFaNFk4e3jR8kD0kyJTr6U2
0GRM5IdCIexSV+GwQJ8mRXKVltzB2J+2r6xcU5pYWIVleN/GfF56uqf1OE04
rzL3PIctbH7nhZygie/Cmql2eLNH6r7Np2jypoZ/m0Yo7meeZ3HcGZowtlz5
8R1eltQfrO9Ok8E1x2X0whnUXc3dTvNu0MQv2LvsJHw4fBPf/Zs0WclOcI6E
a/m1+lf50MQqpSNvAG7XUnJe60eTQmmLfTF3EC/PLp9VCqFJkCAJnYzA/Hj+
DjvoPk3kju/Xkb3LoJozq6XY0TQpLr34zRzWLBEXNIqhyfC1lyqpMN+OqOk/
D2myf0y+0ioS9dRXmzCTaKLQs4g36x6DOtvg+r7pKU3e6aundcKKIhOnpzJp
YvvQ1HxeFM7L+tZN0s9pctvG7+ER2DH6qozlS6xn3bTuwvsMqr5qZ/2dbJqU
vf11/kw06rv7z5RthTRp3PTU7D6s9jsmUKGIJl1vXRRLYdt+KbHZxTT593bq
29IHDGpkKVdXeglN1hXM314GW9HKRqWlNNEnDat/w/JxBuLXymhiVnB31rIY
zOc37qtqldPkRIHM63Ow+uslEnc+0CS+QJ0hHYvzGfvIU7yKJplkdMoILrB5
dywVflvwptkFnvtNZ7NONU2+FBgEfoDnv6qN2FpDk14y99gQfJbaPFYKDxVU
6y9/iHmL/+USvVqaiBRajrnCe8fLTq76SBNpamlDLFx7qeFmMKxY+PVJBZxi
9095CNamEn2H4bWMr1a762hiWHjssEwc+nFKaCIdtqCUN22DA7SlZs+qp4l9
4eBiN5j2fnTKFD5DZf15CMeEmshGwp6FHjWVsGjRvVWtsB9FHo/Ar8XSbBY3
0CSykOfGingGlXAhMM8UTqLKbbfD3+tMN1yDXxYG6LjDPnNnVabDxdSuRfHw
wzmZtjPv92sLxQaq4I0vT/QNwm1Uy4dRuCFkl61gI01+FcYkMhIYlGRcdKY0
PEYd9toBRyXxNijCfEWy1hfg9hrVbHV4kR5rXQLsvPWd+cz7/RVFmcI18KeN
x+4owyp653+NwRuqSs+tgHWLdN4zExnU37Hh9vmwid6/2J1wtWnkh2Hcj1VR
scdFeLJORK4JdtTz2ZMIf7la3P8Udi3aplYLZx0QmXMd/k9PRHAC7j5+4OTM
egQXNfasfMSgvFXOzJ95nx+td6/QFHZ7O+dbA9YztejAfQ94cfSeBn84W4/h
9giO6fNr0YVLi3rNPsIbPnz+0Yv9a9RLU5yEpQ+cYd+a+ftM0Wm+1Unon1e8
bV8Fc/TWdZrBXMKZabmIh6misTeX4MLU88ZGsIB+fkQSHHxZ5XEN4mtx8bWz
dTBDaCJvB7y2WEBWNhnzKldWhQbiMcb3orQp3HvIVewx4lfA9KeYO7xFU+eL
GPyt9T1vGRxMKca2VtJkW/y6KQ7cvazefx2cdSzhj3gK5pdV3KXeFTQJGL7a
5QgXbfwyIo7zM/pm4EsQXCHm3GyB82X/n21dFqy6kv3FH+dPR1i3kO8xzvOG
4qU973Fe5EYfJMEXi/85bsZ53jXgcKcGXmaupm6M8573qjFgBH4R6li1Ffkg
TP/5JcNU9BdtTgaqb2lC7T+1rxfe/mvRuqQcmqQx2szmpyEf3H5jfxb5RLzP
xEgTvrPm2UKN1zRhn5fT8oZjpg59foT8ExX8fdHqdAb1JMtuXBH5a7aludBO
+EJSqmHuE5wfqSIeN1jPvrWeSqfJ1scxv9/Dy77qBmg+xvku3vfR4Qnm8Xky
eSXxNLG7VV4WCPdLjJCFcTSpMNUqeAUnbs2oto6lSVzboozZGegf5dX/1CH/
7hyp9X8Ezy0x6rULp0lO3qbr1bCCUp726VDk9+tPPIbhmzdOurohf08K+x/f
8hT3rzscfTKAJinyhlt74LKCS16j12nCfSCPe9UzBnXNQS3S5yxN5v+rtDGD
O8rNv3x1polkbOvLS7D1+Q+PVE7SZE3nhGM9LPrUcPypI00OOuhUej1nUJcO
M730bWhScCorrOUFg/r1+OnaZ6h3l69krgzJwnr2bqvWEkQ9W17o+QYei17t
4TWHJuGFtU29cPgNW6NCHpqkcw/4bnyN9WlzLrQZGyCt3srsX3BKZNwZjy8D
ZH1w6qstOejv2wxOxt8bIKOxiYaTb5AfbCiPdYsGyEEf2zxmHoP6Jx5RYSw0
QCqcF6tvhyMdtgYc4B0g0RsDlj2ABxgeFdeGOES/1WVoUz6D4h/QWlDWyCGB
4pvj/3uL5739/UfYHQ5hBnb+nVvEoDTOO+14JMkhAa73XdThGJ33ERoLOWTE
Zk+fNdw/3KFfi3m+XOFDYxpcc7qST+Yv5ufyzLQdxTjv1xuGyTc2yeG5uu92
Ceblew8s81PYhNGvU5sD69yZF8gfzyYB9X8MuuBj7YyRQ/fZxDbuqNradwzK
dXC9LxXEJrzEdM4n2H7x98iXrmxi6iH9anEp8s8L3XuvMa9b6V4MMIAfu0gr
BW9iE/t/DYfPwP6VW4ova7OJ23+3FpTDeXphJ+8roR/0GzrtXoZ6v2g7/6AY
m6RsN92aAKtyX+e5jvn9+fxU6Vp41qYPU8qCbFIaale9uhzzhFzGlY9cbMKJ
qlBomnHAiUFzNubd/au4uT+g//jTJJmNeZx7+dUvyrBzn52vTjeLiCdo+N6E
t/2+MhLayiIyDiF2z+CPWUWdJ9A/K8j2a7bDIqpFnfbotzelPexZV4F8sTKE
9wn6c6NTk3kHYQe/ebKz0M+bq1qGB8BbOvgsz2OednwhuLkbHhao6C7APHzm
vKOkSCWD8qWfWt/FfOGhVTS4Af707T33bcwnQW/cHobB9BWb1WzMY5Gede4F
8C3h/bVmT1kkniiZ9sMdMsm8X9Ixz87yWS1RxaCKicMR71QWySrp/KsPy5x6
G7gvhUUKb+p+cobvHFWW353EIhVb76ZHwYk5a7pdElmkce7v66UzX1fadTIv
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
U8J+9Jb2RMDdc3MubFDgEKeIYMufMK+21dHP2M8Izp/5opcRv74FkuMrOKTY
0KpMBzbexrPxrzSHSI7KaPvDtvTp668Wc0jF3udLVDwRn8uTtwsJcsjIU/F6
Szigyvun8xwOYfBf8vOCb/d9Dyrg4RCP7M2TH2G15G95qlNsorDkU5vLFSZ1
XXpbqROLTfxaRmNzvNAPv36tpljJJsYHNq7e8h/ic55oy04fNvnZbLTgFDy4
3i+Fus4mvuYW/8Lhi7fmLtf2YpPyrSeaumHTCQEnHXc2MVK/533jOpPi3KyT
CDrKJoZzhntLbuB8pccU5BqzSe81roZ+2NM95bucIZt4TwkWLLzJpCS3N8Y/
1GeT0kHG3cPwrm/6wU82sMmWNrOtPN5ManbQyCClwiYGz9KT9X2wnzZ7rjqI
sUm3YnaYE6xvZ+R8CfniRlKJVyhc2tHtGy3MJu/ut+ztgmWDLU5xCbDJZm9+
/v98mdRbrdMsU/QHXVyLhh7DiqcCdQqnUC8vLf9WB/+H5mvDBPLbGc3sFbcw
j5/3idszzCL6NkeOFcFczfnrF7Dw859OW/TBXTGrh9v78PNmlyhRP8w3ks+W
vPrBIkVbQhcfgneszoy4+Z1FKLXCci5/1EPV5J6MVhb5llr5Ug7uWb3+2qcv
yOermh+awbcljtnN+cwihZKcCw/hAdkn7wMaWYTMlpKnApgUe9fj/cuQf69a
l7udgNu5lFd6VuH7n7q+i4Cj1Ca/9CFfU9bVdmz448j3tj70I1efXnyyOBD9
jVLYPM9S3B/v6snN8LAGa1jqPZ7v6ZWIKDg5N/vVf8V4Hl7F7vczX+dvczZC
PSjZ17xmEGbyMhMlC1EPedWqtwYxKesD1Vu6UT9u7GuTdIEzDSdCW/NY5H2G
77EYWHZ2r9RX9DeG+zp5huEOpb2PBHJZxDsjcJdMMJPKTpt/XR31qIxnfew2
OHLebhtH9D/8+3pZbvDVqQyppNfo1zJC18fDNyV4swazUK94iG/1zM//XStu
DH+w6v80BofZSiulo94JZNxlrgxBP68/3iMJm/AYnDWF12n1rrnzEv2aFf3W
A07fZPFPEq58Ei2UBDfve66T/oJFhHiMretg1q3T9Ubwdqvh5Cn4qiwni0Z9
DXgSNyx7G/H5+2FjAlzFvXPzbtj99Mkl9rCQ1UTIFfhavJ+LIrzjSVLHY7g2
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
+639z40B//8D+XNntRpsU31rDwAmsXe7
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9., 0}, 
     BaseStyle -> {FontSize -> 18}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{9, 10}, {0.04076361511720387, 16.023240947605032`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"s1\"", "\"p\"", "\"y\"", "\"z\"", "\"a\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1/3, 1/3, 1/3]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 2/3, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.5, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[2/3, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.769386119426762*^9, 3.769386134493289*^9}, 
   3.7693873989329567`*^9, 3.7693874611210613`*^9, 3.769387549508256*^9, 
   3.7693876160147657`*^9, 3.769387662356853*^9, 3.769387701653105*^9, {
   3.769387758078367*^9, 3.7693877872748013`*^9}, {3.769387843886392*^9, 
   3.7693878700827847`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwU23k4VVsYB2AhCYUKJUnnVOYhZSq1NkloIEmiKEWl0kCUkroVMockiQwh
JE1CZCpkzBBlKkLJOcdWZsr9+efe530Me++1vvUN22mF/WlzB24uLq5+Xi6u
mf/P2fkU/2VQsrw+00mFNMl493atHNwqeyfQrYgmFhtqHM3gXdFO+vrFNImX
Y1c9hG8Sn8nqEpps4lG8pzeLQUn1Gj9+VUqTnovrq47DpnP2nHAoo0kAbTx9
G144105AtJwmX9qPOXTBam7+uTYfaOKanbTmOjeDene78mt+JU2WqmYdSYPX
VpZ4b6uiSfGj93cbYO07GfmNsHBY918mD4PaEimf/aWaJllzh9S2wymjPk57
amiy/yrPEVdYsF7HtwpOPcWoeAeHz+H/ll5Lk13da/6yYMfn23nFP9JkzFpP
TYyXQRkXfHXygA2NDkY4wP2zrJvX1dGE/fb0h0B4B6ul3A8O1/CaegWnfDrQ
2Ap3MmLs+WYzqKgVKcKn62nie+/JHRW48PO0wjNYRSS/3BK+9ypGkwN/8q6a
vAK7xKvLrW6gyeW/rSrJ8KwdB4etYKZr/6Fa+JSYSpg3XPFrInwU/v7MdDQD
PntIoHw5H4O6kDNPoh5e/HnJ5FY4LfLYjwG4YKe8yhn4WU7mAf5Gmji+1z4U
CRd4a55eCgvpGoUXwkJOJqLy8Ivne8t+wm9f6uisga3lj06IzGFQdo2L29bC
XA/dlHXgQ7sqOGpwsrj3wUOwAo+qoxy8M/BO2C2YWSSrJQkP8zwqfQbP3hJh
yQdHe7wc/wLbP2/KYeH+9AdLlLj5GdTToD97quG+ow12CnCNRsDyFDikoyvU
HE7ioQQ9Yc09v997wNIWGfO2w+2Vs8bj4dygJ0vF4Bv6okqVcLhjosJnrK9i
jozdH1ilS0P1Dlyvqha6dC6DCu6nl22HLyaR95vhopNH+qewfzLLTMdOwINe
jIBkuCzMVjEcPrll1/A22FnA2TYP7p7zaekvxMeb0YB3QgIMatx7pctCmNt4
4z5tOECu/WQ44sskis0+DNelOTfOgz/r7pR4A3tJibzqQ7zKBP1L64WHuWRF
t8NHv2ZQCwQZ1Gb7krgkxPfINWGn47BYYrCcAc7DpoaCf+Hwhr1t3D4VNLm5
8kxYIXya3vWlCOdnUdnHPAkhfP/sCr3lOF/qQqHCpfBRnr//ub+jiccB/cRB
eI90Yc4FnNeijN/ay+YxqJZcyusszrPZrt32rvABjfCrxjj/pyIWvWLMZ1Aa
jj4Dt9/Q5OWPd8Y7YRcxS+WduTSZ0j7fcRGW4MoOm5VDE7/WT3Pq4Nba+tQd
WTRJkblr7SXMoI51ub69mEkT+uzWgVT49wXuf+wMmmiVjF5vgvnufhHa94Qm
pQ5WT5RFGJTkMqxnKk2+py7haoO/z91jsziBJgpTH8LniDIoMwf2Iv04mpzb
4SG/Fm5ILNprH4v4pFvM/eCnulGHvO/TRFoj+pH2AgY1dEX9s00Y4t97+/oj
cKPtK22d2zR50jxVEwxz+aeOCgXTRNfjwFgvfCXSxveuH+K/QHrbnYUMas3c
9Hfa12hyxziOHlyE88++tSP9JE3Wd07GSYoxqOtaLRbSTjTpuGC5ezNsaNss
6nuUJnIpglnh8Cn3yff69jTJ43O7pCXOoPbnnvu7Zy9NuktM+DwlcP9fNP9M
EZqs2zS0lF+SQZUIFlbnCyI/ftpZrQavzapgU/w0uXLq8ZV9MOVbNZHPS5Py
aNvOVDixVS5+++QA2T9ZnrRjKYOakypOO3YMkOvZD9aESTEok68uam/iB0i9
+tat0suxfu0kbHrVAOlnGSkZwouWGA5qSA8Q3mQTUWf4c+JePifxAaK5dGdr
Pmwwe1taFd8Aucez5/QBGXz/s1bLmz845GCj/d3oFcj/Aa5Nwo85hH3+yg/J
lQzqmoyFfZcKh/CpXa3Sh/3e8lSel+UQ6V/XnjnBXALHL4vKcIiZ7c1LuXCs
o8WIvSiHvDQMELZehfzTvaXQbYhNPCSitO6tRj6okpibmMcmYXX3pYrgeO5F
HV9fsUm6/4NZffD1oFMZck/ZpGP6YaW2LJ5fPtmmK45N9H4m232GX2c9TPrr
wyb8Oa98JOQZ1AtbiS6RvWxSvMOqRh9ufzkQVWDGJpe6JhY5w7WEUfifCZtw
BKn4d3D0VMjTrZvYpNG2Iu+sAoMa2XCG82k1mwT9OcnzAO7Z1l+xZgWbbPUV
NimHtbtkuxKXsknuM4tmaUWcrx/JG+pF2CSW9+tgJbzJgp/ePcUiVveuaY/C
RCxT0HWURRaorPRiKDGow/e0j2b8ZpEbe48LXYT1R5SuuvSxyCaW4O5E+L60
pvB0N4uMXs24VwvTdfI3kr6xiFPqn9WrlRnU+3W/2k0+s8hKEnFqF1z8WTzB
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
bHX6xprvLNLGsyH/CezV9PXA5a8s4nckKHafOeKXmvPnfDOLZOkyI2/AolP8
g+GfWKRzUXbIU1jKI7KnsAH16X3ntdm7GdT64Ag/gn6jd5XGkWdw3dRv76YP
LHLawPXiF7jgAY/weeT/MfsXQbMs0G+4egdKl7GIwMM1ObvgHTxuJBT1Iuzt
mZqLcJ3S5v37S1Bf2p9+j4P5vnforSnG80mqzP8NS3j2aE4WsMhr7VNMyT0M
Kv2wsjL9FvV9b7q2PiweWJU7kI/6G65wOBTevE3LaX4ei7Q+P34hF9Zz/HhW
Gf3PkbqUwC74HntOu2Uui7jNl81Wt0S/8KzqcTn6oWklx2pr2O1gDy0C+257
1PUfzMWYcDj8mkVEnbpHU+Gplr2TBaiPUb7MeQ2wed3ehJl6yUy2Z0zCfSa7
ze6in0p/H6fF3Iv4CUwYEoU1ur9t3waP23j+F/GSRd5yy9i7wMtk1ftXwltX
2Lnfh+cLJMnkox5/JDEBJfDXgO+L7OB9tu1x/XCK1nCOANx1Wer1QisGdTm0
Z1bhcxY5cd+magM86v+04wo8lBPVeRjesdldbyvs+fnLiD+spN+8dAnMN7pY
6CV8TjndbugZ6rOY1Yo2eOpx/b/P8OJ1dzV59+F6+2X7S+E486ZtSrD/vBvi
b2GFs2KHLOCk/evOzfhFsIXbZfj19dyBMlg3I8w/EQ7d1Xu1BX5fVf+wCha+
4yMxAu/sF80agnmWOT+SxP00z91VKWXNoLZkH5cygg/KhXwzgGsGuJ1nnqfP
sHb4JPy9+aN/PnzOYb7gHTi9POfobKzH5PUdMvmwjWTinz3wjfgAjR545Sq3
FU/heUWVJvNsEL964t9FsN4RXwUOasDlUYYKl+Dl/4zPH4A99Mp/suEUqVt+
N+Fen+cix7F/ufvmvPoEjz9c6XAB+735gmHFX3i1Scd5IcRHVcTNr6v2o588
sCU7Be5o4BFwgx+0iUSNI56O/tZfHgMHJutKZ6CfokX+W1cK/36z4oET4pF7
J5ed+AHMk96vLSYRr7LlUy+y4G/0HmUPxL9ZUZtCF+wzdvvbNfRfHrl5cfNs
cd7+vD4fWsQiNemXg4/AQxWXuWtwnlxvTzktsGNQk6yTNek4jzF+bZ0b4U7P
2jfjOK9l1/Osjs9Y7ACfaSWLSLpdNiyE9cUTzy6oYZEi66kVzgexP1b57RM4
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
eSXxNLG7VV4WCPdLjJCFcTSpMNUqeAUnbs2oto6lSVzboozZGegf5dX/1CH/
7hyp9X8Ezy0x6rULp0lO3qbr1bCCUp726VDk9+tPPIbhmzdOurohf08K+x/f
8hT3rzscfTKAJinyhlt74LKCS16j12nCfSCPe9UzBnXNQS3S5yxN5v+rtDGD
O8rNv3x1polkbOvLS7D1+Q+PVE7SZE3nhGM9LPrUcPypI00OOuhUej1nUJcO
M730bWhScCorrOUFg/r1+OnaZ6h3l69krgzJwnr2bqvWEkQ9W17o+QYei17t
4TWHJuGFtU29cPgNW6NCHpqkcw/4bnyN9WlzLrQZGyCt3srsX3BKZNwZjy8D
ZH1w6qstOejv2wxOxt8bIKOxiYaTb5AfbCiPdYsGyEEf2zxmHoP6Jx5RYSw0
QCqcF6tvhyMdtgYc4B0g0RsDlj2ABxgeFdeGOES/1WVoUz6D4h/QWlDWyCGB
4pvj/3uL5739/UfYHQ5hBnb+nVvEoDTOO+14JMkhAa73XdThGJ33ERoLOWTE
Zk+fNdw/3KFfi3m+XOFDYxpcc7qST+Yv5ufyzLQdxTjv1xuGyTc2yeG5uu92
Ceblew8s81PYhNGvU5sD69yZF8gfzyYB9X8MuuBj7YyRQ/fZxDbuqNradwzK
dXC9LxXEJrzEdM4n2H7x98iXrmxi6iH9anEp8s8L3XuvMa9b6V4MMIAfu0gr
BW9iE/t/DYfPwP6VW4ova7OJ23+3FpTDeXphJ+8roR/0GzrtXoZ6v2g7/6AY
m6RsN92aAKtyX+e5jvn9+fxU6Vp41qYPU8qCbFIaale9uhzzhFzGlY9cbMKJ
qlBomnHAiUFzNubd/au4uT+g//jTJJmNeZx7+dUvyrBzn52vTjeLiCdo+N6E
t/2+MhLayiIyDiF2z+CPWUWdJ9A/K8j2a7bDIqpFnfbotzelPexZV4F8sTKE
9wn6c6NTk3kHYQe/ebKz0M+bq1qGB8BbOvgsz2OednwhuLkbHhao6C7APHzm
vKOkSCWD8qWfWt/FfOGhVTS4Af707T33bcwnQW/cHobB9BWb1WzMY5Gede4F
8C3h/bVmT1kkniiZ9sMdMsm8X9Ixz87yWS1RxaCKicMR71QWySrp/KsPy5x6
G7gvhUUKb+p+cobvHFWW353EIhVb76ZHwYk5a7pdElmkce7v66UzX1fadTIv
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
U8J+9Jb2RMDdc3MubFDgEKeIYMufMK+21dHP2M8Izp/5opcRv74FkuMrOKTY
0KpMBzbexrPxrzSHSI7KaPvDtvTp668Wc0jF3udLVDwRn8uTtwsJcsjIU/F6
Szigyvun8xwOYfBf8vOCb/d9Dyrg4RCP7M2TH2G15G95qlNsorDkU5vLFSZ1
XXpbqROLTfxaRmNzvNAPv36tpljJJsYHNq7e8h/ic55oy04fNvnZbLTgFDy4
3i+Fus4mvuYW/8Lhi7fmLtf2YpPyrSeaumHTCQEnHXc2MVK/533jOpPi3KyT
CDrKJoZzhntLbuB8pccU5BqzSe81roZ+2NM95bucIZt4TwkWLLzJpCS3N8Y/
1GeT0kHG3cPwrm/6wU82sMmWNrOtPN5ManbQyCClwiYGz9KT9X2wnzZ7rjqI
sUm3YnaYE6xvZ+R8CfniRlKJVyhc2tHtGy3MJu/ut+ztgmWDLU5xCbDJZm9+
/v98mdRbrdMsU/QHXVyLhh7DiqcCdQqnUC8vLf9WB/+H5mvDBPLbGc3sFbcw
j5/3idszzCL6NkeOFcFczfnrF7Dw859OW/TBXTGrh9v78PNmlyhRP8w3ks+W
vPrBIkVbQhcfgneszoy4+Z1FKLXCci5/1EPV5J6MVhb5llr5Ug7uWb3+2qcv
yOermh+awbcljtnN+cwihZKcCw/hAdkn7wMaWYTMlpKnApgUe9fj/cuQf69a
l7udgNu5lFd6VuH7n7q+i4Cj1Ca/9CFfU9bVdmz448j3tj70I1efXnyyOBD9
jVLYPM9S3B/v6snN8LAGa1jqPZ7v6ZWIKDg5N/vVf8V4Hl7F7vczX+dvczZC
PSjZ17xmEGbyMhMlC1EPedWqtwYxKesD1Vu6UT9u7GuTdIEzDSdCW/NY5H2G
77EYWHZ2r9RX9DeG+zp5huEOpb2PBHJZxDsjcJdMMJPKTpt/XR31qIxnfew2
OHLebhtH9D/8+3pZbvDVqQyppNfo1zJC18fDNyV4swazUK94iG/1zM//XStu
DH+w6v80BofZSiulo94JZNxlrgxBP68/3iMJm/AYnDWF12n1rrnzEv2aFf3W
A07fZPFPEq58Ei2UBDfve66T/oJFhHiMretg1q3T9Ubwdqvh5Cn4qiwni0Z9
DXgSNyx7G/H5+2FjAlzFvXPzbtj99Mkl9rCQ1UTIFfhavJ+LIrzjSVLHY7g2
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
+639z40B//8D+XNntRpsU31rDwAmsXe7
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9., 0.89}, 
     BaseStyle -> {FontSize -> 18}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{9, 10}, {0.8938874271884415, 1.0518072698153202`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"a\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.769386119426762*^9, 3.769386134493289*^9}, 
   3.7693873989329567`*^9, 3.7693874611210613`*^9, 3.769387549508256*^9, 
   3.7693876160147657`*^9, 3.769387662356853*^9, 3.769387701653105*^9, {
   3.769387758078367*^9, 3.7693877872748013`*^9}, {3.769387843886392*^9, 
   3.7693878703333273`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        RGBColor[0, 0, 1]], 
       LineBox[CompressedData["
1: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
Pw52fRmnvnHy9wEdCVH34fe6xdaycL54uUPj58l6qSD1EfdvuHiqmmAT9quj
1y0ZfmZL9WpNOjVZ2xSmjgQVbYJnyja5T36+vvhcXmIQ7Holvy8GNnv0Z9t1
eOFm8bcqk5+vb9DWroDvej3ouI39Wje+a/gvfHbk9qLlcLny9TKFL2wqKFU+
8S72f4Np0zkTeMYnvVFVuNpT3nMvfPVziWci4scmyn5pMhx8J/hxD+LLvqr8
dQtsN8294zziz7+cOyHejPNzI9e9KpIhF1+GL9aHFXVqmwYQv01FKxMTYCkZ
/jNaiPcpBTIFj2DzoXf/LTvJENUnf7va4IREUyfdcIbsybtptaoF/az4lqti
k5+vz4kM9YLHepQmvuN8Zd9xz06CJV50FOTh/PXdVJD4Cd/8zSguDUK+S4+p
Sm1lUybC75Uu43xnXPIaK4B/J7r6yh9hyPOLJgt/wT/f2Z+JPsyQaanDccZf
cd5OTvlgdgDxG7V3QxcsfGdRptpu7OepNcHybegfp25fu9qLIR/DWZlmsP5S
OyVLD8RnyCex/+CEnpWrViE/3ThkWbH2G+bzXYOBJ7YwpNJn/shh+NOOK8t0
NyOfefNrXYGNU79n19kxZJlXfkwfHK7Fy+7biP130rTM+I78/PlxaJIpQ1q2
CAVWwqkLghvrKYYIbm69MQBn7VW4KrGaIRbWadOsfqBeOlsu2ayP/GUq+moY
TtuglWOkjXxCfR9U+4l5VarAQxr5XH51sYYtfPaihOkXNYZs1w+M4sGfDIyD
LOYxpF27Y619O5vKT1ifcXQm8ot0+YusDja17NHtJKNeHgndaiNVDy9mtdaG
dPPI+KX6HePwAGvDqnu/eGSC/XXQ6hebupxa9X7gK4/w6Y5q9kxaMvXgQC2P
TLFalKjbyaam+9rsrLvLI4KRyVsedOP6+rL+3vfkkYhXcpwv8JEzH/+75oqv
T0/vEe6ZfF7/Lf+0M49MTb0V7QirKr2ZamDLI0LXnj8egndXr200NOQRkWf9
8wz/sikrk5b7fZI8Itbv9LOwD/VWO4Jm8rhkuDKvrROmbh+RJHe4pOP6rBaF
f2yq527v+dobXFJuW/7xCGxvresxeIlLorIMKjT6MY+smPZm5UkuEfKUy/7f
JnwH1jc7XF0++S+zZ7pytTjhF9A94e+6Z79Zav9plWFBL5DfYXG6fxGw//6o
sTdnF5CvZx+yYNMDYH9S3zVV5DcwP3uoq72/AuzPdW8JOwHk6y/oCH0E7L//
c5psafAX2B9hVwn5MnGp/TvJ96axQP5brfDoDT1L7e998DLqAvI5dp3VqWpf
ar93HpP2EyBfYp9MkEXtUvuaX4UyM/4B/Z8zszctc6l9zsWzEkeB/IOHBK7N
AJ1/sUJT9BOQLy8Yq3c7HtheDXvI6/Nf2WFh7Wr9iWHA9qeuLVclkO/lZpjO
Cmz/SbHMZFsG5BdeW3SuyxfYnrz9hekykH+uomGDoudS+58bA/7/B/J7eXeG
nHJZag8A/KzdpA==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9., 0.040400000000000005`}, 
     BaseStyle -> {FontSize -> 18}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{9, 10}, {0.04076361511720387, 0.04796515028220871}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"s\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.769386119426762*^9, 3.769386134493289*^9}, 
   3.7693873989329567`*^9, 3.7693874611210613`*^9, 3.769387549508256*^9, 
   3.7693876160147657`*^9, 3.769387662356853*^9, 3.769387701653105*^9, {
   3.769387758078367*^9, 3.7693877872748013`*^9}, {3.769387843886392*^9, 
   3.76938787054245*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0.9108534335342164`", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.769386119426762*^9, 3.769386134493289*^9}, 
   3.7693873989329567`*^9, 3.7693874611210613`*^9, 3.769387549508256*^9, 
   3.7693876160147657`*^9, 3.769387662356853*^9, 3.769387701653105*^9, {
   3.769387758078367*^9, 3.7693877872748013`*^9}, {3.769387843886392*^9, 
   3.7693878705597258`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"**", "**", "**", "Collective"}], " ", "oscillations", " ", 
     "against", " ", "yeast", " ", "cell", " ", "density"}], ",", " ", 
    RowBox[{
    "assuming", " ", "fast", " ", "signal", " ", "diffusion", " ", "across", 
     " ", "the", " ", "membrane"}]}], "*******)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"maxTime", "=", "20"}], ";", " ", 
    RowBox[{"t0", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", "3"}], ";", 
    RowBox[{"\[Tau]", "=", "0.01"}], ";", 
    RowBox[{"\[Alpha]1", "=", "1"}], ";", 
    RowBox[{"\[Alpha]2", "=", "1"}], ";", " ", 
    RowBox[{"\[Epsilon]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{"k1", "=", "0.5"}], ";", 
    RowBox[{"k2", "=", "0.3"}], ";", 
    RowBox[{"d", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"basal", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxN", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phi", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"0.01", " ", "#1"}], "-", "0.01"}], " ", "&"}], ",", 
       "maxN"}], "]"}]}], ";", 
    RowBox[{"varS0", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", " ", "#1"}], " ", "&"}], ",", "maxN"}], "]"}]}], ";", 
    RowBox[{"varf0", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", " ", "#1"}], " ", "&"}], ",", "maxN"}], "]"}]}], ";", 
    RowBox[{"s0Array", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", " ", "#1"}], " ", "&"}], ",", "maxN"}], "]"}]}], ";", 
    RowBox[{"f0Array", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", " ", "#1"}], " ", "&"}], ",", "maxN"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "<", 
      RowBox[{"maxN", "+", "1"}]}], ",", 
     RowBox[{"j", "++"}], ",", 
     RowBox[{
      RowBox[{"\[Phi]", "=", 
       RowBox[{"phi", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"timeCourse", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Tau]", " ", 
             RowBox[{
              RowBox[{"p", "'"}], "[", "t", "]"}]}], "\[Equal]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], "  ", 
              RowBox[{
               RowBox[{"p", "[", "t", "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{
                  RowBox[{"p", "[", "t", "]"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", "h"}], ")"}]}]}], ")"}]}]}], "+", 
             RowBox[{"4", "  ", 
              RowBox[{
               RowBox[{"z", "[", "t", "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{
                  RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], " ", ")"}]}]}], 
             "-", 
             RowBox[{"2", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"p", "[", "t", "]"}], "^", "2"}], "/", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{
                  RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], ")"}]}]}]}]}], 
           ",", 
           RowBox[{
            RowBox[{"\[Tau]", " ", 
             RowBox[{
              RowBox[{"y", "'"}], "[", "t", "]"}]}], "\[Equal]", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{
               RowBox[{"p", "[", "t", "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{
                  RowBox[{"p", "[", "t", "]"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", "h"}], ")"}]}]}], ")"}]}]}], "-", 
             RowBox[{"\[Alpha]1", " ", 
              RowBox[{"y", "[", "t", "]"}], 
              RowBox[{"(", 
               RowBox[{"basal", "+", 
                RowBox[{"s1", "[", "t", "]"}]}], ")"}]}], "-", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"y", "[", "t", "]"}]}]}]}], ",", 
           RowBox[{
            RowBox[{"\[Tau]", " ", 
             RowBox[{
              RowBox[{"z", "'"}], "[", "t", "]"}]}], "\[Equal]", 
            RowBox[{
             RowBox[{"\[Alpha]1", " ", 
              RowBox[{"y", "[", "t", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"basal", "+", 
                RowBox[{"s1", "[", "t", "]"}]}], ")"}]}], "-", 
             RowBox[{"2", "  ", 
              RowBox[{
               RowBox[{"z", "[", "t", "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{
                  RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], " ", 
                ")"}]}]}]}]}], ",", 
           RowBox[{
            RowBox[{"\[Tau]", " ", 
             RowBox[{
              RowBox[{"a", "'"}], "[", "t", "]"}]}], "==", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{
               RowBox[{"z", "[", "t", "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{
                  RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], " ", ")"}]}]}], 
             "-", 
             RowBox[{"\[Alpha]2", " ", 
              RowBox[{"a", "[", "t", "]"}]}]}]}], ",", 
           RowBox[{
            RowBox[{"d", " ", "\[Tau]", " ", 
             RowBox[{
              RowBox[{"s1", "'"}], "[", "t", "]"}]}], "\[Equal]", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Phi]", "/", 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[Phi]"}], ")"}]}], " ", "\[Alpha]2", " ", 
              
              RowBox[{"a", "[", "t", "]"}]}], "-", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Phi]", " ", "k1"}], "+", "k2"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"\[Phi]", "+", "1"}], ")"}]}], " ", 
              RowBox[{"s1", "[", "t", "]"}]}]}]}], ",", 
           RowBox[{
            RowBox[{"p", "[", "0", "]"}], "\[Equal]", "1.01"}], ",", 
           RowBox[{
            RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{
            RowBox[{"z", "[", "0", "]"}], "==", "1"}], ",", 
           RowBox[{
            RowBox[{"a", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{
            RowBox[{"s1", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}], ",", 
           RowBox[{"z", "[", "t", "]"}], ",", 
           RowBox[{"a", "[", "t", "]"}], ",", 
           RowBox[{"s1", "[", "t", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sSol", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"s1", "[", "t", "]"}], "/.", "timeCourse"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s0", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"sSol", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"d", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
              "1000"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"s0Array", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "=", "s0"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"varS0", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "=", 
       RowBox[{"Max", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"sSol", "[", "t", "]"}], "-", "s0"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"d", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
              "1000"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"aSol", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"a", "[", "t", "]"}], "/.", "timeCourse"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"f0", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"aSol", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"d", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
              "1000"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f0Array", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "=", "f0"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"varf0", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "=", 
       RowBox[{"Max", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"aSol", "[", "t", "]"}], "-", "f0"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"d", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
              "1000"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7380368571410427`*^9, 3.738036859891089*^9}, 
   3.738036901711733*^9, {3.738036965626964*^9, 3.73803707074413*^9}, {
   3.738037288699037*^9, 3.738037307930867*^9}, 3.738037515263009*^9, {
   3.738037571228961*^9, 3.7380375915660963`*^9}, {3.738037678713451*^9, 
   3.73803774830285*^9}, {3.7380378003144417`*^9, 3.738037831275557*^9}, {
   3.738039883199349*^9, 3.738039907617507*^9}, {3.7380399440949*^9, 
   3.738039977268198*^9}, {3.738040201980934*^9, 3.7380403042886133`*^9}, {
   3.7380403840939293`*^9, 3.738040425031075*^9}, {3.738040758529504*^9, 
   3.738040761322896*^9}, {3.7380409751488037`*^9, 3.738040994285565*^9}, {
   3.738041027592614*^9, 3.738041027726914*^9}, {3.738041122854409*^9, 
   3.738041123054029*^9}, {3.738041592386194*^9, 3.7380415946343937`*^9}, {
   3.738041659448285*^9, 3.7380416603899307`*^9}, {3.769383840242587*^9, 
   3.7693838560856543`*^9}, {3.7693858201025887`*^9, 3.769385820138455*^9}, 
   3.769385872909615*^9, {3.769385905538905*^9, 3.769385951147647*^9}, {
   3.769386009422366*^9, 3.769386026643902*^9}, {3.769386170639627*^9, 
   3.769386177968321*^9}, {3.769387998784692*^9, 3.769388060689933*^9}, {
   3.769424431190096*^9, 3.7694244446179867`*^9}, {3.769425090957333*^9, 
   3.769425105754456*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"phi", ",", 
      RowBox[{"Flatten", "[", "varS0", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Blue", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<s-amplitude\>\"", "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"phi", ",", 
      RowBox[{"Flatten", "[", "s0Array", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Blue", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<s-level\>\"", "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"phi", ",", 
      RowBox[{"Flatten", "[", "varf0", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Blue", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<a-amplitude\>\"", "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"phi", ",", 
      RowBox[{"Flatten", "[", "f0Array", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Blue", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<a-level\>\"", "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.738037347847674*^9, 3.738037377883729*^9}, {
   3.738037414694525*^9, 3.738037415982439*^9}, {3.738037789789953*^9, 
   3.738037790022709*^9}, {3.7380379750122423`*^9, 3.738037984496418*^9}, {
   3.738040470965473*^9, 3.738040556858818*^9}, 3.76938590818085*^9, {
   3.769387983329349*^9, 3.769387986207272*^9}, {3.769389097038961*^9, 
   3.769389097070178*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {
      Hue[0.67, 0.6, 0.6], 
      Directive[
       PointSize[0.01388888888888889], 
       AbsoluteThickness[1.6], FontSize -> 18, 
       RGBColor[0, 0, 1]], 
      PointBox[CompressedData["
1:eJw1kwtMU2cUxxvMJo9t4IAAY0DRuCDbBAZRzFb/1WhAXRjoVIaNFlFUzKQs
CgxYVjcQEjfAZ3xBiiCPQi+31wcwcHSCIEacgAhjoLe833QqTuPAlcu5J2ma
Nt893/n/fud67o7dvNdCIpHsMX/mvsVyZ1ecarrlviLZgQkyJqXC/NdsrsJh
dZLw+zTq21/o5N8fQ6V72lhYZS4yMsOdctNPYv58ATp7/4xu3noO54UqQfbZ
nK/WvshFlXCeQeWzDewW/zyMh8110KPg34ZDWQcu0/PXULZDkjp1twA2Hfkq
mXUFHkRlLQ84WogLQr8qJGpvrJ04WIRliqxb0141kAZVr89rLaL+v+PljoiZ
YkUJCsxPd+QbINF7P71s0GJMuO8PsB7K6OL+UvgLVQel0wI3P8cyur8ektuL
rr7+RAdzc/MNt7E/9FjPoQgdrIV5GhG+OMe54nMGmwUAd2D4LsJtVxJDeZvg
zLeURl9hYBSA3UWw7Lh83aVymvce2GpFZmcEC2E8VTNMcr9X52NY4nkfgY6e
HRkbWczbeABN0cVe0z8s5XkAuWUju91aj2DhghYEMxMlMXF6yteCxMgtMrW3
HllCgFYoY+2/+ClPT3nbkCiNLVxzXw8hTkcbOu3dL7o81FP+h8gIG3o+OKKH
x9w47u2wzF4Qs/WqHnUCj3ZkJ2bWzVpwiBbqEXz7lqjTYzji0wFTxpnIhWkc
5ro5MB1ITNnjOK7iiFcneNeoA7bbOLyYazfdiUA/RtEl58jvXwhfVfjmmQ8H
AY+sC5r++NAjyzji2QWvgxauWnAQxkv7G6p9Lm8PJnPEtxus5toqjuPQfG+u
usFnX19Sp+UQJzTsgem696K8LA5CXIfHODfm5XlBxxH/x7AMSZ3mKzgI7RRP
zHkUaSeCOPLBQ1LR9l/POjEPD0tDQI19PUd+eHhVnbAy7hPz8VC/OvxmxoEj
X0YEamRVyxPEvEaoG64ebfHn6H0wQvVG6jbtIebvhfpMW42jDUc+e+F7/iYb
4C7y6MWdr+OtP6gV/fbB12bLtqVWIp8+2K187/Rb6aLvPmT7uES9064nXv3w
fX1Exu4S/fdDk9Hnesl8fp5fP+ysz53sChL3YQC8QjHsvUxPPAeg3JkwcONT
cT8GYHf4eORoKwtHge8gNO0/Rv5sYmlfBuH7yOqoIkfc90EYjOFWR7JZ2p8h
KCtHdyccZIn/EOSLalMOB7G0T0Ow+7Ax6jcL8f0YhjQ5VpfjwZKPYaifx7fr
wsrJxzDkpxICv11TTj6GoeFsVUlflpOPERhCNub+4sSQjxFIQ5sWOiQy5GME
6mT/b1wWM1gtDDgKedbKj1skOvIxCmXgM/uhKB35GIV0on996ssy8jEGiXIy
2HmqlHyMwcDsDWizLSMfY5A+iolzbiglH+PgP0qx3v5ESz7GIVn62exMrpZ8
jENtepk/o9SSjwlIwrp9VTdLyMcE+O4EWciaEvIxAWm1x9nSlmLyMQlNqmm/
z6Zi8jEJ5aZ3mdmBIvIxCf79qAKjsoh8TEHamn56XFNIPqbAV/26s8CzkHxM
QRNS+/SHniv4H36FCTc=
       "]]}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.99}, {0, 0.0733043989646377}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 18}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {}, PlotRange -> {{0, 0.99}, {0, 0.0733043989646377}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"s-amplitude\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7693837979791517`*^9, 3.769386205691039*^9, 
  3.769388126072884*^9, 3.769389101711501*^9, 3.769425060752019*^9, 
  3.7694251693050947`*^9, 3.7694263895300493`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {
      Hue[0.67, 0.6, 0.6], 
      Directive[
       PointSize[0.01388888888888889], 
       AbsoluteThickness[1.6], FontSize -> 18, 
       RGBColor[0, 0, 1]], 
      PointBox[CompressedData["
1:eJw1kwlMFHcUh9etSERFLVCaSjlECOJFVBoLyK8t0QoaK1qKEbQKuJEKlasp
cqgUsNVWRUsgaoXKoVgLgSIK5VgOEbQsXUGuBRd2WdibPUZo2YApjK8vmUwm
mXn/9/u+N05hp/Yf53I4nIi5a/7+f72OHdpo5Sb1TLYu+1SSlIEwjwQHx8jb
SGKfs9Fya8YpjFeKavtMdWB1HtzSxDPpvCq8eb8I78RddE/aVofrbN1Dvl2q
6nhAE2rY98uw83G9vyX/MTSB8x0qUJnIuSrzbKfvHyD1bhvHcsdfWNJXGLPd
4hF+LeL+/XV4J26w/WpgW5M+ukEgxNrQK82TbnU4F5xRejmqi/o3wK+44E7y
YDeK5r7uK2zE7MLpk7/49UDNnteEhh/kngUlvdjCVgs677gXnnTqp/MfY1Vj
rnlW3ADmms+d0Ipd7Ykbuf0iWLDztGFgefbiKbsh7GcBtON14z3ZguiXlPcp
rJZ+l5P3UAwJC+wZDnCkx5zFwzRvB4ZmLRalp4yAHS9GgGPJrsk/2UiIZyeC
rR+eqSiX4I0NIXyquu47b5JSHiGaS08ldNdKsYs94DkGD8qi3L1HKd9zVCht
tQMdo7jCBujCytYF4Wl+MsrbjZm8j9Z+3CgDG6evG+ti2yuf+I5R/hdgfs51
OVA9Bof5cex7YGFcE5axbRwtLI8edE8fC3EqHgePrV6UvKreYrFUTnz6wL1v
N6k7Lcd8N+uyPuyedE14Xy0nXv2Q5Rk6iw8pMDXfbrIf8VbPrli2KcjvAPKb
p7cWeSjB4tkuwr9RLWG5OUriKYKbYGj1iykl2PEyB8FflpLluk9FfIfAy1l8
e2WJCoKO+RpCcHWHUGimRizb8CWiLyw/xIlQg41rLcbvgtYTa2rUxF+M0MCK
dqmlBmy70GHwbC9vdo/TkI8RFKxQDJtaNZRnBFWRvjyRuZb8jIDLqeenhGsp
3wgcJa8+/KJOS74kuPmw6zPTjJbySuC457hz474J+h8kMPF9NNxbE5RfCv1U
buo6xQT5lOIG//RXbet1xEOKoKBY651ndOR3FF3f+F7bUaMjPqOw/XGv2HuR
nnyP4pMbZ5PXr9YTLxmSrwWYV/rryb8MRwxJuic8PfGT4bBX0Ae1F/S0D2No
5ydOmP+mJ55j0CwLOnypTU/7MYb6Lw+6Jar0sGH5juMtp4JHu80MtC/jmPHL
vl7iaiDe4/B6tnelrZ+B9keO8fN/KNKOGoi/HH3OCVUhqQbaJznObuoNaLpp
IB8KuFRsvphVaSAfChTUSGodXhjIhwLegrTte7QG8qHAiSf/nHUxM5IPJbZe
rYjJcjWSDyU0dnnxIi8j+VBi5IHOLPJzI3zZAVWo6gnnS+ON5EMFN1PkfcF5
I/lQ4b2E2frafCP5UGNBYUiEV72RfKgB0dvDJqGRfKjRXelx7q7cSD40+PNI
eVovlyEfGii7XBZGv8uQDw1yTIFXL21gyIcWgq1im293MORDi4MNGdPNIQz5
0OKeJDVjVyxDPiYgzDVlOn/PkI+5vcryV1+7yZCPCaypnNXklzPkQwdF0xL/
1W0M+dBBYH/0qc8gQz50WNHEV6/SMvgP87Mt7A==
       "]]}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.99}, {0, 1.2453879555651532`}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 18}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {}, PlotRange -> {{0, 0.99}, {0, 1.2453879555651532`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"s-level\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7693837979791517`*^9, 3.769386205691039*^9, 
  3.769388126072884*^9, 3.769389101711501*^9, 3.769425060752019*^9, 
  3.7694251693050947`*^9, 3.76942638966294*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {
      Hue[0.67, 0.6, 0.6], 
      Directive[
       PointSize[0.01388888888888889], 
       AbsoluteThickness[1.6], FontSize -> 18, 
       RGBColor[0, 0, 1]], 
      PointBox[CompressedData["
1:eJw1lAtQVHUUxrcQQWwMGxSGIaLUAkqrYSIYBr4dIyEkhgUJmsgHqTkYRk2T
CBgPJUBDKMkAAcHl/Vju8lzWFVdgBXzQ8lzCNZfHLo8FFnUwEKUu19OZuXPn
3Pnfc873/c69r4d9G3DoRR6Pd5C9Vu//h/yFycWdjnGIsRB5jUSfBvsoa9uR
rzyiuTwTdpaqe1kKBSS2SXqBJB+5KzW71wd00vkiPD2z1NMT1IlsLsqxNcbh
T1f7LjRz50XYE5T60oWSDswIViuI4Tv0YfJxkxv0fj3at2ZYZFrewHqVMNLd
rAn9h+NFob8qkMPVa0bu4Fn90Z/a4RCa3rpgL4NL1y1fH5c2qt+C99ad/SXZ
uA1F7NsqoRxVBc/KNne0Qs/1u44U1YXBhYhWOHHRBt+1ToxT2nXq3w6LlCd/
uAdeB1uc7aCATeKXlp/ky2HGzdMBWZrVUtB+OQI4AzrBS9t1/1XRNdLbBfO5
8X9Cilswwhl2E5ELXcVuMS00723Ma86n9Ea3gBsv8g7kQqONcZeukp/dyPj5
803RiTI8p6GEVZviU79uGelRQuNqeaBwhwzeXIMeKKfu+cRay0gfm5c6SPcu
SZHOCejFYiqT7LbhCuntg7nZwfedG6Tg5Kj6YPp4e9S/jlLS3w/Nic/e2iRv
xmur49gOwN/AT7B5IEEb58cAyqS9aV/rJDjMxSDmA40Kz61IyB8VMoa2+8WI
JVitZiFSgUkKy/V8R0J+DcF+1xrPZ0VNeLxabmEILjktHxm/3UR8/4L82PA+
E1kjOHvch2F1dCbs4d5G8nMY/nlb1p+xbwQ3XtJdKAUlMpMtjeSvGvI8xk1n
1Yg7t1dDDV4FX+Te0YDvuIL3EBL/xEQU1gBOrsXfYB5F/N6/s4H8Z/O6pthX
Xm4AVy70PkKmnt5aG1RPPDQoyOhv3WdVT3o0iDd2aho9Wk98NOBfnVNc7K0j
fRp0XtNuEe6qI14jiFJX6dtP1pFeNj9+JTvTpI6+hxFkPfigw6CoJf2jsPJJ
V5WfriWeo+ApSm+6HqslP9j8AD8hQSsmvmNYlFqv8V5XS/6MwXS5J9wyTEy8
x6AMLuorPSsmv8ZhfzF8MXeBIf7jyPLJdctZZsi/cZjaOtufymNoH7Rw+Q1h
1QcY8lOLFMdYB7UXQ/uhRWRV7kBIZQ02cf7qoFz3htdmNn++LzrIN5olG90V
kd86FHhq8x6mi2h/Jlg9lyKirEXk/wSY+uYn1WXVtE8T4Pd5LDqsVBGPSSgT
piPFxtXEYxL8wGDb88ZVxGMSzNXuhVPdlcRjEvvvu1un1lQSjynIFaO+G05U
EI8pZDwKEviVVxCPKTCBjtlq1wp4cANOwy6+qVJrU048pmGeqHGWCMqJxzT4
u+urEvvLiIce89nJhSf7SomHHsqtjXizt5R46MHMdhZX/FhKPGagsWH/aFkl
xIPNK4W1w94lxGMGyq5Q7/jlYuIxC94Ph2DyRTHxmIVd3LYdBnUR8ZjFvO6b
tCPhRcRjDv7ba9tjdULiMQf5aPj3xnFC4jEHzdi8QbxymXgYIA9eEpj7XyYe
BvA9Pn53j6qQeBjAy78l4KUX4j+z8xlO
       "]]}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.99}, {0, 0.1965400945218444}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 18}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {}, PlotRange -> {{0, 0.99}, {0, 0.1965400945218444}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"a-amplitude\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7693837979791517`*^9, 3.769386205691039*^9, 
  3.769388126072884*^9, 3.769389101711501*^9, 3.769425060752019*^9, 
  3.7694251693050947`*^9, 3.769426389774942*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {
      Hue[0.67, 0.6, 0.6], 
      Directive[
       PointSize[0.01388888888888889], 
       AbsoluteThickness[1.6], FontSize -> 18, 
       RGBColor[0, 0, 1]], 
      PointBox[CompressedData["
1:eJw9kw1MU2cUhnEGo4BOhDlgEZURGWp0ahyMn73oBjgjM6gEKW4SBCpZsqq4
6YAxByqEJRaBAQJjIIhuARREaWXIBMafgMUChQpIoYVC2/uVTf6Un5XL/XaS
pvnSe8933uc53RwsOBL6lpGRUYjhs/j9f22/UN21rh9RliXeisjLOCB6/evu
DD0i2XMq1hZZ+zlEaSGyvaLxFeXgZHX2ZOJ6Lfd8ARaub8r73lmLG2z9jmf1
Oz8etNJCzD5fghuH/GvKr2qh9V3sUArHwJOFflP0/XLMhB7P+2pGC1NZ/hl3
kwoIx20T3TbqkMn2EyNqZVaZOV8HxxPCmokP/kSS2bPb3Y90XP/H6G1Udzk3
6VBgeFuW/xc8jbMlK+Q6aNj7niCkpkJhO67DHrZqUVxZ7trkyHD310ElcPts
3omBobnhhr/hbaWOSgtlYMLO0wBrhyDXh+cZHGEBNKKlyEvMT2O4vE1IrHv/
y7yHDBQssGbIv/Bwrn/EcPO24LvzB2OjxQzY8c60onDaxiNAynA82/D8w6qS
vRMMlmRI8CazOLx2lOHySDDv+mNl0hsGB9gL2rHWRbmyynBeyteO9c17dgVt
IBCyAZ7DwSRqq7UV4fJKkVqpTOdvImDjyKT4Wb/fV7SDcPk7UKAc6Jx1Jti4
OI5tJw51ZJzLP0xQy/LoxNy0l3G+D0EYW104/Y38+FZvwvGRIbnHJt3d8Pti
N8sSGXb7/7QaPMLx6sbyCHezcD7B5GK7iW7wTSM6ms8Rzm8PVuaNS5qjCVg8
7nLsEj5tDb9MOJ5ydI987bctnoAd78oLWIWXHa6OIxzfXrStOlsmvUTQ2rJY
vbiX5VnVeJXgLNuwD6PPwvhmQgI2rmU/dmzZvrnoGuH492NW9NGxR0kEbLsT
L5FSuy46Pp9wPgbwj6lqLrOQ5hnANeuErTnphPMzgPq4iR92FtJ8A/CukJaa
3SecLwXixTeTo2/TvAoIGzzeu1RKuP+DAi+DhYnqcpp/EPfnHqw+JaI+BzGQ
HaE/+ZDyGESOnaVFVg31OwTdWOTe/WLKZwj7ct0C3Jqo7yEcGxLo362mvJTw
CXTR9LVQ/0qIt5ml2DRQfkos3Dt9or2V7oMKFR3m9U4SylOFs+L1Pn5tdD9U
ePuPOuW3MoJ3WL7DMPdedtnjOd2XYZQFV4gt5ZT3MFLLY8wTeuj+jGBM0Lsh
4wXlP4LlTqvuBvfRfRrBpP2ngXcHqQ81UkKslJJe6kMNO+mWPSEj1IcaLy7k
9vNU1Ica6lPL/61UUB+jGMs1Ls4k1McojibwvGaGqY9R3Bocln2uJviEHXAM
idJXJPgV9TEGWfnNKl8N9TGG2NhGraeO+tCgMlm6JnaK+tAgf5/10cJx6kMD
8+neId449aHFnV8CwuxnqA8t7B8v+MxOUR9a+EvibqVNUh862DU+uePzmvrQ
gXfxaUTDG+pDB0GM6xrBLPXBwMklQ2QxT30wuBjU5tgxR30w6LposcJ4gfog
CPTcHRO9TM/5MHA2Pch7YDgv+SCwcf2t3d9Ij/8Ay6g+dw==
       "]]}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.99}, {0, 1.0371576472348512`}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 18}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {}, PlotRange -> {{0, 0.99}, {0, 1.0371576472348512`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"a-level\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7693837979791517`*^9, 3.769386205691039*^9, 
  3.769388126072884*^9, 3.769389101711501*^9, 3.769425060752019*^9, 
  3.7694251693050947`*^9, 3.769426389892797*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"**", " ", "collective"}], " ", "dynamics"}], ",", " ", 
    RowBox[{
    "distinguish", " ", "inner", " ", "and", " ", "outer", " ", "signal", " ",
      "concentration"}], ",", " ", 
    RowBox[{"change", " ", "D1"}]}], " ", "****)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"maxTime", "=", "20"}], ";", " ", 
    RowBox[{"t0", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", "3"}], ";", 
    RowBox[{"\[Tau]", "=", "0.01"}], ";", 
    RowBox[{"\[Alpha]1", "=", "1"}], ";", 
    RowBox[{"\[Alpha]2", "=", "1"}], ";", " ", 
    RowBox[{"\[Epsilon]", "=", "0.01"}], ";"}], "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{"k1", "=", "0.5"}], ";", 
    RowBox[{"k2", "=", "0.3"}], ";", 
    RowBox[{"d", "=", "0.001"}], ";", " ", 
    RowBox[{"D1", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"basal", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxN", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phi", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"0.01", " ", "#1"}], "-", "0.01"}], " ", "&"}], ",", 
       "maxN"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"varS10", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", " ", "#1"}], " ", "&"}], ",", "maxN"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"varS20", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", " ", "#1"}], " ", "&"}], ",", "maxN"}], "]"}]}], ";", 
    RowBox[{"varf0", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", " ", "#1"}], " ", "&"}], ",", "maxN"}], "]"}]}], ";", 
    RowBox[{"s10Array", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", " ", "#1"}], " ", "&"}], ",", "maxN"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s20Array", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", " ", "#1"}], " ", "&"}], ",", "maxN"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f0Array", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", " ", "#1"}], " ", "&"}], ",", "maxN"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "<", 
      RowBox[{"maxN", "+", "1"}]}], ",", 
     RowBox[{"j", "++"}], ",", 
     RowBox[{
      RowBox[{"\[Phi]", "=", 
       RowBox[{"phi", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"timeCourse", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Tau]", " ", 
             RowBox[{
              RowBox[{"p", "'"}], "[", "t", "]"}]}], "\[Equal]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], "  ", 
              RowBox[{
               RowBox[{"p", "[", "t", "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{
                  RowBox[{"p", "[", "t", "]"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", "h"}], ")"}]}]}], ")"}]}]}], "+", 
             RowBox[{"4", "  ", 
              RowBox[{
               RowBox[{"z", "[", "t", "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{
                  RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], " ", ")"}]}]}], 
             "-", 
             RowBox[{"2", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"p", "[", "t", "]"}], "^", "2"}], "/", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{
                  RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], ")"}]}]}]}]}], 
           ",", 
           RowBox[{
            RowBox[{"\[Tau]", " ", 
             RowBox[{
              RowBox[{"y", "'"}], "[", "t", "]"}]}], "\[Equal]", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{
               RowBox[{"p", "[", "t", "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{
                  RowBox[{"p", "[", "t", "]"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", "h"}], ")"}]}]}], ")"}]}]}], "-", 
             RowBox[{"\[Alpha]1", " ", 
              RowBox[{"y", "[", "t", "]"}], 
              RowBox[{"(", 
               RowBox[{"basal", "+", 
                RowBox[{"s1", "[", "t", "]"}]}], ")"}]}], "-", 
             RowBox[{"\[Epsilon]", " ", 
              RowBox[{"y", "[", "t", "]"}]}]}]}], ",", 
           RowBox[{
            RowBox[{"\[Tau]", " ", 
             RowBox[{
              RowBox[{"z", "'"}], "[", "t", "]"}]}], "\[Equal]", 
            RowBox[{
             RowBox[{"\[Alpha]1", " ", 
              RowBox[{"y", "[", "t", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"basal", "+", 
                RowBox[{"s1", "[", "t", "]"}]}], ")"}]}], "-", 
             RowBox[{"2", "  ", 
              RowBox[{
               RowBox[{"z", "[", "t", "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{
                  RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], " ", 
                ")"}]}]}]}]}], ",", 
           RowBox[{
            RowBox[{"\[Tau]", " ", 
             RowBox[{
              RowBox[{"a", "'"}], "[", "t", "]"}]}], "==", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{
               RowBox[{"z", "[", "t", "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{
                  RowBox[{"p", "[", "t", "]"}], "^", "2"}]}], " ", ")"}]}]}], 
             "-", 
             RowBox[{"\[Alpha]2", " ", 
              RowBox[{"a", "[", "t", "]"}]}]}]}], ",", 
           RowBox[{
            RowBox[{"d", " ", "\[Tau]", " ", 
             RowBox[{
              RowBox[{"s1", "'"}], "[", "t", "]"}]}], "\[Equal]", " ", 
            RowBox[{
             RowBox[{"\[Alpha]2", " ", 
              RowBox[{"a", "[", "t", "]"}]}], "-", 
             RowBox[{"k1", " ", 
              RowBox[{"s1", "[", "t", "]"}]}], "-", 
             RowBox[{"D1", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"s1", "[", "t", "]"}], "-", 
                RowBox[{"s2", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
           RowBox[{
            RowBox[{"d", " ", "\[Tau]", " ", 
             RowBox[{
              RowBox[{"s2", "'"}], "[", "t", "]"}]}], "\[Equal]", 
            RowBox[{
             RowBox[{"\[Phi]", " ", "D1", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"s1", "[", "t", "]"}], "-", 
                RowBox[{"s2", "[", "t", "]"}]}], ")"}]}], "-", 
             RowBox[{"k2", " ", 
              RowBox[{"s2", "[", "t", "]"}]}]}]}], ",", 
           RowBox[{
            RowBox[{"p", "[", "0", "]"}], "\[Equal]", "1.01"}], ",", 
           RowBox[{
            RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{
            RowBox[{"z", "[", "0", "]"}], "==", "1"}], ",", 
           RowBox[{
            RowBox[{"a", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{
            RowBox[{"s1", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{
            RowBox[{"s2", "[", "0", "]"}], "==", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}], ",", 
           RowBox[{"z", "[", "t", "]"}], ",", 
           RowBox[{"a", "[", "t", "]"}], ",", 
           RowBox[{"s1", "[", "t", "]"}], ",", 
           RowBox[{"s2", "[", "t", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sSol1", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"s1", "[", "t", "]"}], "/.", "timeCourse"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sSol2", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"s2", "[", "t", "]"}], "/.", "timeCourse"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s10", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"sSol1", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"d", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
              "1000"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s20", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"sSol2", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"d", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
              "1000"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"s10Array", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "=", "s10"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"varS10", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "=", 
       RowBox[{"Max", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"sSol1", "[", "t", "]"}], "-", "s10"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"d", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
              "1000"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"s20Array", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "=", "s20"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"varS20", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "=", 
       RowBox[{"Max", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"sSol2", "[", "t", "]"}], "-", "s20"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"d", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
              "1000"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"aSol", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"a", "[", "t", "]"}], "/.", "timeCourse"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"f0", "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"aSol", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"d", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
              "1000"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f0Array", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "=", "f0"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"varf0", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "=", 
       RowBox[{"Max", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"aSol", "[", "t", "]"}], "-", "f0"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"d", "#1"}], "+", "t0", "-", "3"}], "&"}], ",", 
              "1000"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.739660814454172*^9, 3.739660836385097*^9}, {
   3.73966092113022*^9, 3.739660979665938*^9}, {3.739661079581767*^9, 
   3.739661080789583*^9}, {3.7396611630950937`*^9, 3.739661164104795*^9}, {
   3.739663461106625*^9, 3.739663461241798*^9}, 3.739663582065674*^9, 
   3.7396637415010967`*^9, 3.739663843724887*^9, 3.7396639043287992`*^9, {
   3.739664008050613*^9, 3.739664008266636*^9}, {3.739666037113778*^9, 
   3.739666080099091*^9}, {3.739666131999158*^9, 3.739666208018814*^9}, {
   3.7396663608218822`*^9, 3.73966636197097*^9}, {3.739666660688542*^9, 
   3.739666661336298*^9}, 3.7396667588966007`*^9, 3.739666816123307*^9, 
   3.739666913672546*^9, 3.739666981545142*^9, {3.739667101310809*^9, 
   3.7396671015338717`*^9}, {3.7693863635067043`*^9, 3.769386380910515*^9}, {
   3.769386423843045*^9, 3.76938643982438*^9}, {3.769386512002719*^9, 
   3.769386512010367*^9}, {3.769386550582739*^9, 3.769386587751951*^9}, {
   3.769425575153311*^9, 3.769425613264122*^9}, {3.769425914262722*^9, 
   3.7694259143743067`*^9}, 3.769426128660449*^9, {3.7694261748788443`*^9, 
   3.769426213652007*^9}, 3.769426397087274*^9, 3.769426672664564*^9, 
   3.769426845283454*^9, {3.7694271569024963`*^9, 3.769427157122558*^9}, {
   3.769429420161358*^9, 3.769429420289652*^9}, {3.769429490344595*^9, 
   3.769429496510501*^9}, 3.769429644476427*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"phi", ",", 
      RowBox[{"Flatten", "[", "varS10", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.001"}], ",", "0.1"}], "}"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Blue", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<s1-amplitude\>\"", "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "25"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"phi", ",", 
      RowBox[{"Flatten", "[", "varS20", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.001"}], ",", "0.1"}], "}"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Blue", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<s2-amplitude\>\"", "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "25"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"phi", ",", 
      RowBox[{"Flatten", "[", "varf0", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Blue", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<a-amplitude\>\"", "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"phi", ",", 
      RowBox[{"Flatten", "[", "f0Array", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Blue", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<a-level\>\"", "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "0.03", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"phi", ",", 
        RowBox[{"Flatten", "[", "s10Array", "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"phi", ",", 
        RowBox[{"Flatten", "[", "s20Array", "]"}]}], "}"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<s1-level\>\"", ",", "\"\<s2-level\>\""}], "}"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "25"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.739663196958124*^9, 3.7396632386895123`*^9}, {
   3.739663320755015*^9, 3.739663346620082*^9}, {3.739663645433099*^9, 
   3.739663645666771*^9}, {3.73966377789207*^9, 3.739663797919004*^9}, {
   3.739666223344327*^9, 3.739666267436338*^9}, 3.7693864238659573`*^9, {
   3.7693867167908163`*^9, 3.7693867693022537`*^9}, {3.76938909708208*^9, 
   3.769389097089718*^9}, {3.769426431934216*^9, 3.76942643206034*^9}, {
   3.769429388101883*^9, 3.769429403743556*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {
      Hue[0.67, 0.6, 0.6], 
      Directive[
       PointSize[0.01388888888888889], 
       AbsoluteThickness[1.6], FontSize -> 25, 
       RGBColor[0, 0, 1]], 
      PointBox[CompressedData["
1:eJw9kwtQVHUUxkkkVx6JCL4DCslFTHYUnBLwW+2x6wAOoBlbPshQ0TCXyQAl
45Go6DDEQApOIgbKY2G99+rIUqYoGhAgL3Vpg22X166wyjZF2oBDu9eznZk7
d878//ec832/c1/beSB61zQ7O7s4y2N9/x+N319P6/ZCqrtSoj98FHabfDZn
ZC7FYT4vgOr2/ND85FNQeWaNRqmK0fp6JPd3TD7dL4Pxdr6f2lCEIj4qIV+9
z9Mvrhh1/H0lRFfW3PV48wJMUdYKLJYoTPsLt5XS91dRvTEnpGX5RTipS+Wh
jrUID18kTX12CWf5enUQZfoefneyHH5bc2+PC69DxGwwNwVVUP0biG/c6XNI
XYkyy9fq0npIZxVk3v9EgVG+3y0UfnNi8niVAqv4aEDMuZ6yoh+qqf8diCaT
nYM3V8NS3NLhLqQrF2onvJRw5OdphNRz1ooDKUpE8wY0QTdr+/mQ2suktxkl
7TdXtsxhoOcN+xVN4aeXfmXJX8zbiqaQpMd9Mxnw48nboIsabKiTM+TnPYge
njdwrixewOiAcE14UEQ/Q3o6oEqtbc72ZSHlG3QiZVPbO5JlLOnrRMVUmGz1
KRa5vIAuuGoWZOQxLOnthnfO0txF51jwctSWvGesTNnOkv77EEXa97pYci/r
OJ4PoLqwJbjjAw4NvB8P8NbYEc/hbA67+XgI87a2n3J2cuSPGs+uH0/eJ+Fg
reauVKMwL+rL9ds58qsHuoGg9sCTHP6xlhvvQYyDy5GoGo74/oZ4zekx7VUO
vD2hGsQXRNSuK+LITw0Yt/eGpJ9x4MfL+h0lP+tXaKM58rcXIn+NZPnnHNpa
rdELc/AFo/A7Dol8wT7IMyR38tM48HLdtRAK2Ft9SRz5r4XZKb/51Zsc+HJb
/4DI+cy/MoYjHjoIjt03yZbY9FjyOXtOjO7giI8O9et8x/2VNn06RK53dFG8
wREvPeQuKQZujU2vHif2O/wp3MDR/6CH8e2uQ/rFNv396Pkwfu3sKRvPfujM
T2d8Os/mRz/E3YmCmis2vgNQzdgxr9jZ5s8AzJK57xfvtfEegFhzPMbVxJJf
g9D9pfbfE2DjPwiRYLdHjpIl/wbhPbs9KGmmbR+GECnxt++OZsnPIXgXmEuf
jzO0H0Mwh82XbB1h4MH7O4z6wFVOU90M7cswYicXBuSdte37MHR52b4ZmQzt
jwHyayHmO/EM+W+AeSK2IdGfoX0yQDzdK+EjR4Z4GBHpmGzv4cQQDyPSXVxn
N8y9TDyMELsHqp8evEw8jKiPKN+vHVESj0eIFfQ/ny5QEo9HSA/ImEgoUhIP
y/m+RnbLlRqs5QccgXfnrgD2pRriMYKSFtm0xQdriMcIxLdSkzeeqSYeo0hv
v2fitAriMQqx/URny/xq4jGKkmULKld8rSAeJuhkN2LiVFXEwwTvrs7Ou4VV
xMOE2GNXsz4OrCIej5F+cptb0reVxOMxYl3TfBN8KomHJffbE5ZUUUE8nkC8
cG9doF8F8XiC9GsOQdm/lBMPy/mRY0k/CsuJxxjsjJqhlw9cIh5jiJVJv5jz
yiXiYcndnDNQdxH/AUDFAG8=
       "]]}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.99}, {-0.001, 0.1}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 25}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {}, PlotRange -> {{0, 0.99}, {-0.001, 0.1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"s1-amplitude\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 25, 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 25, 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.769386604954978*^9, {3.769386730316947*^9, 3.7693867701404743`*^9}, 
   3.7694256469281397`*^9, 3.769425947273861*^9, 3.769426468316725*^9, 
   3.769426786680921*^9, 3.769427054211063*^9, 3.7694272551467657`*^9, 
   3.769429407407653*^9, 3.769429483183403*^9, 3.769429584303692*^9, 
   3.769429828308629*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {
      Hue[0.67, 0.6, 0.6], 
      Directive[
       PointSize[0.01388888888888889], 
       AbsoluteThickness[1.6], FontSize -> 25, 
       RGBColor[0, 0, 1]], 
      PointBox[CompressedData["
1:eJw1kw1Qk3Ucx3fmFYdRHIka161pWlOTPCEYJHzR7JiVCpiGp9TC8KUQZ526
sxQQCc3iTZKXuHyGwBiD7dnjS4gvgJN8OSDwpU0Q3HgZ4z3EJQhF4/G3391u
9789z+//+34+v82N3h0RM00gEHzp+Ex9O0vo5rdAeSFm2XcztaGWA0cg6FHG
53rOwwH+nIUcVaw1pj0FFcLkvvCK31DHRG3TnczAs+cLUeG9f0D8ag5y+VIj
UhCmuaHJxwX+eS1WTUfS2c0M+sOnOuhhMh0caM4ooPfP4kjW1ry2HYWYYTwt
D3L9HfnfHpLcDCxGHt/vAiTC4qZdq1VYuCXtql18Ce6DjU+CM1TU/wrcj639
WOinRqHjbePpaoRZO2rPG0rRx99XA9mG6EvDnhr48GVAZNjyH1s9yuj+a0g4
nyatbtDA0dxxQy3YtZWtyCuHKz/PdeQkD+1KHS1HBA/gBphfbke7BOgo702I
LqqVw+U6WHhgtyCd77HD9YyO5q2DPAt/vF+kAz+evB4Km/rxsUCWeDaAKfWt
MjSzeGajESWD2rYZOpbyNMKl2Pfw/hEWUv6CJsyxqPv/HWMpXxOWPhrbk7dZ
jzQ+wG0wk1Vuvof1lPcOFIsqP98n14OPY7yDG5sVqU9P6yn/Xbh8kv3FuUI9
Xp8aR3gPgvk+7/6wmIOB53EPUrXh8lYZh218/YXRq6FfpQZyxMcItjEg/oqI
w1S3mVoj3LuM+XIJR7xMUGSyiS/EcPhnqp3dBGbLfz81HeXI730wrrNXSTI4
8HiCmhHmtjhAs48jns04esp9vXE1B3685Ba4BPdN+2wZR3wfwKW5v0OylkN9
3VQ9gO3yiQHVXg57+IatyJkbn9vpmJ+PO7MNijUJz3dEcsS/DXO2K0TrlBz4
dlseIsFLkr38BEc+zBDMU+YUuzjzmCGb2GvZuYojP2bsGHh55+VMZz4zzP7i
uKQXOfJlgXiNl7ZX5MxrgcLu/cDwDkf/Bwvk89YsfHu6M387pEue+j6yOn22
4+/Bp6+lTuqJRzvEzHZ7Vb7TbwdCAkqClHY98emAyXAup36903cH2E3DUaP3
9MSrE4ICU9LPXk7/nVhqNSbF5eqJXydYS/y1WDtL+9CF9BV1aTXBeuLZBeYt
7ycF7SztRxfCKqwtG40sPHm+VlTjfndkDUv7YoXcb0X2rqPOfbcixN8/vULO
0v50o9rLtWjjpyzx70Z60wJdghdL++T43fp1/vERHfmwQVapSpHbdeTDhpAP
D61TPNGSDxsYYe6v5zfoyIcNouupZcfrtOSjB8yS93yGesvJh+NcVt0g/l5L
PnogkjzUSbPLEcwP2Auz2C/ilLWMfPQixLXouceR5eSjF4KIi3dXHiwjH32Q
nWjflFerIR99MI/bTt6a1JCPPiSMjH00GaMhH/0QuLeMvKksJR/9kGWOe1sT
S8mH4/ynZraHsJR8DEBUFjfx+ICafAwg5A1pbOJLavLhOH/QPWtRVgn5GERC
3PimFM8S8jEIUVdnqOyMinwMwvxKfvTKWSryMQRz9G5beFQx+RhCNSOfa5oo
Ih9DYIL6mW9KivA/hfcbDw==
       "]]}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.99}, {-0.001, 0.1}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 25}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {}, PlotRange -> {{0, 0.99}, {-0.001, 0.1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"s2-amplitude\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 25, 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 25, 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.769386604954978*^9, {3.769386730316947*^9, 3.7693867701404743`*^9}, 
   3.7694256469281397`*^9, 3.769425947273861*^9, 3.769426468316725*^9, 
   3.769426786680921*^9, 3.769427054211063*^9, 3.7694272551467657`*^9, 
   3.769429407407653*^9, 3.769429483183403*^9, 3.769429584303692*^9, 
   3.769429828394746*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {
      Hue[0.67, 0.6, 0.6], 
      Directive[
       PointSize[0.01388888888888889], 
       AbsoluteThickness[1.6], FontSize -> 18, 
       RGBColor[0, 0, 1]], 
      PointBox[CompressedData["
1:eJw9kw9Qk3UYx6d5OjVTYp5TxFC6S9RwKBki+F1mwBkicJkGhGQianUOQgK5
iE4o9OjkLq1hgFOQDWdjGxtjwuxlIEMFnCIMRXADRHQ4/giGnVHj7bl+d+/t
fvf+3uf3fD+fZ8v3Ho6Mn87hcPY5n6nf/1eS0XP+3zlI5ymCbUezwHGdVxsb
mYij7P4UTiW/zOcLTahalm2PqCpCgeNt3YiPic6XoKNn5JvJdxqRz64y+E14
HXy+3wQ9e16BOBeV1xpxAwYjpiqoMGC8+N6GiAb6XoO+rNTbStNVzLUUiwLn
6LCvNONYcvxVnGHr6ZEb4Fv3W0o9vGJOGsdX1qBJbIpfy6+j+lcg6DtdcvOl
ESXOry3FDLaGztAu7zLCzt5XixyfwlHeRC3Ws6sOvp5Lw8sLa+n+egiuMxdy
f2bgLO684SqWxtV7xbQymMP2Y4L4QMOL6aEMIlkAjRCJfMOmbWMo7zXI1i0M
DG36AzYW2HWYt3rI3lVcoX6boIx2WRstNoBtT9QMSfviMxN7DcSzBaL1i+fW
5Rvwnwwz8s6qNIaUGspjBl8TMe/p8hqEsBfcQkjHRKo+sZry3UJVTeHLtNhq
nGQD3IZyVNR/Zewy5W0FZ9GOZndcBhvH0grRQUjX/6Wn/HdgvZNpX5GkxxtT
7Sxrg7ArZe9AuR51LI82yJi0H63peuxnVzusZ7NWPTNXER8LDmRl2yybqzBV
jaewgG+X7HMb1xGvDnA35s20XNfh+VS58Q5YM/k8hVhHfu9CsCniu5JgHVg8
gfcg5FVGZt2sJJ73wB0zLHELqgTbXnYnBLP9//ylU0t870OU1PyDp1qL5qap
dR8SdbTvsFiLRLZgFzrOj00GBGjBxuV1Q/hV7p5dIxri341Ux4PsLTO0YMvF
PIAy9tM4s05DPqwwc+1e2/sqKI8VeYLFCccdFeTHisbDNkvYaxrKZ4VAvm6+
bVsF+bJht83zSPbaCsprg5D7XOa+oIL+Dzb4LXEbDdKqKX8P+FE5b5V/oSaf
PeByZ0m6otTEoweCE5KErBYV+e2FrFQi501TE59eSKarvw7zV5HvXnjIwwMO
/aoiXn0IuXZntKpGSf77IPs47NCORSri53wf6yn9fLeS5uGhk9/sVdszlcTz
IVLTK0ei5ihpPh6CcW9cI28ox0KWbz+Y13faDPHlNC/9MD9b3f5Zg4J49yN8
o0tyYIKC5ucRzN5J6hczFcT/EawZM+QNCb/TPDn3RUcKJJOXyMcARCfSjn7b
eol8DIAzOdSWUy8nHwMQdgdN8Ifl5MN53uNDv4LtcvLxGJmfLDp+Nu4i+XgM
Ky8uIrH6Ivl4DI8Mx2nuzTJsZht8ggXv6w3jrmXk4wnyNhR8ZNxZRj6c71ej
eX6qjHzYMTzIRPkbpOTDDuuEJmPMLCUfzr2RSfjJR0o+BiHY5bXfW1RKPgaR
90/ULP2mUvIxiOG7x1Z1tlwgH08hvPFqsNT7Avl4ijz/wDcTDCXkw7n/4JXv
uVtKyIcD5roij131xeTDgTjGpPbfU0w+HMj0dQ0PvnGefAxBsvl4v8+K8+Rj
CByT28ow4znyMQSmID0k98tz+BfZwg/f
       "]]}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.99}, {0, 0.18914776665385236`}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 18}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {}, PlotRange -> {{0, 0.99}, {0, 0.18914776665385236`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"a-amplitude\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.769386604954978*^9, {3.769386730316947*^9, 3.7693867701404743`*^9}, 
   3.7694256469281397`*^9, 3.769425947273861*^9, 3.769426468316725*^9, 
   3.769426786680921*^9, 3.769427054211063*^9, 3.7694272551467657`*^9, 
   3.769429407407653*^9, 3.769429483183403*^9, 3.769429584303692*^9, 
   3.769429828473991*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {
      Hue[0.67, 0.6, 0.6], 
      Directive[
       PointSize[0.01388888888888889], 
       AbsoluteThickness[1.6], FontSize -> 18, 
       RGBColor[0, 0, 1]], 
      PointBox[CompressedData["
1:eJw1kwlMVFcUhgeHqoUWsEIoaFBbNmulpWwihb/EthRo0zCGMiEoIpsYSllK
BQQrRhOIItSCBookLMWaIg0GZAkKsgQKDLLMsAyLDMMyzPIulIKKQDs83j3J
y8vJu/ec8//feYfO/iAI38Hj8cK0z9abxvuBa4l52SpcNK70kqVcRcy82DXv
9iJS2DwXcuyOu+ugRp3FNZVfXRHMjjjdHzuv5s6XQVjistntpUY+G/dhfPzb
mL4sNerZ85VQpobVC0RqqP22KlQhpSReRebo/WrsYRIfthtooD9cGuuuV4sJ
x+u9Hkc0KGDr1SN0sFD5NEqDw0HZLSu2jQhNnHCKa9Vw9Z8gpbwxq6tbgzLt
7eHSZmw8OHu6W6yBiu33FGsR3iMtBgwc2GiFm1rQ/NiK4fq3YU5+yTD4HANt
cW2HdmR1HPBxEzLQY+fpQPQna9KCZAYC1oBOCPPNvwvT5tt6/8Y+haA78hcG
MtawLvC8Ymp2VTPcvD34ILrRVChhwI4XK8JLQeSrSCnD+dmL1GrTutp+Bts0
+iDMc+rd9S/D6elDf7B7Qfw6g6/YBv0oPZmsZ2ZEOH39eBCc6XzTkCCbFTCA
25vSkgRzwukdROE/d3J97AhYOcODiN9/en7WgXD6xdgd65nT7klwYGscCwms
Pd31u50JWlk/JCCXE39SuxJEsDGEcyW+Hz/zJZw/w5ALvSWpgQRb1Ywrh8Ff
8sfOM4TzawRjTdYpGSEEq1vlVkYwNG3LXw4lHN9RiD3uJVifJ2DtcZcimi89
aZtIOD+lmAhwTvW8QsCOd20MFadCeN9fJ5y/44gorsoNu0Eg6tmKcUz/dzXq
S+33OLbgBL4wspq5cYuAlWs8CWOb8dDMO4TzfxJWx9JjmnII2HJBz7Hf57F0
MI9wPKZgIJB/2vwn1TOFvp/LXip+JxyfKZSap170v0v1TSFJEKRnUUU4XjKE
9I32Sf+iemXItc/QeUubb/8PMgS0F134o4bqn4Y9f6TQqIHynMaJC7/tDail
fkzD1s9e8kYb5StHZtegtLeO+iPH8TOJljU9lLccIyaxBw81Ur9moPHRqUge
oPxn0IF9Ow62UP9mIL9c7kfEdB9mMTFV+OFYF/VzFpKjb2Ymi+l+zGJc/9c1
e21uwvo7B7tvwoV7JHRf5iDfGLIUjVK/55Ce7Bt9SUr3Zx7pC18XuIxR/+eR
Ei4ekTyn+zSPz6PWd+rJKA8FzBoyGMEk5aGAsqj8nmiB8lAgaUr3Sb6M8lAg
3ER49Ngc5bGAR0nuDQmE8lhARcyPujYzlMcCdvYWz3ymIfBgB1TiI37MFZdl
ykOJQcuqHsEC5aGE4du2af5LlIcK/EeOJbovKA8VdFe83dWE8lBh80TnO2PL
lIcaxQrlgPgV5aFGWoWFQLVKeaixURRon/aC8tDAznH1lu1rykMDe9/0HNFr
ykODcJvCpbV1yoPBs9myhw6blAeDivdqQto2KA8G3e82de7lLXI8CDoi3fjj
OoscD4JTrrGHvbX5Ng+CFZGpn4/2/P+s3Taf
       "]]}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0.8525030190007186}, 
     PlotRange -> {{0, 0.99}, {0.861277323175106, 1.0367634066628528`}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.8525030190007186}, 
     BaseStyle -> {FontSize -> 18}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {}, 
     PlotRange -> {{0, 0.99}, {0.861277323175106, 1.0367634066628528`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"a-level\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 18, 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.769386604954978*^9, {3.769386730316947*^9, 3.7693867701404743`*^9}, 
   3.7694256469281397`*^9, 3.769425947273861*^9, 3.769426468316725*^9, 
   3.769426786680921*^9, 3.769427054211063*^9, 3.7694272551467657`*^9, 
   3.769429407407653*^9, 3.769429483183403*^9, 3.769429584303692*^9, 
   3.76942982854711*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {
      Hue[0.67, 0.6, 0.6], 
      Directive[
       PointSize[0.01388888888888889], 
       AbsoluteThickness[1.6], FontSize -> 25, 
       RGBColor[0, 0, 1]], 
      PointBox[CompressedData["
1:eJw1kwlMFHcUh/GqASpqA0YxQq2oFPEC2rTh+BESKY0kBWzVpEoqRQStAsq2
dI0EwmGLHHJ4YAU0rICUGEhBwJqVyyhlt+VeWA73Zi92d2aQSLFamL6+ZDKZ
ZOb93+/73myNSYw6udzOzi528Vq6/1/Fik/qN+dn4KLzg8+UwiyMq4tmH2ZW
Q8g/l0JxQ1hTXNuAVrdsU2RrBV6n1iR6NrXQ+yJcv/lolyBEjDK+7sPzSmbt
l7mdaOPff4C86HsjDtqnMEcudWhEZOOOQxnOPfR9E3p2h38qgQSOsqqkQIcW
ODppVL0Rf+EW368NR1uOpykD+vHhscLOl56PcemVfVvI1AD1F2PF9xdyGkOH
IFr8WlbVjsrqu9ra6mGY+PM6EKLu3jG2TQZfvrpQevjIVyXpo3R+N0YvrKi3
LoxhsfniCU8RXecg8vcahwM/zzMc+D06T3hpAlE8gOfo3jPhKq2bpLw98PE7
VL7RMAUlD+wPrPRluJ83KGheCQYmnQLzmxXgx0uS4iffpNDLIUri+Se8LJ27
s7uV+M9GH3bW92VeOaaiPH1IaRYHylUqhPEH9OM946tTKWfVlK8fRwdrgji9
GoV8gAG8HffsXZOgobyDqPFkRRqzBnwc2SDO+31+zhCrpfxDeNdjelWsQgv3
pXHchhEX/k/R2jAdungewwhM8Ks82KJDHF8jeP7+7qgDe6eJjwypuzRy16pp
LHVzfiCDIL+00tNJT7xGMfJB7eyWFD3mltq9HEXa8MbLklE9+R2DUVDScDvI
AB5PoBxNPR+nlFQbiKccid+MiGucjODHyx6HMFe30pxsJL4T0K1f/qxOYoRU
slQTaF1Xu8BtMyGZbziJnLLeU1PpJvBxnaew2d1rPExuIv5TcPulOFi80wy+
3bEXcL8ZMx+WZiYfCpRtKkprV5kpjwLNjCWoxHuG/Cw+FyhDEs7PUD4FHmme
XDveP0O+lCjYlun9xWYL5VWi8v7B02diLfQ/KDH/jkIU95uF8qsgdWZPbnlr
IZ8qBPRW1NeEWImHCpryBVlEqZX8quHfmeezRmolPmoIOuQX/15vI99q2ARe
2hQvG/HSQPIw4+vgwzbyr8G6jozkxrM24qfBpmZFl/S6jfZBi8D0Fz3fNdiI
pxarg09ETA7aaD+0yHb48UkdY4MLz1cH6f6rwzfWMrQvOoS+Ztq89zLEW4dX
txzWbQ9naH+mcbFL8qYpniH+00Dq1mevcxjap2lE5p5etaKKIR962D+61pr4
mCEfehS77HNPmGTIhx6VrlGGNyxDPvQI/WiV14m1LPkwoLo5weSyhyUfBkjS
rAUtwSz5MMDx6pt996JZBPEDGiGanRtKF7Lkw4gteRD35bHkw4g4Efz33mfJ
hwknA+ROti6WfJgw5LZdODbCkg8T9A32ZRYrSz7MSIrSmubsOfJhhna/fDDe
jSMfZmSlFmy448eRjxkU5vRePRfOkY8ZlKd8m+kRw5GPGcRUuh7R/cCRDwt8
BMsEZ/I58mGBoCSjvfYuRz4suONvL45u4ciHFR4Vvy4rlnLkw4r5+Lms2wqO
fFixuqLcNMFy+BcnoTWH
       "]], 
      Hue[0.9060679774997897, 0.6, 0.6], 
      Directive[
       PointSize[0.01388888888888889], 
       AbsoluteThickness[1.6], FontSize -> 25, 
       RGBColor[1, 0, 0]], 
      PointBox[CompressedData["
1:eJw1kwlMFHcUh0HAxLWAVlCxBqshIraNBpAgFn8JVPCoKFsRJVRNq1AFBAsV
AWk5AxQQUNtKqQhyI1our3JJRbrIITeIwO7C3vdRVMQ2hfH1JZPJJDPv/37f
92b9V6HsU4sMDAxOzl8L9/+royI8IL/MpzbG4o4nPzoJ+UmssALvQkQzz1fh
NR5sW/a6Cg+sk+XeD/LxzXJ2VkLGXbx7vxj/ZlfmGW5sRC5TFfj5qVfUrdhW
PGTev4Mqk6ToDWNtUHgvdKjBIY+BkNL3OPR9PXIT16gCXTqxdKQozJV1Hz8I
nDlbvXrwK9PvIZZPSAqONvbCzj/rz5lNjUivt1GaHOun/s04dUrMXsUZQPH8
1yNFj+A+W2NdZDcEOXNeK9L9QmMulw3DganH4LfFB/5kMkrnt2Gf6ujGhPjn
mG8+f8ITJHwmqC+qGQOLmecvKPakv5SajIPNAOAg1XwNu8VxgvJ2YFI1etA2
YhJ8BthTTFTCaNlDLs3bBdkVbYbhRR6Y8cK64eB1dXXREj7x7EHvQE7elxl8
vLPRC9Ybn+oemynK0wvnkML2ultT2M0c0Ad74+EV3U7TlK8PJXXGPvLaaWQx
AfqRZxq/6JKDgPIOwLi8oXPsvgBMnJEB3BT1jJ/ZKqT8gygf7Hx9vEqIdQvj
WA8h2PyEd5WFCI8ZHkPoavd/fDZJhACmhuHu7OE2+FZEfEZQJ+BHrT4nxkI3
izsjuOGrsSwcFxOvUfRHRZlaukvwcqHdzCj6UiX7d5ZLyO9zlHiFi+PMpGDw
uI7BNKPpEu+8lHiO4XSbZ/oRrhTMeMkvYNgfGmTsLiO+49jmHcF1zJehu2uh
xpEpqK/QzMhwjmk4gXYX1tf4Qg4mrsUkOLK5NPPbcuI/iRXy0vOzb+Rg2vlz
oT5TJxN6K8gHDwebP1GU3FNQHh7iGnLtRAZK8sPD39YHLn7kqaR8PPDtltUG
lCrJFx+R2bX2f2iUlJcP9SKX5U4uKvof+HBslV1ITlNR/imYDLm8yBlSkc8p
rIzk5kRZqYnHFITidZwzQWryO43qlsSYjGI18ZmGb3hxWvWcmnxPI/aydkfK
Sg3xEuCyq6PtWTcN+Rdg+5OQze/7aYifAIs3By/dl6ihfRDCNiWuZdV1DfEU
4reZHN+KRxraDyE6rrW4X5/UwJLhKwKn4MPM399qaF9E2Fb6bXfAWi3xFsHo
4CufxO1a2h8xcgzqRU6HtcRfDFHf7rQbEVraJzHMrZKtONla8iFB7uFrg0cq
teRDAo/i75pCOrXkQ4Klkaaldnwt+ZDg5OaPfSv/0ZIPKTLNi7Kj1+rIhxQJ
iw2T3LboyIcUK8x2DOzdr8NOZkAZVvtfueB2Wkc+ZPg8clXsvRgd+ZCh/4CB
6ZZrOvIhx+7qHwdZdTryIcexTe1plu068iHH3V6z5l1cHflQ4NAv7IbAWR35
UMBPNpbyylRPPhQ48cH6+L02evKhhMTmWav9p3ryocSewWeVRmw9+VDCb/LY
MDdQTz5UKLhtr/4+Vk8+VLBNTagZztGTDxWWdM8ElZTpyYcaRh3H0zRNevKh
Rt9c7pRFn558qBG366ZD6LQe/wHnKSpA
       "]]}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.99}, {0, 2}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 25}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {}, PlotRange -> {{0, 0.99}, {0, 2}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"s1-level\"", "\"s2-level\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 25, 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 25, 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 25, 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], FontSize -> 25, 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "25"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.769386604954978*^9, {3.769386730316947*^9, 3.7693867701404743`*^9}, 
   3.7694256469281397`*^9, 3.769425947273861*^9, 3.769426468316725*^9, 
   3.769426786680921*^9, 3.769427054211063*^9, 3.7694272551467657`*^9, 
   3.769429407407653*^9, 3.769429483183403*^9, 3.769429584303692*^9, 
   3.7694298290129623`*^9}]
}, Open  ]]
},
WindowSize->{808, 905},
WindowMargins->{{173, Automatic}, {33, Automatic}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 13319, 381, 794, "Input"],
Cell[13902, 405, 52793, 1024, 245, "Output"],
Cell[66698, 1431, 231, 5, 28, "Output"],
Cell[66932, 1438, 229, 5, 28, "Output"],
Cell[67164, 1445, 231, 5, 28, "Output"],
Cell[67398, 1452, 231, 5, 28, "Output"],
Cell[67632, 1459, 171807, 2935, 229, "Output"],
Cell[239442, 4396, 34960, 607, 236, "Output"],
Cell[274405, 5005, 34153, 594, 230, "Output"],
Cell[308561, 5601, 33928, 590, 233, "Output"],
Cell[342492, 6193, 30401, 532, 230, "Output"],
Cell[372896, 6727, 31693, 553, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404626, 7285, 15950, 434, 811, "Input"],
Cell[420579, 7721, 123507, 2142, 240, "Output"],
Cell[544089, 9865, 30726, 537, 234, "Output"],
Cell[574818, 10404, 30507, 533, 229, "Output"],
Cell[605328, 10939, 407, 7, 28, "Output"]
}, Open  ]],
Cell[605750, 10949, 11359, 296, 522, "Input"],
Cell[CellGroupData[{
Cell[617134, 11249, 3273, 82, 233, "Input"],
Cell[620410, 11333, 9181, 188, 232, "Output"],
Cell[629594, 11523, 9189, 187, 238, "Output"],
Cell[638786, 11712, 9191, 188, 234, "Output"],
Cell[647980, 11902, 9137, 186, 238, "Output"]
}, Open  ]],
Cell[657132, 12091, 13754, 365, 658, "Input"],
Cell[CellGroupData[{
Cell[670911, 12460, 4738, 123, 284, "Input"],
Cell[675652, 12585, 9233, 187, 241, "Output"],
Cell[684888, 12774, 9233, 187, 241, "Output"],
Cell[694124, 12963, 9344, 191, 232, "Output"],
Cell[703471, 13156, 9351, 191, 232, "Output"],
Cell[712825, 13349, 14755, 298, 284, "Output"]
}, Open  ]]
}
]
*)

