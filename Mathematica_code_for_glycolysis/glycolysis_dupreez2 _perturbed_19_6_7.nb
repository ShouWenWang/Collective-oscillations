(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1959417,      36795]
NotebookOptionsPosition[   1956740,      36719]
NotebookOutlinePosition[   1957160,      36736]
CellTagsIndexPosition[   1957117,      36733]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "define"}], " ", "the", " ", "perturbation", " ", 
    "models", " ", "and", " ", "a", " ", "few", " ", "other", " ", 
    "functions", " ", "are", " ", "defined", " ", "below"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"glycolysisACE", "[", 
     RowBox[{"ACE_", ",", "maxTime_", ",", " ", "GLCo0_"}], "]"}], ":=", 
    RowBox[{"(", "\n", 
     RowBox[{
      RowBox[{"variables", " ", "=", " ", 
       RowBox[{"{", "\n", " ", 
        RowBox[{
         RowBox[{"AMP", "[", "t", "]"}], ",", " ", 
         RowBox[{"ATP", "[", "t", "]"}], ",", " ", 
         RowBox[{"BPG", "[", "t", "]"}], ",", " ", 
         RowBox[{"F16P", "[", "t", "]"}], ",", " ", 
         RowBox[{"F6P", "[", "t", "]"}], ",", " ", 
         RowBox[{"G3P", "[", "t", "]"}], ",", " ", 
         RowBox[{"G6P", "[", "t", "]"}], ",", " ", 
         RowBox[{"GLCi", "[", "t", "]"}], ",", " ", 
         RowBox[{"NADH", "[", "t", "]"}], ",", " ", 
         RowBox[{"P2G", "[", "t", "]"}], ",", " ", 
         RowBox[{"P3G", "[", "t", "]"}], ",", " ", 
         RowBox[{"PEP", "[", "t", "]"}], ",", " ", 
         RowBox[{"PYR", "[", "t", "]"}], ",", " ", 
         RowBox[{"TRIO", "[", "t", "]"}]}], "\n", "}"}]}], ";", "\n", "\n", 
      RowBox[{"initialValues", " ", "=", " ", 
       RowBox[{"{", "\n", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"AMP", "[", "0", "]"}], " ", "==", " ", "0.169126793522"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"ATP", "[", "0", "]"}], " ", "==", " ", "2.88896546881"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"BPG", "[", "0", "]"}], " ", "==", " ", 
          "0.000272378466415"}], ",", " ", 
         RowBox[{
          RowBox[{"F16P", "[", "0", "]"}], " ", "==", " ", "5.1230306063"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"F6P", "[", "0", "]"}], " ", "==", " ", "1.35316959718"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"G3P", "[", "0", "]"}], " ", "==", " ", "1.51464838664"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"G6P", "[", "0", "]"}], " ", "==", " ", "5.2330035355"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"GLCi", "[", "0", "]"}], " ", "==", " ", 
          "0.0264527982732"}], ",", " ", 
         RowBox[{
          RowBox[{"NADH", "[", "0", "]"}], " ", "==", " ", "0.570243405518"}],
          ",", " ", 
         RowBox[{
          RowBox[{"P2G", "[", "0", "]"}], " ", "==", " ", "0.0219411145028"}],
          ",", " ", 
         RowBox[{
          RowBox[{"P3G", "[", "0", "]"}], " ", "==", " ", "0.182294273857"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"PEP", "[", "0", "]"}], " ", "==", " ", "0.0180777173497"}],
          ",", " ", 
         RowBox[{
          RowBox[{"PYR", "[", "0", "]"}], " ", "==", " ", "2.26719823412"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"TRIO", "[", "0", "]"}], " ", "==", " ", "2.6506857804"}]}],
         "\n", "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rates", " ", "=", " ", 
       RowBox[{"{", " ", 
        RowBox[{
        "v\[LetterSpace]GLT", ",", "v\[LetterSpace]GLK", ",", 
         "v\[LetterSpace]GLYCO", ",", "v\[LetterSpace]Treha", ",", 
         "\[IndentingNewLine]", "v\[LetterSpace]PGI", ",", " ", 
         "v\[LetterSpace]PFK", ",", "v\[LetterSpace]ALD", ",", 
         "v\[LetterSpace]G3PDH", ",", " ", "v\[LetterSpace]G3PA", ",", 
         "\[IndentingNewLine]", "v\[LetterSpace]GAPDH", ",", " ", 
         "v\[LetterSpace]PGK", ",", " ", "v\[LetterSpace]PGM", ",", "  ", 
         "v\[LetterSpace]ENO", ",", "v\[LetterSpace]PYK", ",", 
         "\[IndentingNewLine]", "v\[LetterSpace]PDC", ",", " ", 
         "v\[LetterSpace]SUC", ",", " ", "v\[LetterSpace]ADH", ",", "   ", 
         "v\[LetterSpace]ATP", ",", "v\[LetterSpace]AK"}], "}"}]}], ";", "\n",
       "\n", 
      RowBox[{"rateEquations", " ", "=", " ", 
       RowBox[{"{", "\n", 
        RowBox[{
         RowBox[{"v\[LetterSpace]ADH", " ", "->", " ", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"VmADH", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ETOH", "*", "NAD"}], " ", "-", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"ACE", "[", "t", "]"}], "*", 
                    RowBox[{"NADH", "[", "t", "]"}]}], ")"}], "/", 
                  "KeqADH"}]}], ")"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"KiADHNAD", "*", "KmADHETOH", "*", 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ETOH", "*", "KmADHNAD"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHNAD", "*", "KmADHETOH"}], ")"}]}], " ", "+", 
                 " ", 
                 RowBox[{"NAD", "/", "KiADHNAD"}], " ", "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ETOH", "*", "NAD"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHNAD", "*", "KmADHETOH"}], ")"}]}], " ", "+", 
                 " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"KmADHNADH", "*", 
                    RowBox[{"ACE", "[", "t", "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHNADH", "*", "KmADHACE"}], ")"}]}], " ", "+", 
                 " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ETOH", "*", "NAD", "*", 
                    RowBox[{"ACE", "[", "t", "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHACE", "*", "KiADHNAD", "*", "KmADHETOH"}], 
                   ")"}]}], " ", "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"KmADHNADH", "*", "NAD", "*", 
                    RowBox[{"ACE", "[", "t", "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHNAD", "*", "KiADHNADH", "*", "KmADHACE"}], 
                   ")"}]}], " ", "+", " ", 
                 RowBox[{
                  RowBox[{"NADH", "[", "t", "]"}], "/", "KiADHNADH"}], " ", 
                 "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ETOH", "*", "KmADHNAD", "*", 
                    RowBox[{"NADH", "[", "t", "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHNAD", "*", "KiADHNADH", "*", "KmADHETOH"}], 
                   ")"}]}], " ", "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"ACE", "[", "t", "]"}], "*", 
                    RowBox[{"NADH", "[", "t", "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHNADH", "*", "KmADHACE"}], ")"}]}], " ", "+", 
                 " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ETOH", "*", 
                    RowBox[{"ACE", "[", "t", "]"}], "*", 
                    RowBox[{"NADH", "[", "t", "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHETOH", "*", "KiADHNADH", "*", "KmADHACE"}], 
                   ")"}]}]}], ")"}]}], ")"}]}], ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]AK", " ", "->", " ", 
          RowBox[{"133.333", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ADP", "^", "2"}], " ", "-", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"AMP", "[", "t", "]"}], "*", 
                RowBox[{"ATP", "[", "t", "]"}]}], ")"}], "/", "KeqAK"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]ALD", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmALD", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"F16P", "[", "t", "]"}], " ", "-", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"KeqTPI", "*", 
                  RowBox[{
                   RowBox[{"TRIO", "[", "t", "]"}], "^", "2"}]}], ")"}], "/", 
                
                RowBox[{"(", 
                 RowBox[{"KeqALD", "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "^", 
                   "2"}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmALDF16P", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"F16P", "[", "t", "]"}], "/", "KmALDF16P"}], " ", "+",
                " ", 
               RowBox[{
                RowBox[{"TRIO", "[", "t", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "*", 
                  "KmALDDHAP"}], ")"}]}], " ", "+", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"KeqTPI", "*", 
                  RowBox[{"TRIO", "[", "t", "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "*", 
                  "KmALDGAP"}], ")"}]}], " ", "+", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"KeqTPI", "*", 
                  RowBox[{"F16P", "[", "t", "]"}], "*", 
                  RowBox[{"TRIO", "[", "t", "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "*", 
                  "KmALDF16P", "*", "KmALDGAPi"}], ")"}]}], " ", "+", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"KeqTPI", "*", 
                  RowBox[{
                   RowBox[{"TRIO", "[", "t", "]"}], "^", "2"}]}], ")"}], "/", 
                
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "^", "2"}],
                   "*", "KmALDDHAP", "*", "KmALDGAP"}], ")"}]}]}], ")"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]ATP", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"KATPASE", "*", 
             RowBox[{
              RowBox[{"ATP", "[", "t", "]"}], "^", "nATP"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"KmATP", "^", "nATP"}], " ", "+", " ", 
             RowBox[{
              RowBox[{"ATP", "[", "t", "]"}], "^", "nATP"}]}], ")"}]}]}], ",",
          " ", 
         RowBox[{"v\[LetterSpace]ENO", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmENO", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"P2G", "[", "t", "]"}], " ", "-", " ", 
               RowBox[{
                RowBox[{"PEP", "[", "t", "]"}], "/", "KeqENO"}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmENOP2G", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"P2G", "[", "t", "]"}], "/", "KmENOP2G"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"PEP", "[", "t", "]"}], "/", "KmENOPEP"}]}], ")"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]G3PA", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmG3PA", "*", 
             RowBox[{"G3P", "[", "t", "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmG3PAG3P", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"Phi", "/", "KmG3PAPhi"}]}], ")"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"G3P", "[", "t", "]"}], "/", "KmG3PAG3P"}]}], ")"}]}],
             ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]G3PDH", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmG3PDH", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"NAD", "*", 
                    RowBox[{"G3P", "[", "t", "]"}]}], ")"}], "/", 
                  "KeqG3PDH"}], ")"}]}], " ", "+", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NADH", "[", "t", "]"}], "*", 
                  RowBox[{"TRIO", "[", "t", "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}]}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmG3PDHDHAP", "*", "KmG3PDHNADH", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"ADP", "/", "KmG3PDHADP"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"ATP", "[", "t", "]"}], "/", "KmG3PDHATP"}], " ", "+",
                " ", 
               RowBox[{
                RowBox[{"F16P", "[", "t", "]"}], "/", "KmG3PDHF16P"}]}], 
              ")"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"NAD", "/", "KmG3PDHNAD"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"NADH", "[", "t", "]"}], "/", "KmG3PDHNADH"}]}], 
              ")"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"G3P", "[", "t", "]"}], "/", "KmG3PDHG3P"}], " ", "+",
                " ", 
               RowBox[{
                RowBox[{"TRIO", "[", "t", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "*", 
                  "KmG3PDHDHAP"}], ")"}]}]}], ")"}]}], ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]GAPDH", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"VmGAPDHf", "*", 
                  RowBox[{"BPG", "[", "t", "]"}], "*", 
                  RowBox[{"NADH", "[", "t", "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"KeqGAPDH", "*", "KmGAPDHGAP", "*", "KmGAPDHNAD"}], 
                 ")"}]}], ")"}]}], " ", "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"KeqTPI", "*", "NAD", "*", "VmGAPDHf", "*", 
                RowBox[{"TRIO", "[", "t", "]"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "*", 
                "KmGAPDHGAP", "*", "KmGAPDHNAD"}], ")"}]}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"NAD", "/", "KmGAPDHNAD"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"NADH", "[", "t", "]"}], "/", "KmGAPDHNADH"}]}], 
              ")"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"BPG", "[", "t", "]"}], "/", "KmGAPDHBPG"}], " ", "+",
                " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"KeqTPI", "*", 
                  RowBox[{"TRIO", "[", "t", "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "*", 
                  "KmGAPDHGAP"}], ")"}]}]}], ")"}]}], ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]GLK", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmGLK", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ADP", "*", 
                    RowBox[{"G6P", "[", "t", "]"}]}], ")"}], "/", "KeqGLK"}], 
                 ")"}]}], " ", "+", " ", 
               RowBox[{
                RowBox[{"ATP", "[", "t", "]"}], "*", 
                RowBox[{"GLCi", "[", "t", "]"}]}]}], ")"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmGLKATP", "*", "KmGLKGLCi", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"ADP", "/", "KmGLKADP"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"ATP", "[", "t", "]"}], "/", "KmGLKATP"}]}], ")"}], 
             "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"G6P", "[", "t", "]"}], "/", "KmGLKG6P"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"GLCi", "[", "t", "]"}], "/", "KmGLKGLCi"}]}], 
              ")"}]}], ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]GLT", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmGLT", "*", 
             RowBox[{"(", 
              RowBox[{"GLCo", " ", "-", " ", 
               RowBox[{
                RowBox[{"GLCi", "[", "t", "]"}], "/", "KeqGLT"}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmGLTGLCo", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"GLCo", "/", "KmGLTGLCo"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"GLCi", "[", "t", "]"}], "/", "KmGLTGLCi"}], " ", "+",
                " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"alpha", "*", "GLCo", "*", 
                  RowBox[{"GLCi", "[", "t", "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"KmGLTGLCi", "*", "KmGLTGLCo"}], ")"}]}]}], ")"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]GLYCO", " ", "->", " ", 
          RowBox[{"KGLYCOGEN", "*", 
           RowBox[{"ATP", "[", "t", "]"}], "*", 
           RowBox[{"G6P", "[", "t", "]"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]PDC", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmPDC", "*", 
             RowBox[{
              RowBox[{"PYR", "[", "t", "]"}], "^", "nPDC"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"KmPDCPYR", "^", "nPDC"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"PYR", "[", "t", "]"}], "^", "nPDC"}], "/", 
                RowBox[{"KmPDCPYR", "^", "nPDC"}]}]}], ")"}]}], ")"}]}]}], 
         ",", " ", 
         RowBox[{"v\[LetterSpace]PFK", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"gR", "*", "VmPFK", "*", 
             RowBox[{"ATP", "[", "t", "]"}], "*", 
             RowBox[{"F6P", "[", "t", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"ATP", "[", "t", "]"}], "/", "KmPFKATP"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"F6P", "[", "t", "]"}], "/", "KmPFKF6P"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"gR", "*", 
                  RowBox[{"ATP", "[", "t", "]"}], "*", 
                  RowBox[{"F6P", "[", "t", "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"KmPFKATP", "*", "KmPFKF6P"}], ")"}]}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmPFKATP", "*", "KmPFKF6P", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"L0", "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"CPFKAMP", "*", 
                    RowBox[{"AMP", "[", "t", "]"}]}], ")"}], "/", 
                    "KPFKAMP"}]}], ")"}], "^", "2"}], "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"CiPFKATP", "*", 
                    RowBox[{"ATP", "[", "t", "]"}]}], ")"}], "/", 
                    "KiPFKATP"}]}], ")"}], "^", "2"}], "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"CPFKATP", "*", 
                    RowBox[{"ATP", "[", "t", "]"}]}], ")"}], "/", 
                    "KmPFKATP"}]}], ")"}], "^", "2"}], "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"CPFKF26BP", "*", "F26BP"}], ")"}], "/", 
                    "KPFKF26BP"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"CPFKF16BP", "*", 
                    RowBox[{"F16P", "[", "t", "]"}]}], ")"}], "/", 
                    "KPFKF16BP"}]}], ")"}], "^", "2"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"AMP", "[", "t", "]"}], "/", "KPFKAMP"}]}], ")"}],
                    "^", "2"}], "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"ATP", "[", "t", "]"}], "/", "KiPFKATP"}]}], 
                    ")"}], "^", "2"}], "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{"F26BP", "/", "KPFKF26BP"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"F16P", "[", "t", "]"}], "/", "KPFKF16BP"}]}], 
                    ")"}], "^", "2"}]}], ")"}]}], " ", "+", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", " ", "+", " ", 
                  RowBox[{
                   RowBox[{"ATP", "[", "t", "]"}], "/", "KmPFKATP"}], " ", 
                  "+", " ", 
                  RowBox[{
                   RowBox[{"F6P", "[", "t", "]"}], "/", "KmPFKF6P"}], " ", 
                  "+", " ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"gR", "*", 
                    RowBox[{"ATP", "[", "t", "]"}], "*", 
                    RowBox[{"F6P", "[", "t", "]"}]}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"KmPFKATP", "*", "KmPFKF6P"}], ")"}]}]}], ")"}], 
                "^", "2"}]}], ")"}]}], ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]PGI", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmPGI", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"F6P", "[", "t", "]"}], "/", "KeqPGI"}], ")"}]}], 
               " ", "+", " ", 
               RowBox[{"G6P", "[", "t", "]"}]}], ")"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmPGIG6P", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"F6P", "[", "t", "]"}], "/", "KmPGIF6P"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"G6P", "[", "t", "]"}], "/", "KmPGIG6P"}]}], ")"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]PGK", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmPGK", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ADP", "*", "KeqPGK", "*", 
                RowBox[{"BPG", "[", "t", "]"}]}], " ", "-", " ", 
               RowBox[{
                RowBox[{"ATP", "[", "t", "]"}], "*", 
                RowBox[{"P3G", "[", "t", "]"}]}]}], ")"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmPGKATP", "*", "KmPGKP3G", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"ADP", "/", "KmPGKADP"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"ATP", "[", "t", "]"}], "/", "KmPGKATP"}]}], ")"}], 
             "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"BPG", "[", "t", "]"}], "/", "KmPGKBPG"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"P3G", "[", "t", "]"}], "/", "KmPGKP3G"}]}], ")"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]PGM", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmPGM", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"P2G", "[", "t", "]"}], "/", "KeqPGM"}], ")"}]}], 
               " ", "+", " ", 
               RowBox[{"P3G", "[", "t", "]"}]}], ")"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmPGMP3G", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"P2G", "[", "t", "]"}], "/", "KmPGMP2G"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"P3G", "[", "t", "]"}], "/", "KmPGMP3G"}]}], ")"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]PYK", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmPYK", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ADP", "*", 
                RowBox[{"PEP", "[", "t", "]"}]}], " ", "-", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"ATP", "[", "t", "]"}], "*", 
                  RowBox[{"PYR", "[", "t", "]"}]}], ")"}], "/", "KeqPYK"}]}], 
              ")"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmPYKADP", "*", "KmPYKPEP", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"ADP", "/", "KmPYKADP"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"ATP", "[", "t", "]"}], "/", "KmPYKATP"}]}], ")"}], 
             "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"PEP", "[", "t", "]"}], "/", "KmPYKPEP"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"PYR", "[", "t", "]"}], "/", "KmPYKPYR"}]}], ")"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]SUC", " ", "->", " ", 
          RowBox[{"KSUCC", "*", 
           RowBox[{"ACE", "[", "t", "]"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]Treha", " ", "->", " ", 
          RowBox[{"KTREHALOSE", "*", 
           RowBox[{"ATP", "[", "t", "]"}], "*", 
           RowBox[{"G6P", "[", "t", "]"}]}]}]}], "\n", "}"}]}], ";", "\n", 
      "\n", 
      RowBox[{"parameters", " ", "=", " ", 
       RowBox[{"{", "\n", 
        RowBox[{
         RowBox[{"AXPsum", " ", "->", " ", "4.1"}], ",", " ", 
         RowBox[{"CPFKAMP", " ", "->", " ", "0.0845"}], ",", " ", 
         RowBox[{"CPFKATP", " ", "->", " ", "3.0"}], ",", " ", 
         RowBox[{"CPFKF16BP", " ", "->", " ", "0.397"}], ",", " ", 
         RowBox[{"CPFKF26BP", " ", "->", " ", "0.0174"}], ",", " ", 
         RowBox[{"CiPFKATP", " ", "->", " ", "100.0"}], ",", " ", 
         RowBox[{"ETOH", " ", "->", " ", "50.0"}], ",", " ", 
         RowBox[{"EXTERNAL", " ", "->", " ", "0.0"}], ",", " ", 
         RowBox[{"F26BP", " ", "->", " ", "0.02"}], ",", " ", 
         RowBox[{"GLCo", " ", "->", " ", "GLCo0"}], ",", " ", 
         RowBox[{"KATPASE", " ", "->", " ", "68.8096317495"}], ",", "  ", 
         RowBox[{"KPFKAMP", " ", "->", " ", "0.0995"}], ",", " ", 
         RowBox[{"KPFKF16BP", " ", "->", " ", "0.111"}], ",", " ", 
         RowBox[{"KPFKF26BP", " ", "->", " ", "0.000682"}], ",", " ", 
         RowBox[{"KSUCC", " ", "->", " ", "19.6023811746"}], 
         RowBox[{"(*", 
          RowBox[{"GLYO", " ", "flux"}], "*)"}], ",", "  ", 
         RowBox[{"KeqADH", " ", "->", " ", "6.9*^-05"}], ",", " ", 
         RowBox[{"KeqAK", " ", "->", " ", "0.45"}], ",", " ", 
         RowBox[{"KeqALD", " ", "->", " ", "0.069"}], ",", " ", 
         RowBox[{"KeqENO", " ", "->", " ", "6.7"}], ",", " ", 
         RowBox[{"KeqG3PDH", " ", "->", " ", "4300.0"}], ",", " ", 
         RowBox[{"KeqGAPDH", " ", "->", " ", "0.0056263906277"}], ",", " ", 
         RowBox[{"KeqGLK", " ", "->", " ", "3800.0"}], ",", " ", 
         RowBox[{"KeqGLT", " ", "->", " ", "1.0"}], ",", " ", 
         RowBox[{"KeqPGI", " ", "->", " ", "0.314"}], ",", " ", 
         RowBox[{"KeqPGK", " ", "->", " ", "3200.0"}], ",", " ", 
         RowBox[{"KeqPGM", " ", "->", " ", "0.19"}], ",", " ", 
         RowBox[{"KeqPYK", " ", "->", " ", "6500.0"}], ",", " ", 
         RowBox[{"KeqTPI", " ", "->", " ", "0.045"}], ",", " ", 
         RowBox[{"KiADHACE", " ", "->", " ", "1.1"}], ",", " ", 
         RowBox[{"KiADHETOH", " ", "->", " ", "90.0"}], ",", " ", 
         RowBox[{"KiADHNAD", " ", "->", " ", "0.92"}], ",", " ", 
         RowBox[{"KiADHNADH", " ", "->", " ", "0.031"}], ",", " ", 
         RowBox[{"KiPFKATP", " ", "->", " ", "0.65"}], ",", " ", 
         RowBox[{"KmADHACE", " ", "->", " ", "1.11"}], ",", " ", 
         RowBox[{"KmADHETOH", " ", "->", " ", "17.0"}], ",", " ", 
         RowBox[{"KmADHNAD", " ", "->", " ", "0.17"}], ",", " ", 
         RowBox[{"KmADHNADH", " ", "->", " ", "0.11"}], ",", " ", 
         RowBox[{"KmALDDHAP", " ", "->", " ", "2.4"}], ",", " ", 
         RowBox[{"KmALDF16P", " ", "->", " ", "0.3"}], ",", " ", 
         RowBox[{"KmALDGAP", " ", "->", " ", "2.0"}], ",", " ", 
         RowBox[{"KmALDGAPi", " ", "->", " ", "10.0"}], ",", " ", 
         RowBox[{"KmATP", " ", "->", " ", "0.263159506089"}], ",", " ", 
         RowBox[{"KmENOP2G", " ", "->", " ", "0.04"}], ",", " ", 
         RowBox[{"KmENOPEP", " ", "->", " ", "0.5"}], ",", " ", 
         RowBox[{"KmG3PAG3P", " ", "->", " ", "4.21421727097"}], ",", " ", 
         RowBox[{"KmG3PAPhi", " ", "->", " ", "0.798017147071"}], ",", " ", 
         RowBox[{"KmG3PDHADP", " ", "->", " ", "1.60537927993"}], ",", " ", 
         RowBox[{"KmG3PDHATP", " ", "->", " ", "0.568725492711"}], ",", " ", 
         RowBox[{"KmG3PDHDHAP", " ", "->", " ", "0.4"}], ",", " ", 
         RowBox[{"KmG3PDHF16P", " ", "->", " ", "4.77110176421"}], ",", " ", 
         RowBox[{"KmG3PDHG3P", " ", "->", " ", "1.08899464691"}], ",", " ", 
         RowBox[{"KmG3PDHNAD", " ", "->", " ", "0.93"}], ",", " ", 
         RowBox[{"KmG3PDHNADH", " ", "->", " ", "0.023"}], ",", " ", 
         RowBox[{"KmGAPDHBPG", " ", "->", " ", "0.0098"}], ",", " ", 
         RowBox[{"KmGAPDHGAP", " ", "->", " ", "0.21"}], ",", " ", 
         RowBox[{"KmGAPDHNAD", " ", "->", " ", "0.09"}], ",", " ", 
         RowBox[{"KmGAPDHNADH", " ", "->", " ", "0.06"}], ",", " ", 
         RowBox[{"KmGLKADP", " ", "->", " ", "0.23"}], ",", " ", 
         RowBox[{"KmGLKATP", " ", "->", " ", "0.15"}], ",", " ", 
         RowBox[{"KmGLKG6P", " ", "->", " ", "30.0"}], ",", " ", 
         RowBox[{"KmGLKGLCi", " ", "->", " ", "0.08"}], ",", " ", 
         RowBox[{"KmGLTGLCi", " ", "->", " ", "1.1918"}], ",", " ", 
         RowBox[{"KmGLTGLCo", " ", "->", " ", "1.1918"}], ",", " ", 
         RowBox[{"KmPDCPYR", " ", "->", " ", "4.33"}], ",", " ", 
         RowBox[{"KmPFKATP", " ", "->", " ", "0.71"}], ",", " ", 
         RowBox[{"KmPFKF6P", " ", "->", " ", "0.1"}], ",", " ", 
         RowBox[{"KmPGIF6P", " ", "->", " ", "0.3"}], ",", " ", 
         RowBox[{"KmPGIG6P", " ", "->", " ", "1.4"}], ",", " ", 
         RowBox[{"KmPGKADP", " ", "->", " ", "0.2"}], ",", " ", 
         RowBox[{"KmPGKATP", " ", "->", " ", "0.3"}], ",", " ", 
         RowBox[{"KmPGKBPG", " ", "->", " ", "0.003"}], ",", " ", 
         RowBox[{"KmPGKP3G", " ", "->", " ", "0.53"}], ",", " ", 
         RowBox[{"KmPGMP2G", " ", "->", " ", "0.08"}], ",", " ", 
         RowBox[{"KmPGMP3G", " ", "->", " ", "1.2"}], ",", " ", 
         RowBox[{"KmPYKADP", " ", "->", " ", "0.53"}], ",", " ", 
         RowBox[{"KmPYKATP", " ", "->", " ", "1.5"}], ",", " ", 
         RowBox[{"KmPYKPEP", " ", "->", " ", "0.14"}], ",", " ", 
         RowBox[{"KmPYKPYR", " ", "->", " ", "21.0"}], ",", " ", 
         RowBox[{"L0", " ", "->", " ", "0.66"}], ",", " ", 
         RowBox[{"NADSUM", " ", "->", " ", "1.0"}], ",", " ", 
         RowBox[{"Phi", " ", "->", " ", "1.20470265921"}], ",", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"VmADH", " ", "->", " ", "834.684820559"}], ",", " ", 
         RowBox[{"VmALD", " ", "->", " ", "232.895576807"}], ",", " ", 
         RowBox[{"VmENO", " ", "->", " ", "462.025180445"}], ",", " ", 
         RowBox[{"VmG3PA", " ", "->", " ", "542.319235827"}], ",", " ", 
         RowBox[{"VmGAPDHf", " ", "->", " ", "419.560093466"}], ",", " ", 
         RowBox[{"VmGLK", " ", "->", " ", "329.958304618"}], ",", " ", 
         RowBox[{"VmGLT", " ", "->", " ", "136.494419254"}], ",", " ", 
         RowBox[{"VmPDC", " ", "->", " ", "223.978775021"}], ",", " ", 
         RowBox[{"VmPFK", " ", "->", " ", "183.616866462"}], ",", " ", 
         RowBox[{"VmPGI", " ", "->", " ", "467.754325004"}], ",", " ", 
         RowBox[{"VmPGK", " ", "->", " ", "1419.49486841"}], ",", " ", 
         RowBox[{"VmPGM", " ", "->", " ", "2762.32037661"}], ",", " ", 
         RowBox[{"VmPYK", " ", "->", " ", "1751.9596196"}], ",", " ", 
         RowBox[{"alpha", " ", "->", " ", "0.91"}], ",", " ", 
         RowBox[{"gR", " ", "->", " ", "5.12"}], ",", " ", 
         RowBox[{"nATP", " ", "->", " ", "1.0"}], ",", " ", 
         RowBox[{"nPDC", " ", "->", " ", "1.9"}], ",", " ", 
         RowBox[{"default\[LetterSpace]compartment", " ", "->", " ", "1.0"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"VmG3PDH", " ", "->", " ", "477.924460922"}], ",", 
         RowBox[{"KGLYCOGEN", " ", "->", " ", "1.68983106019"}], ",", " ", 
         RowBox[{"KTREHALOSE", " ", "->", " ", "0.754128480342"}]}], "\n", 
        "}"}]}], ";", "\n", "\n", 
      RowBox[{"assignments", " ", "=", " ", 
       RowBox[{"{", "\n", 
        RowBox[{
         RowBox[{"NAD", " ", "->", " ", 
          RowBox[{"NADSUM", " ", "-", " ", 
           RowBox[{"NADH", "[", "t", "]"}]}]}], ",", " ", 
         RowBox[{"ADP", " ", "->", " ", 
          RowBox[{"AXPsum", " ", "-", " ", 
           RowBox[{"AMP", "[", "t", "]"}], " ", "-", " ", 
           RowBox[{"ATP", "[", "t", "]"}]}]}]}], "\n", "}"}]}], ";", "\n", 
      "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Time", " ", "evolution"}], " ", "*)"}], "\n", 
      RowBox[{"odes", " ", "=", " ", 
       RowBox[{"{", "\n", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"AMP", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{"1.0", "*", "v\[LetterSpace]AK"}]}], " ", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"ATP", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]PGK"}], " ", "+", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PYK"}], " ", "+", 
           RowBox[{"1.0", "*", "v\[LetterSpace]AK"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PFK"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]ATP"}], " ", "-", 
           RowBox[{"4.0", "*", "v\[LetterSpace]SUC"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]GLYCO"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]GLK"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]Treha"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"BPG", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]GAPDH"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PGK"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"F16P", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]PFK"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]ALD"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"F6P", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]PGI"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PFK"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"G3P", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]G3PDH"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]G3PA"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"G6P", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]GLK"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PGI"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]GLYCO"}], " ", "-", 
           RowBox[{"2.0", "*", "v\[LetterSpace]Treha"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"GLCi", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]GLT"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]GLK"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"NADH", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]GAPDH"}], " ", "+", 
           RowBox[{"3.0", "*", "v\[LetterSpace]SUC"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]G3PDH"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]ADH"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"P2G", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]PGM"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]ENO"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"P3G", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]PGK"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PGM"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"PEP", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]ENO"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PYK"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"PYR", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]PYK"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PDC"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"TRIO", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"2.0", "*", "v\[LetterSpace]ALD"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]G3PDH"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]GAPDH"}]}]}]}], "\n", "}"}]}], 
      ";", "\n", 
      RowBox[{"timeCourse", " ", "=", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"odes", ",", " ", "initialValues"}], "]"}], "//.", 
            "rateEquations"}], "//.", "assignments"}], "//.", "parameters"}], 
         ",", " ", "variables", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", " ", "maxTime"}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Plot", " ", "the", " ", "time", " ", "evolution", " ", "of", " ", 
        "the", " ", "variables"}], " ", "*)"}], "\n", 
      RowBox[{
       RowBox[{"amp", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"AMP", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"atp", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"ATP", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bpg", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"BPG", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f16p", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"F16P", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f6p", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"F6P", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g3p", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"G3P", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g6p", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"G6P", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"glci", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"GLCi", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nadh", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"NADH", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p2g", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"P2G", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p3g", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"P3G", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pep", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"PEP", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pyr", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"PYR", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"trio", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"TRIO", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"adp", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"AXPsum", " ", "-", " ", 
         RowBox[{"amp", "[", "t", "]"}], " ", "-", " ", 
         RowBox[{"atp", "[", "t", "]"}]}], "/.", "parameters"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nad", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"NADSUM", " ", "-", " ", 
         RowBox[{"nadh", "[", "t", "]"}]}], "/.", "parameters"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"variables", ",", "parameters", ",", "timeCourse"}], "}"}]}], 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"glycolysisACEremoveGLYCO", "[", 
     RowBox[{"ACE_", ",", "maxTime_", ",", " ", "GLCo0_"}], "]"}], ":=", 
    RowBox[{"(", "\n", 
     RowBox[{
      RowBox[{"variables", " ", "=", " ", 
       RowBox[{"{", "\n", " ", 
        RowBox[{
         RowBox[{"AMP", "[", "t", "]"}], ",", " ", 
         RowBox[{"ATP", "[", "t", "]"}], ",", " ", 
         RowBox[{"BPG", "[", "t", "]"}], ",", " ", 
         RowBox[{"F16P", "[", "t", "]"}], ",", " ", 
         RowBox[{"F6P", "[", "t", "]"}], ",", " ", 
         RowBox[{"G3P", "[", "t", "]"}], ",", " ", 
         RowBox[{"G6P", "[", "t", "]"}], ",", " ", 
         RowBox[{"GLCi", "[", "t", "]"}], ",", " ", 
         RowBox[{"NADH", "[", "t", "]"}], ",", " ", 
         RowBox[{"P2G", "[", "t", "]"}], ",", " ", 
         RowBox[{"P3G", "[", "t", "]"}], ",", " ", 
         RowBox[{"PEP", "[", "t", "]"}], ",", " ", 
         RowBox[{"PYR", "[", "t", "]"}], ",", " ", 
         RowBox[{"TRIO", "[", "t", "]"}]}], "\n", "}"}]}], ";", "\n", "\n", 
      RowBox[{"initialValues", " ", "=", " ", 
       RowBox[{"{", "\n", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"AMP", "[", "0", "]"}], " ", "==", " ", "0.169126793522"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"ATP", "[", "0", "]"}], " ", "==", " ", "2.88896546881"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"BPG", "[", "0", "]"}], " ", "==", " ", 
          "0.000272378466415"}], ",", " ", 
         RowBox[{
          RowBox[{"F16P", "[", "0", "]"}], " ", "==", " ", "5.1230306063"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"F6P", "[", "0", "]"}], " ", "==", " ", "1.35316959718"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"G3P", "[", "0", "]"}], " ", "==", " ", "1.51464838664"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"G6P", "[", "0", "]"}], " ", "==", " ", "5.2330035355"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"GLCi", "[", "0", "]"}], " ", "==", " ", 
          "0.0264527982732"}], ",", " ", 
         RowBox[{
          RowBox[{"NADH", "[", "0", "]"}], " ", "==", " ", "0.570243405518"}],
          ",", " ", 
         RowBox[{
          RowBox[{"P2G", "[", "0", "]"}], " ", "==", " ", "0.0219411145028"}],
          ",", " ", 
         RowBox[{
          RowBox[{"P3G", "[", "0", "]"}], " ", "==", " ", "0.182294273857"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"PEP", "[", "0", "]"}], " ", "==", " ", "0.0180777173497"}],
          ",", " ", 
         RowBox[{
          RowBox[{"PYR", "[", "0", "]"}], " ", "==", " ", "2.26719823412"}], 
         ",", " ", 
         RowBox[{
          RowBox[{"TRIO", "[", "0", "]"}], " ", "==", " ", "2.6506857804"}]}],
         "\n", "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rates", " ", "=", " ", 
       RowBox[{"{", " ", 
        RowBox[{
        "v\[LetterSpace]GLT", ",", "v\[LetterSpace]GLK", ",", 
         "v\[LetterSpace]GLYCO", ",", "v\[LetterSpace]Treha", ",", 
         "\[IndentingNewLine]", "v\[LetterSpace]PGI", ",", " ", 
         "v\[LetterSpace]PFK", ",", "v\[LetterSpace]ALD", ",", 
         "v\[LetterSpace]G3PDH", ",", " ", "v\[LetterSpace]G3PA", ",", 
         "\[IndentingNewLine]", "v\[LetterSpace]GAPDH", ",", " ", 
         "v\[LetterSpace]PGK", ",", " ", "v\[LetterSpace]PGM", ",", "  ", 
         "v\[LetterSpace]ENO", ",", "v\[LetterSpace]PYK", ",", 
         "\[IndentingNewLine]", "v\[LetterSpace]PDC", ",", " ", 
         "v\[LetterSpace]SUC", ",", " ", "v\[LetterSpace]ADH", ",", "   ", 
         "v\[LetterSpace]ATP", ",", "v\[LetterSpace]AK"}], "}"}]}], ";", "\n",
       "\n", 
      RowBox[{"rateEquations", " ", "=", " ", 
       RowBox[{"{", "\n", 
        RowBox[{
         RowBox[{"v\[LetterSpace]ADH", " ", "->", " ", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"VmADH", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ETOH", "*", "NAD"}], " ", "-", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"ACE", "[", "t", "]"}], "*", 
                    RowBox[{"NADH", "[", "t", "]"}]}], ")"}], "/", 
                  "KeqADH"}]}], ")"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"KiADHNAD", "*", "KmADHETOH", "*", 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ETOH", "*", "KmADHNAD"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHNAD", "*", "KmADHETOH"}], ")"}]}], " ", "+", 
                 " ", 
                 RowBox[{"NAD", "/", "KiADHNAD"}], " ", "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ETOH", "*", "NAD"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHNAD", "*", "KmADHETOH"}], ")"}]}], " ", "+", 
                 " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"KmADHNADH", "*", 
                    RowBox[{"ACE", "[", "t", "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHNADH", "*", "KmADHACE"}], ")"}]}], " ", "+", 
                 " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ETOH", "*", "NAD", "*", 
                    RowBox[{"ACE", "[", "t", "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHACE", "*", "KiADHNAD", "*", "KmADHETOH"}], 
                   ")"}]}], " ", "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"KmADHNADH", "*", "NAD", "*", 
                    RowBox[{"ACE", "[", "t", "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHNAD", "*", "KiADHNADH", "*", "KmADHACE"}], 
                   ")"}]}], " ", "+", " ", 
                 RowBox[{
                  RowBox[{"NADH", "[", "t", "]"}], "/", "KiADHNADH"}], " ", 
                 "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ETOH", "*", "KmADHNAD", "*", 
                    RowBox[{"NADH", "[", "t", "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHNAD", "*", "KiADHNADH", "*", "KmADHETOH"}], 
                   ")"}]}], " ", "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"ACE", "[", "t", "]"}], "*", 
                    RowBox[{"NADH", "[", "t", "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHNADH", "*", "KmADHACE"}], ")"}]}], " ", "+", 
                 " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ETOH", "*", 
                    RowBox[{"ACE", "[", "t", "]"}], "*", 
                    RowBox[{"NADH", "[", "t", "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"KiADHETOH", "*", "KiADHNADH", "*", "KmADHACE"}], 
                   ")"}]}]}], ")"}]}], ")"}]}], ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]AK", " ", "->", " ", 
          RowBox[{"133.333", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ADP", "^", "2"}], " ", "-", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"AMP", "[", "t", "]"}], "*", 
                RowBox[{"ATP", "[", "t", "]"}]}], ")"}], "/", "KeqAK"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]ALD", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmALD", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"F16P", "[", "t", "]"}], " ", "-", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"KeqTPI", "*", 
                  RowBox[{
                   RowBox[{"TRIO", "[", "t", "]"}], "^", "2"}]}], ")"}], "/", 
                
                RowBox[{"(", 
                 RowBox[{"KeqALD", "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "^", 
                   "2"}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmALDF16P", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"F16P", "[", "t", "]"}], "/", "KmALDF16P"}], " ", "+",
                " ", 
               RowBox[{
                RowBox[{"TRIO", "[", "t", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "*", 
                  "KmALDDHAP"}], ")"}]}], " ", "+", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"KeqTPI", "*", 
                  RowBox[{"TRIO", "[", "t", "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "*", 
                  "KmALDGAP"}], ")"}]}], " ", "+", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"KeqTPI", "*", 
                  RowBox[{"F16P", "[", "t", "]"}], "*", 
                  RowBox[{"TRIO", "[", "t", "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "*", 
                  "KmALDF16P", "*", "KmALDGAPi"}], ")"}]}], " ", "+", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"KeqTPI", "*", 
                  RowBox[{
                   RowBox[{"TRIO", "[", "t", "]"}], "^", "2"}]}], ")"}], "/", 
                
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "^", "2"}],
                   "*", "KmALDDHAP", "*", "KmALDGAP"}], ")"}]}]}], ")"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]ATP", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"KATPASE", "*", 
             RowBox[{
              RowBox[{"ATP", "[", "t", "]"}], "^", "nATP"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"KmATP", "^", "nATP"}], " ", "+", " ", 
             RowBox[{
              RowBox[{"ATP", "[", "t", "]"}], "^", "nATP"}]}], ")"}]}]}], ",",
          " ", 
         RowBox[{"v\[LetterSpace]ENO", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmENO", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"P2G", "[", "t", "]"}], " ", "-", " ", 
               RowBox[{
                RowBox[{"PEP", "[", "t", "]"}], "/", "KeqENO"}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmENOP2G", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"P2G", "[", "t", "]"}], "/", "KmENOP2G"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"PEP", "[", "t", "]"}], "/", "KmENOPEP"}]}], ")"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]G3PA", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmG3PA", "*", 
             RowBox[{"G3P", "[", "t", "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmG3PAG3P", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"Phi", "/", "KmG3PAPhi"}]}], ")"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"G3P", "[", "t", "]"}], "/", "KmG3PAG3P"}]}], ")"}]}],
             ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]G3PDH", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmG3PDH", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"NAD", "*", 
                    RowBox[{"G3P", "[", "t", "]"}]}], ")"}], "/", 
                  "KeqG3PDH"}], ")"}]}], " ", "+", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NADH", "[", "t", "]"}], "*", 
                  RowBox[{"TRIO", "[", "t", "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}]}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmG3PDHDHAP", "*", "KmG3PDHNADH", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"ADP", "/", "KmG3PDHADP"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"ATP", "[", "t", "]"}], "/", "KmG3PDHATP"}], " ", "+",
                " ", 
               RowBox[{
                RowBox[{"F16P", "[", "t", "]"}], "/", "KmG3PDHF16P"}]}], 
              ")"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"NAD", "/", "KmG3PDHNAD"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"NADH", "[", "t", "]"}], "/", "KmG3PDHNADH"}]}], 
              ")"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"G3P", "[", "t", "]"}], "/", "KmG3PDHG3P"}], " ", "+",
                " ", 
               RowBox[{
                RowBox[{"TRIO", "[", "t", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "*", 
                  "KmG3PDHDHAP"}], ")"}]}]}], ")"}]}], ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]GAPDH", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"VmGAPDHf", "*", 
                  RowBox[{"BPG", "[", "t", "]"}], "*", 
                  RowBox[{"NADH", "[", "t", "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"KeqGAPDH", "*", "KmGAPDHGAP", "*", "KmGAPDHNAD"}], 
                 ")"}]}], ")"}]}], " ", "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"KeqTPI", "*", "NAD", "*", "VmGAPDHf", "*", 
                RowBox[{"TRIO", "[", "t", "]"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "*", 
                "KmGAPDHGAP", "*", "KmGAPDHNAD"}], ")"}]}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"NAD", "/", "KmGAPDHNAD"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"NADH", "[", "t", "]"}], "/", "KmGAPDHNADH"}]}], 
              ")"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"BPG", "[", "t", "]"}], "/", "KmGAPDHBPG"}], " ", "+",
                " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"KeqTPI", "*", 
                  RowBox[{"TRIO", "[", "t", "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "+", " ", "KeqTPI"}], ")"}], "*", 
                  "KmGAPDHGAP"}], ")"}]}]}], ")"}]}], ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]GLK", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmGLK", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"ADP", "*", 
                    RowBox[{"G6P", "[", "t", "]"}]}], ")"}], "/", "KeqGLK"}], 
                 ")"}]}], " ", "+", " ", 
               RowBox[{
                RowBox[{"ATP", "[", "t", "]"}], "*", 
                RowBox[{"GLCi", "[", "t", "]"}]}]}], ")"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmGLKATP", "*", "KmGLKGLCi", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"ADP", "/", "KmGLKADP"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"ATP", "[", "t", "]"}], "/", "KmGLKATP"}]}], ")"}], 
             "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"G6P", "[", "t", "]"}], "/", "KmGLKG6P"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"GLCi", "[", "t", "]"}], "/", "KmGLKGLCi"}]}], 
              ")"}]}], ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]GLT", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmGLT", "*", 
             RowBox[{"(", 
              RowBox[{"GLCo", " ", "-", " ", 
               RowBox[{
                RowBox[{"GLCi", "[", "t", "]"}], "/", "KeqGLT"}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmGLTGLCo", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"GLCo", "/", "KmGLTGLCo"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"GLCi", "[", "t", "]"}], "/", "KmGLTGLCi"}], " ", "+",
                " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"alpha", "*", "GLCo", "*", 
                  RowBox[{"GLCi", "[", "t", "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"KmGLTGLCi", "*", "KmGLTGLCo"}], ")"}]}]}], ")"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]GLYCO", " ", "->", " ", 
          RowBox[{"KGLYCOGEN", "*", 
           RowBox[{"ATP", "[", "t", "]"}], "*", 
           RowBox[{"G6P", "[", "t", "]"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]PDC", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmPDC", "*", 
             RowBox[{
              RowBox[{"PYR", "[", "t", "]"}], "^", "nPDC"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"KmPDCPYR", "^", "nPDC"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"PYR", "[", "t", "]"}], "^", "nPDC"}], "/", 
                RowBox[{"KmPDCPYR", "^", "nPDC"}]}]}], ")"}]}], ")"}]}]}], 
         ",", " ", 
         RowBox[{"v\[LetterSpace]PFK", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"gR", "*", "VmPFK", "*", 
             RowBox[{"ATP", "[", "t", "]"}], "*", 
             RowBox[{"F6P", "[", "t", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"ATP", "[", "t", "]"}], "/", "KmPFKATP"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"F6P", "[", "t", "]"}], "/", "KmPFKF6P"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"gR", "*", 
                  RowBox[{"ATP", "[", "t", "]"}], "*", 
                  RowBox[{"F6P", "[", "t", "]"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"KmPFKATP", "*", "KmPFKF6P"}], ")"}]}]}], ")"}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmPFKATP", "*", "KmPFKF6P", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"L0", "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"CPFKAMP", "*", 
                    RowBox[{"AMP", "[", "t", "]"}]}], ")"}], "/", 
                    "KPFKAMP"}]}], ")"}], "^", "2"}], "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"CiPFKATP", "*", 
                    RowBox[{"ATP", "[", "t", "]"}]}], ")"}], "/", 
                    "KiPFKATP"}]}], ")"}], "^", "2"}], "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"CPFKATP", "*", 
                    RowBox[{"ATP", "[", "t", "]"}]}], ")"}], "/", 
                    "KmPFKATP"}]}], ")"}], "^", "2"}], "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"CPFKF26BP", "*", "F26BP"}], ")"}], "/", 
                    "KPFKF26BP"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"CPFKF16BP", "*", 
                    RowBox[{"F16P", "[", "t", "]"}]}], ")"}], "/", 
                    "KPFKF16BP"}]}], ")"}], "^", "2"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"AMP", "[", "t", "]"}], "/", "KPFKAMP"}]}], ")"}],
                    "^", "2"}], "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"ATP", "[", "t", "]"}], "/", "KiPFKATP"}]}], 
                    ")"}], "^", "2"}], "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{"F26BP", "/", "KPFKF26BP"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"F16P", "[", "t", "]"}], "/", "KPFKF16BP"}]}], 
                    ")"}], "^", "2"}]}], ")"}]}], " ", "+", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", " ", "+", " ", 
                  RowBox[{
                   RowBox[{"ATP", "[", "t", "]"}], "/", "KmPFKATP"}], " ", 
                  "+", " ", 
                  RowBox[{
                   RowBox[{"F6P", "[", "t", "]"}], "/", "KmPFKF6P"}], " ", 
                  "+", " ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"gR", "*", 
                    RowBox[{"ATP", "[", "t", "]"}], "*", 
                    RowBox[{"F6P", "[", "t", "]"}]}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"KmPFKATP", "*", "KmPFKF6P"}], ")"}]}]}], ")"}], 
                "^", "2"}]}], ")"}]}], ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]PGI", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmPGI", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"F6P", "[", "t", "]"}], "/", "KeqPGI"}], ")"}]}], 
               " ", "+", " ", 
               RowBox[{"G6P", "[", "t", "]"}]}], ")"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmPGIG6P", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"F6P", "[", "t", "]"}], "/", "KmPGIF6P"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"G6P", "[", "t", "]"}], "/", "KmPGIG6P"}]}], ")"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]PGK", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmPGK", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ADP", "*", "KeqPGK", "*", 
                RowBox[{"BPG", "[", "t", "]"}]}], " ", "-", " ", 
               RowBox[{
                RowBox[{"ATP", "[", "t", "]"}], "*", 
                RowBox[{"P3G", "[", "t", "]"}]}]}], ")"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmPGKATP", "*", "KmPGKP3G", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"ADP", "/", "KmPGKADP"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"ATP", "[", "t", "]"}], "/", "KmPGKATP"}]}], ")"}], 
             "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"BPG", "[", "t", "]"}], "/", "KmPGKBPG"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"P3G", "[", "t", "]"}], "/", "KmPGKP3G"}]}], ")"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]PGM", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmPGM", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"P2G", "[", "t", "]"}], "/", "KeqPGM"}], ")"}]}], 
               " ", "+", " ", 
               RowBox[{"P3G", "[", "t", "]"}]}], ")"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmPGMP3G", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"P2G", "[", "t", "]"}], "/", "KmPGMP2G"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"P3G", "[", "t", "]"}], "/", "KmPGMP3G"}]}], ")"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]PYK", " ", "->", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"VmPYK", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ADP", "*", 
                RowBox[{"PEP", "[", "t", "]"}]}], " ", "-", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"ATP", "[", "t", "]"}], "*", 
                  RowBox[{"PYR", "[", "t", "]"}]}], ")"}], "/", "KeqPYK"}]}], 
              ")"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"KmPYKADP", "*", "KmPYKPEP", "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{"ADP", "/", "KmPYKADP"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"ATP", "[", "t", "]"}], "/", "KmPYKATP"}]}], ")"}], 
             "*", 
             RowBox[{"(", 
              RowBox[{"1", " ", "+", " ", 
               RowBox[{
                RowBox[{"PEP", "[", "t", "]"}], "/", "KmPYKPEP"}], " ", "+", 
               " ", 
               RowBox[{
                RowBox[{"PYR", "[", "t", "]"}], "/", "KmPYKPYR"}]}], ")"}]}], 
            ")"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]SUC", " ", "->", " ", 
          RowBox[{"KSUCC", "*", 
           RowBox[{"ACE", "[", "t", "]"}]}]}], ",", " ", 
         RowBox[{"v\[LetterSpace]Treha", " ", "->", " ", 
          RowBox[{"KTREHALOSE", "*", 
           RowBox[{"ATP", "[", "t", "]"}], "*", 
           RowBox[{"G6P", "[", "t", "]"}]}]}]}], "\n", "}"}]}], ";", "\n", 
      "\n", 
      RowBox[{"parameters", " ", "=", " ", 
       RowBox[{"{", "\n", 
        RowBox[{
         RowBox[{"AXPsum", " ", "->", " ", "4.1"}], ",", " ", 
         RowBox[{"CPFKAMP", " ", "->", " ", "0.0845"}], ",", " ", 
         RowBox[{"CPFKATP", " ", "->", " ", "3.0"}], ",", " ", 
         RowBox[{"CPFKF16BP", " ", "->", " ", "0.397"}], ",", " ", 
         RowBox[{"CPFKF26BP", " ", "->", " ", "0.0174"}], ",", " ", 
         RowBox[{"CiPFKATP", " ", "->", " ", "100.0"}], ",", " ", 
         RowBox[{"ETOH", " ", "->", " ", "50.0"}], ",", " ", 
         RowBox[{"EXTERNAL", " ", "->", " ", "0.0"}], ",", " ", 
         RowBox[{"F26BP", " ", "->", " ", "0.02"}], ",", " ", 
         RowBox[{"GLCo", " ", "->", " ", "GLCo0"}], ",", " ", 
         RowBox[{"KATPASE", " ", "->", " ", "68.8096317495"}], ",", "  ", 
         RowBox[{"KPFKAMP", " ", "->", " ", "0.0995"}], ",", " ", 
         RowBox[{"KPFKF16BP", " ", "->", " ", "0.111"}], ",", " ", 
         RowBox[{"KPFKF26BP", " ", "->", " ", "0.000682"}], ",", " ", 
         RowBox[{"KSUCC", " ", "->", " ", "0"}], 
         RowBox[{"(*", 
          RowBox[{"GLYO", " ", "flux"}], "*)"}], ",", "  ", 
         RowBox[{"KeqADH", " ", "->", " ", "6.9*^-05"}], ",", " ", 
         RowBox[{"KeqAK", " ", "->", " ", "0.45"}], ",", " ", 
         RowBox[{"KeqALD", " ", "->", " ", "0.069"}], ",", " ", 
         RowBox[{"KeqENO", " ", "->", " ", "6.7"}], ",", " ", 
         RowBox[{"KeqG3PDH", " ", "->", " ", "4300.0"}], ",", " ", 
         RowBox[{"KeqGAPDH", " ", "->", " ", "0.0056263906277"}], ",", " ", 
         RowBox[{"KeqGLK", " ", "->", " ", "3800.0"}], ",", " ", 
         RowBox[{"KeqGLT", " ", "->", " ", "1.0"}], ",", " ", 
         RowBox[{"KeqPGI", " ", "->", " ", "0.314"}], ",", " ", 
         RowBox[{"KeqPGK", " ", "->", " ", "3200.0"}], ",", " ", 
         RowBox[{"KeqPGM", " ", "->", " ", "0.19"}], ",", " ", 
         RowBox[{"KeqPYK", " ", "->", " ", "6500.0"}], ",", " ", 
         RowBox[{"KeqTPI", " ", "->", " ", "0.045"}], ",", " ", 
         RowBox[{"KiADHACE", " ", "->", " ", "1.1"}], ",", " ", 
         RowBox[{"KiADHETOH", " ", "->", " ", "90.0"}], ",", " ", 
         RowBox[{"KiADHNAD", " ", "->", " ", "0.92"}], ",", " ", 
         RowBox[{"KiADHNADH", " ", "->", " ", "0.031"}], ",", " ", 
         RowBox[{"KiPFKATP", " ", "->", " ", "0.65"}], ",", " ", 
         RowBox[{"KmADHACE", " ", "->", " ", "1.11"}], ",", " ", 
         RowBox[{"KmADHETOH", " ", "->", " ", "17.0"}], ",", " ", 
         RowBox[{"KmADHNAD", " ", "->", " ", "0.17"}], ",", " ", 
         RowBox[{"KmADHNADH", " ", "->", " ", "0.11"}], ",", " ", 
         RowBox[{"KmALDDHAP", " ", "->", " ", "2.4"}], ",", " ", 
         RowBox[{"KmALDF16P", " ", "->", " ", "0.3"}], ",", " ", 
         RowBox[{"KmALDGAP", " ", "->", " ", "2.0"}], ",", " ", 
         RowBox[{"KmALDGAPi", " ", "->", " ", "10.0"}], ",", " ", 
         RowBox[{"KmATP", " ", "->", " ", "0.263159506089"}], ",", " ", 
         RowBox[{"KmENOP2G", " ", "->", " ", "0.04"}], ",", " ", 
         RowBox[{"KmENOPEP", " ", "->", " ", "0.5"}], ",", " ", 
         RowBox[{"KmG3PAG3P", " ", "->", " ", "4.21421727097"}], ",", " ", 
         RowBox[{"KmG3PAPhi", " ", "->", " ", "0.798017147071"}], ",", " ", 
         RowBox[{"KmG3PDHADP", " ", "->", " ", "1.60537927993"}], ",", " ", 
         RowBox[{"KmG3PDHATP", " ", "->", " ", "0.568725492711"}], ",", " ", 
         RowBox[{"KmG3PDHDHAP", " ", "->", " ", "0.4"}], ",", " ", 
         RowBox[{"KmG3PDHF16P", " ", "->", " ", "4.77110176421"}], ",", " ", 
         RowBox[{"KmG3PDHG3P", " ", "->", " ", "1.08899464691"}], ",", " ", 
         RowBox[{"KmG3PDHNAD", " ", "->", " ", "0.93"}], ",", " ", 
         RowBox[{"KmG3PDHNADH", " ", "->", " ", "0.023"}], ",", " ", 
         RowBox[{"KmGAPDHBPG", " ", "->", " ", "0.0098"}], ",", " ", 
         RowBox[{"KmGAPDHGAP", " ", "->", " ", "0.21"}], ",", " ", 
         RowBox[{"KmGAPDHNAD", " ", "->", " ", "0.09"}], ",", " ", 
         RowBox[{"KmGAPDHNADH", " ", "->", " ", "0.06"}], ",", " ", 
         RowBox[{"KmGLKADP", " ", "->", " ", "0.23"}], ",", " ", 
         RowBox[{"KmGLKATP", " ", "->", " ", "0.15"}], ",", " ", 
         RowBox[{"KmGLKG6P", " ", "->", " ", "30.0"}], ",", " ", 
         RowBox[{"KmGLKGLCi", " ", "->", " ", "0.08"}], ",", " ", 
         RowBox[{"KmGLTGLCi", " ", "->", " ", "1.1918"}], ",", " ", 
         RowBox[{"KmGLTGLCo", " ", "->", " ", "1.1918"}], ",", " ", 
         RowBox[{"KmPDCPYR", " ", "->", " ", "4.33"}], ",", " ", 
         RowBox[{"KmPFKATP", " ", "->", " ", "0.71"}], ",", " ", 
         RowBox[{"KmPFKF6P", " ", "->", " ", "0.1"}], ",", " ", 
         RowBox[{"KmPGIF6P", " ", "->", " ", "0.3"}], ",", " ", 
         RowBox[{"KmPGIG6P", " ", "->", " ", "1.4"}], ",", " ", 
         RowBox[{"KmPGKADP", " ", "->", " ", "0.2"}], ",", " ", 
         RowBox[{"KmPGKATP", " ", "->", " ", "0.3"}], ",", " ", 
         RowBox[{"KmPGKBPG", " ", "->", " ", "0.003"}], ",", " ", 
         RowBox[{"KmPGKP3G", " ", "->", " ", "0.53"}], ",", " ", 
         RowBox[{"KmPGMP2G", " ", "->", " ", "0.08"}], ",", " ", 
         RowBox[{"KmPGMP3G", " ", "->", " ", "1.2"}], ",", " ", 
         RowBox[{"KmPYKADP", " ", "->", " ", "0.53"}], ",", " ", 
         RowBox[{"KmPYKATP", " ", "->", " ", "1.5"}], ",", " ", 
         RowBox[{"KmPYKPEP", " ", "->", " ", "0.14"}], ",", " ", 
         RowBox[{"KmPYKPYR", " ", "->", " ", "21.0"}], ",", " ", 
         RowBox[{"L0", " ", "->", " ", "0.66"}], ",", " ", 
         RowBox[{"NADSUM", " ", "->", " ", "1.0"}], ",", " ", 
         RowBox[{"Phi", " ", "->", " ", "1.20470265921"}], ",", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"VmADH", " ", "->", " ", "834.684820559"}], ",", " ", 
         RowBox[{"VmALD", " ", "->", " ", "232.895576807"}], ",", " ", 
         RowBox[{"VmENO", " ", "->", " ", "462.025180445"}], ",", " ", 
         RowBox[{"VmG3PA", " ", "->", " ", "542.319235827"}], ",", " ", 
         RowBox[{"VmGAPDHf", " ", "->", " ", "419.560093466"}], ",", " ", 
         RowBox[{"VmGLK", " ", "->", " ", "329.958304618"}], ",", " ", 
         RowBox[{"VmGLT", " ", "->", " ", "136.494419254"}], ",", " ", 
         RowBox[{"VmPDC", " ", "->", " ", "223.978775021"}], ",", " ", 
         RowBox[{"VmPFK", " ", "->", " ", "183.616866462"}], ",", " ", 
         RowBox[{"VmPGI", " ", "->", " ", "467.754325004"}], ",", " ", 
         RowBox[{"VmPGK", " ", "->", " ", "1419.49486841"}], ",", " ", 
         RowBox[{"VmPGM", " ", "->", " ", "2762.32037661"}], ",", " ", 
         RowBox[{"VmPYK", " ", "->", " ", "1751.9596196"}], ",", " ", 
         RowBox[{"alpha", " ", "->", " ", "0.91"}], ",", " ", 
         RowBox[{"gR", " ", "->", " ", "5.12"}], ",", " ", 
         RowBox[{"nATP", " ", "->", " ", "1.0"}], ",", " ", 
         RowBox[{"nPDC", " ", "->", " ", "1.9"}], ",", " ", 
         RowBox[{"default\[LetterSpace]compartment", " ", "->", " ", "1.0"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"VmG3PDH", " ", "->", " ", "477.924460922"}], ",", 
         RowBox[{"KGLYCOGEN", " ", "->", " ", "1.68983106019"}], ",", " ", 
         RowBox[{"KTREHALOSE", " ", "->", " ", "0.754128480342"}]}], "\n", 
        "}"}]}], ";", "\n", "\n", 
      RowBox[{"assignments", " ", "=", " ", 
       RowBox[{"{", "\n", 
        RowBox[{
         RowBox[{"NAD", " ", "->", " ", 
          RowBox[{"NADSUM", " ", "-", " ", 
           RowBox[{"NADH", "[", "t", "]"}]}]}], ",", " ", 
         RowBox[{"ADP", " ", "->", " ", 
          RowBox[{"AXPsum", " ", "-", " ", 
           RowBox[{"AMP", "[", "t", "]"}], " ", "-", " ", 
           RowBox[{"ATP", "[", "t", "]"}]}]}]}], "\n", "}"}]}], ";", "\n", 
      "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Time", " ", "evolution"}], " ", "*)"}], "\n", 
      RowBox[{"odes", " ", "=", " ", 
       RowBox[{"{", "\n", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"AMP", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{"1.0", "*", "v\[LetterSpace]AK"}]}], " ", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"ATP", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]PGK"}], " ", "+", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PYK"}], " ", "+", 
           RowBox[{"1.0", "*", "v\[LetterSpace]AK"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PFK"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]ATP"}], " ", "-", 
           RowBox[{"4.0", "*", "v\[LetterSpace]SUC"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]GLYCO"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]GLK"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]Treha"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"BPG", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]GAPDH"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PGK"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"F16P", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]PFK"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]ALD"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"F6P", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]PGI"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PFK"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"G3P", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]G3PDH"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]G3PA"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"G6P", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]GLK"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PGI"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]GLYCO"}], " ", "-", 
           RowBox[{"2.0", "*", "v\[LetterSpace]Treha"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"GLCi", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]GLT"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]GLK"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"NADH", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]GAPDH"}], " ", "+", 
           RowBox[{"3.0", "*", "v\[LetterSpace]SUC"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]G3PDH"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]ADH"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"P2G", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]PGM"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]ENO"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"P3G", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]PGK"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PGM"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"PEP", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]ENO"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PYK"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"PYR", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"1.0", "*", "v\[LetterSpace]PYK"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]PDC"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"TRIO", "'"}], "[", "t", "]"}], " ", "==", " ", 
          RowBox[{
           RowBox[{"2.0", "*", "v\[LetterSpace]ALD"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]G3PDH"}], " ", "-", 
           RowBox[{"1.0", "*", "v\[LetterSpace]GAPDH"}]}]}]}], "\n", "}"}]}], 
      ";", "\n", 
      RowBox[{"timeCourse", " ", "=", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"odes", ",", " ", "initialValues"}], "]"}], "//.", 
            "rateEquations"}], "//.", "assignments"}], "//.", "parameters"}], 
         ",", " ", "variables", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", " ", "maxTime"}], "}"}]}], "]"}]}],
       ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Plot", " ", "the", " ", "time", " ", "evolution", " ", "of", " ", 
        "the", " ", "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"amp", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"AMP", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"atp", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"ATP", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bpg", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"BPG", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f16p", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"F16P", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f6p", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"F6P", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g3p", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"G3P", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g6p", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"G6P", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"glci", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"GLCi", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nadh", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"NADH", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p2g", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"P2G", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p3g", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"P3G", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pep", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"PEP", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pyr", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"PYR", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"trio", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"TRIO", "[", "t", "]"}], "/.", "parameters"}], "/.", 
        "timeCourse"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"adp", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"AXPsum", " ", "-", " ", 
         RowBox[{"amp", "[", "t", "]"}], " ", "-", " ", 
         RowBox[{"atp", "[", "t", "]"}]}], "/.", "parameters"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nad", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"NADSUM", " ", "-", " ", 
         RowBox[{"nadh", "[", "t", "]"}]}], "/.", "parameters"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"variables", ",", "parameters", ",", "timeCourse"}], "}"}]}], 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"detectPhaseShift2", "[", 
      RowBox[{"h_", ",", "f_", ",", "t0_", ",", "w_"}], "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"h", " ", "is", " ", "input"}], ",", " ", 
        RowBox[{"f", " ", "is", " ", 
         RowBox[{"output", ".", " ", "We"}], " ", "shall", " ", "compute", 
         " ", "the", " ", "phase", " ", "shfit", " ", "of", " ", "f", " ", 
         "with", " ", "respect", " ", "to", " ", "h"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"d", "=", "0.01"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "number", " ", "of", " ", "period", " ", "for", " ", "averaging"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Time0", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"d", " ", 
             RowBox[{"Pi", "/", "w"}], "*", " ", "#1"}], "+", "t0"}], "&"}], 
          ",", "400"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"hData", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"h", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"hCosData", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"h", "[", 
           RowBox[{"t", "+", 
            RowBox[{"Pi", "/", 
             RowBox[{"(", 
              RowBox[{"2", " ", "w"}], ")"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fData", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"f", "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Hshift", "=", 
        RowBox[{"Mean", "[", "hData", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Fshift", "=", 
        RowBox[{"Mean", "[", "fData", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Famp", "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"fData", "-", "Fshift"}], ")"}], "^", "2"}], "]"}], 
          "d"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Hamp", "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"hData", "-", "Hshift"}], ")"}], "^", "2"}], "]"}], 
          "d"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"CosTheta", "=", 
        RowBox[{"d", " ", 
         RowBox[{"Total", "[", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"hData", "-", "Hshift"}], ")"}], " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"fData", "-", "Fshift"}], ")"}], " ", "/", 
            RowBox[{"(", 
             RowBox[{"Famp", " ", "Hamp"}], ")"}]}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"SinTheta", "=", 
        RowBox[{"d", " ", 
         RowBox[{"Total", "[", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"hCosData", "-", "Hshift"}], ")"}], " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"fData", "-", "Fshift"}], ")"}], " ", "/", 
            RowBox[{"(", 
             RowBox[{"Famp", " ", "Hamp"}], ")"}]}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"CosTheta", "\[GreaterEqual]", "0"}], ",", " ", 
           RowBox[{"theta", "=", 
            RowBox[{"ArcSin", "[", "SinTheta", "]"}]}], ",", 
           RowBox[{"theta", "=", 
            RowBox[{"Pi", "-", 
             RowBox[{"ArcSin", "[", "SinTheta", "]"}]}]}]}], "]"}], ";"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SinTheta", "\[GreaterEqual]", "0"}], ",", " ", 
         RowBox[{"theta", "=", 
          RowBox[{"ArcCos", "[", "CosTheta", "]"}]}], ",", 
         RowBox[{"theta", "=", 
          RowBox[{"-", 
           RowBox[{"ArcCos", "[", "CosTheta", "]"}]}]}]}], "]"}], ";", 
       RowBox[{"{", 
        RowBox[{
        "Hshift", ",", "Fshift", ",", "Hamp", ",", "Famp", ",", "SinTheta", 
         ",", "CosTheta", ",", "theta"}], "}"}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AnalyzeAdaptation", "[", 
      RowBox[{"var_", ",", "t0_", ",", "DeltaT_"}], "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dt", "=", "0.4"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Time0", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"0.05", "dt", " ", "#1"}], " ", "+", "t0", "-", "2"}], 
           "&"}], ",", "20"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Time1", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"0.05", " ", "dt", " ", "#1"}], " ", "+", "t0"}], "&"}], 
          ",", "40"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Time2", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"0.05", " ", "dt", " ", "#1"}], " ", "+", "t0", "+", 
            "DeltaT"}], "&"}], ",", "20"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Time3", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"0.05", " ", "dt", " ", "#1"}], " ", "+", "t0", "+", 
            RowBox[{"2", " ", "DeltaT"}]}], "&"}], ",", "20"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"MeanVar", "=", 
        RowBox[{"Mean", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"var", "[", "t", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"var1", "=", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"var", "[", "t", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "Time1"}], "}"}]}], "]"}], "]"}], "-", 
         "MeanVar"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"var2", "=", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"var", "[", "t", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "Time2"}], "}"}]}], "]"}], "]"}], "-", 
         "MeanVar"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"var3", "=", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"var", "[", "t", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "Time3"}], "}"}]}], "]"}], "]"}], "-", 
         "MeanVar"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"max1", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", "var1", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"max2", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", "var2", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"min2", "=", 
        RowBox[{"Min", "[", 
         RowBox[{"Abs", "[", "var2", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"max3", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", "var3", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"min3", "=", 
        RowBox[{"Min", "[", 
         RowBox[{"Abs", "[", "var3", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"adaptError", "=", 
        RowBox[{"max3", "/", "max1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"osciIndex", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"max3", "-", "min3"}], ")"}], "/", "max2"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"adaptError", ",", "osciIndex"}], "}"}]}], ")"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.769040136241146*^9, 3.7690401384026213`*^9}, {
  3.769040301679302*^9, 3.769040340802766*^9}, {3.769083201782527*^9, 
  3.769083226502432*^9}, {3.76908326443084*^9, 3.769083356783627*^9}, {
  3.7690888573818827`*^9, 3.7690888784282427`*^9}, {3.7690903795843897`*^9, 
  3.769090382882637*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Step", " ", "perturbation", " ", "of", " ", "ACE", " ", "level"}], ",", 
    " ", 
    RowBox[{
    "and", " ", "the", " ", "response", " ", "of", " ", "mitobolite", " ", 
     "concentration"}]}], "*)"}], "\[IndentingNewLine]", "\t", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"w0", "=", "21"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t0", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTime", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hill", "=", "2000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"glco0", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"aceAmp0", "=", "0.16"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ace", "[", "t_", "]"}], ":=", 
     RowBox[{"aceAmp0", "*", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"0.02", "*", 
         RowBox[{
          RowBox[{"t", "^", "hill"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"t0", "^", "hill"}], "+", 
            RowBox[{"t", "^", "hill"}]}], ")"}]}]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"ace", "[", "t_", "]"}], ":=", 
      RowBox[{"0.05", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"0.02", "*", 
          RowBox[{"Sin", "[", 
           RowBox[{"w0", " ", "t"}], "]"}]}]}], ")"}]}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"output", "=", 
     RowBox[{"glycolysisACE", "[", 
      RowBox[{"ace", ",", "maxTime", ",", "glco0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Time0", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"0.01", "  ", "#1"}], " ", "+", "t0", "-", "2"}], "&"}], ",",
        "100"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ace1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ace", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"amp1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"amp", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"atp1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"atp", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bpg1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"bpg", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f16p1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"f16p", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f6p1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"f6p", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g3p1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"g3p", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g6p1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"g6p", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"glci1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"glci", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nadh1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"nadh", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2g1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"p2g", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3g1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"p3g", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pep1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"pep", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyr1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"pyr", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trio1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"trio", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"adp1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"adp", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nad1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"nad", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"rates", "//.", "rateEquations"}], "//.", "assignments"}], "//.",
          "parameters"}], "//.", "timeCourse"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"{", "20", "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results2", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Flatten", "[", "results", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"Reverse", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<GLT\>\"", ",", "\"\<GLK\>\"", ",", "\"\<GLYCO\>\"", ",", 
            "\"\<Treha\>\"", ",", "\[IndentingNewLine]", "\"\<PGI\>\"", ",", 
            " ", "\"\<PFK\>\"", ",", "\"\<ALD\>\"", ",", "\"\<G3PDH\>\"", ",",
             " ", "\"\<G3PP\>\"", ",", "\[IndentingNewLine]", "\"\<GAPDH\>\"",
             ",", " ", "\"\<PGK\>\"", ",", " ", "\"\<PGM\>\"", ",", "  ", 
            "\"\<ENO\>\"", ",", "\"\<PYK\>\"", ",", "\[IndentingNewLine]", 
            "\"\<PDC\>\"", ",", " ", "\"\<SUC\>\"", ",", " ", "\"\<ADH\>\"", 
            ",", "   ", "\"\<ATPase\>\"", ",", "\"\<AK\>\""}], "}"}], ",", 
          "results2"}], "}"}], "]"}], ",", "Last"}], "]"}], "]"}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"variables", "//.", "assignments"}], "//.", "parameters"}], "//.",
         "timeCourse"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"{", "20", "}"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"results2", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Flatten", "[", "results", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"Reverse", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", " ", 
           RowBox[{
           "\"\<AMP\>\"", ",", " ", "\"\<ATP\>\"", ",", " ", "\"\<BPG\>\"", 
            ",", " ", "\"\<F16P\>\"", ",", " ", "\"\<F6P\>\"", ",", 
            "\"\< G3P\>\"", ",", " ", "\"\<G6P\>\"", ",", " ", "\"\<GLCi\>\"",
             ",", "\"\<NADH\>\"", ",", " ", "\"\<P2G\>\"", ",", " ", 
            "\"\<P3G\>\"", ",", " ", "\"\<PEP\>\"", ",", " ", "\"\<PYR\>\"", 
            ",", " ", "\"\<TRIO\>\""}], "}"}], ",", "results2"}], "}"}], 
        "]"}], ",", "Last"}], "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ace", "[", "t", "]"}], "-", "ace1"}], ")"}], ",", "  ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nadh", "[", "t", "]"}], "-", "nadh1"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"atp", "[", "t", "]"}], "-", "atp1"}], ")"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"t0", "-", "2"}], ",", "maxTime"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[CapitalDelta]ACE\>\"", ",", "\"\<\[CapitalDelta]NADH\>\"", 
          ",", "\"\<\[CapitalDelta]ATP\>\""}], "}"}]}]}], "]"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ace", "[", "t", "]"}], "-", "ace1"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"amp", "[", "t", "]"}], "-", "amp1"}], ")"}], ",", "  ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"atp", "[", "t", "]"}], "-", "atp1"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"bpg", "[", "t", "]"}], "-", "bpg1"}], ")"}], ",", 
         RowBox[{"0.1", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"f16p", "[", "t", "]"}], "-", "f16p1"}], ")"}]}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f6p", "[", "t", "]"}], "-", "f6p1"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g3p", "[", "t", "]"}], "-", "g3p1"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g6p", "[", "t", "]"}], "-", "g6p1"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"glci", "[", "t", "]"}], "-", "glci1"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nadh", "[", "t", "]"}], "-", "nadh1"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"p2g", "[", "t", "]"}], "-", "p2g1"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"p3g", "[", "t", "]"}], "-", "p3g1"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pep", "[", "t", "]"}], "-", "pep1"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pyr", "[", "t", "]"}], "-", "pyr1"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"trio", "[", "t", "]"}], "-", "trio1"}], ")"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"t0", "-", "2"}], ",", "maxTime"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<ACE\>\"", ",", "\"\<AMP\>\"", ",", "\"\<ATP\>\"", ",", 
          "\"\<BPG\>\"", ",", "\"\<F16P\>\"", ",", "\"\<F6P\>\"", ",", 
          "\"\<G3P\>\"", ",", "\"\<G6P\>\"", ",", "\"\<GLCi\>\"", ",", 
          "\"\<NADH\>\"", ",", "\"\<P2G\>\"", ",", "\"\<P3G\>\"", ",", 
          "\"\<PEP\>\"", ",", "\"\<PYR\>\"", ",", "\"\<TRIO\>\""}], "}"}]}]}],
       "]"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", 
       RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Purple", ",", 
       RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Darker", "[", "Green", "]"}], ",", 
       RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"glci", "[", "t", "]"}], "-", "glci1"}], ")"}], "/", 
        "glci1"}], ",", "  ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g6p", "[", "t", "]"}], "-", "g6p1"}], ")"}], "/", "g6p1"}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"f6p", "[", "t", "]"}], "-", "f6p1"}], ")"}], "/", "f6p1"}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"atp", "[", "t", "]"}], "-", "atp1"}], ")"}], "/", "atp1"}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"f16p", "[", "t", "]"}], "-", "f16p1"}], ")"}], "/", 
        "f16p1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"t0", "-", "1"}], ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Delta]GLCi\>\"", ",", "\"\<\[Delta]G6P\>\"", ",", 
        "\"\<\[Delta]F6P\>\"", ",", "\"\<\[Delta]ATP\>\"", ",", 
        "\"\<\[Delta]F16P\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Lighter", "[", "Black", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Orange", ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"10", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"trio", "[", "t", "]"}], "-", "trio1"}], ")"}], "/", 
         "trio1"}]}], ",", 
       RowBox[{"10", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nad", "[", "t", "]"}], "-", "nad1"}], ")"}], "/", 
         "nad1"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"adp", "[", "t", "]"}], "-", "adp1"}], ")"}], "/", "adp1"}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bpg", "[", "t", "]"}], "-", "bpg1"}], ")"}], "/", "bpg1"}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p3g", "[", "t", "]"}], "-", "p3g1"}], ")"}], "/", 
        "p3g1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"t0", "-", "1"}], ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Lighter", "[", "Black", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Orange", ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.065"}], ",", "0.1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<10 \[Delta]TRIO\>\"", ",", "\"\<10 \[Delta]NAD\>\"", ",", 
        "\"\<\[Delta]ADP\>\"", ",", "\"\<\[Delta]BPG\>\"", ",", 
        "\"\<\[Delta]P3G\>\""}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"trio", "[", "t", "]"}], "-", "trio1"}], ")"}], "/", 
         "trio1"}], ",", "  ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nad", "[", "t", "]"}], "-", "nad1"}], ")"}], "/", 
         "nad1"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"bpg", "[", "t", "]"}], "-", "bpg1"}], ")"}], "/", 
         "bpg1"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"adp", "[", "t", "]"}], "-", "adp1"}], ")"}], "/", 
         "adp1"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"p3g", "[", "t", "]"}], "-", "p3g1"}], ")"}], "/", 
         "p3g1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "t0", ",", 
        RowBox[{"t0", "+", 
         RowBox[{"4", " ", 
          RowBox[{"Pi", "/", "w0"}]}]}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<TRIO\>\"", ",", "\"\<NAD\>\"", ",", "\"\<BPG\>\"", ",", 
         "\"\<ADP\>\"", ",", "\"\<ATP\>\"", ",", "\"\<P3G\>\""}], "}"}]}]}], 
     "]"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bpg", "[", "t", "]"}], "-", "bpg1"}], ")"}], "/", "bpg1"}],
        ",", "  ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p3g", "[", "t", "]"}], "-", "p3g1"}], ")"}], "/", "p3g1"}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p2g", "[", "t", "]"}], "-", "p2g1"}], ")"}], "/", "p2g1"}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pep", "[", "t", "]"}], "-", "pep1"}], ")"}], "/", "pep1"}],
        ",", 
       RowBox[{"5", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pyr", "[", "t", "]"}], "-", "pyr1"}], ")"}], "/", 
         "pyr1"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"t0", "-", "1"}], ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Lighter", "[", "Black", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Orange", ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Delta]BPG\>\"", ",", "\"\<\[Delta]P3G\>\"", ",", 
        "\"\<\[Delta]P2G\>\"", ",", "\"\<\[Delta]PEP\>\"", ",", 
        "\"\<5 \[Delta]PYR\>\""}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ace", "[", "t", "]"}], "-", "ace1"}], ")"}], "/", "ace1"}],
        ",", "  ", 
       RowBox[{"5", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pyr", "[", "t", "]"}], "-", "pyr1"}], ")"}], "/", 
         "pyr1"}]}], ",", 
       RowBox[{"5", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nad", "[", "t", "]"}], "-", "nad1"}], ")"}], "/", 
         "nad1"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"atp", "[", "t", "]"}], "-", "atp1"}], ")"}], "/", 
        "atp1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"t0", "-", "1"}], ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Delta]ACE\>\"", ",", "\"\<5 \[Delta]PYR\>\"", ",", 
        "\"\<5 \[Delta]NAD\>\"", ",", "\"\<\[Delta]ATP\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Lighter", "[", "Black", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Orange", ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.769040376881023*^9, {3.769040414871957*^9, 3.7690404273167067`*^9}, {
   3.769040755666893*^9, 3.769040797657557*^9}, {3.7690411083351803`*^9, 
   3.7690411382691517`*^9}, {3.769041192862194*^9, 3.7690412161705313`*^9}, {
   3.769075296523608*^9, 3.769075297482812*^9}, {3.769075340231818*^9, 
   3.769075466623042*^9}, {3.76907554045084*^9, 3.7690755612108107`*^9}, {
   3.769075619512925*^9, 3.769075691379223*^9}, {3.769076038291937*^9, 
   3.769076078535842*^9}, {3.7690761958815107`*^9, 3.769076227292985*^9}, {
   3.769076284016923*^9, 3.769076288144259*^9}, {3.769076321017716*^9, 
   3.7690763212370443`*^9}, {3.7690763693509197`*^9, 
   3.7690763706372747`*^9}, {3.769076421254754*^9, 3.769076421500464*^9}, {
   3.769083526124749*^9, 3.769083526487102*^9}, {3.769083563876885*^9, 
   3.769083564435648*^9}, {3.769083724133851*^9, 3.769083724648629*^9}, {
   3.7690838066811037`*^9, 3.76908381011769*^9}, {3.769083862593856*^9, 
   3.76908387621566*^9}, {3.76908393327907*^9, 3.7690839340911427`*^9}, {
   3.769083975292219*^9, 3.769083975577224*^9}, {3.76908402573834*^9, 
   3.769084041689405*^9}, {3.76908410497618*^9, 3.7690841051126833`*^9}, {
   3.769084220696746*^9, 3.769084224807452*^9}, {3.76908440146916*^9, 
   3.769084424057692*^9}, {3.769084477141247*^9, 3.7690844773021107`*^9}, {
   3.769092924799354*^9, 3.7690929287729807`*^9}, 3.769093013462927*^9, {
   3.769095184711143*^9, 3.769095201824314*^9}, {3.7690952327563047`*^9, 
   3.769095233032773*^9}, {3.7690952851673317`*^9, 3.7690952853910007`*^9}, {
   3.769095358541737*^9, 3.7690953590325413`*^9}, {3.7691100971565323`*^9, 
   3.7691101673152237`*^9}, {3.7691105485234222`*^9, 3.769110550567535*^9}, {
   3.769110948119026*^9, 3.769110969898137*^9}, 3.769111005852983*^9, {
   3.769111162885169*^9, 3.769111191699136*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"PDC\"\>", "117.22239007363207`"},
     {"\<\"PYK\"\>", "117.22239007363098`"},
     {"\<\"PGM\"\>", "117.22239007363095`"},
     {"\<\"ENO\"\>", "117.22239007363095`"},
     {"\<\"GAPDH\"\>", "117.22239007363082`"},
     {"\<\"PGK\"\>", "117.22239007363068`"},
     {"\<\"ADH\"\>", "107.58213135848337`"},
     {"\<\"GLT\"\>", "81.0336211716266`"},
     {"\<\"GLK\"\>", "81.0336211716266`"},
     {"\<\"ALD\"\>", "68.22998730593078`"},
     {"\<\"PFK\"\>", "68.2299873059279`"},
     {"\<\"PGI\"\>", "68.22998730592761`"},
     {"\<\"ATPase\"\>", "62.60027760701568`"},
     {"\<\"G3PDH\"\>", "19.23758453823152`"},
     {"\<\"G3PP\"\>", "19.2375845382315`"},
     {"\<\"GLYCO\"\>", "6.765285398131906`"},
     {"\<\"SUC\"\>", "3.1991086076947206`"},
     {"\<\"Treha\"\>", "3.019174233783757`"},
     {"\<\"AK\"\>", "5.92117466169384`*^-13"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.769040408088896*^9, 3.7690404546225567`*^9, {3.7690411153136044`*^9, 
   3.769041139874069*^9}, {3.769041205225243*^9, 3.769041223432848*^9}, {
   3.769075321636544*^9, 3.769075467746912*^9}, {3.769075542817019*^9, 
   3.7690755658512583`*^9}, {3.769075624718412*^9, 3.7690756924173098`*^9}, {
   3.769076011512532*^9, 3.769076079736052*^9}, {3.769076197763465*^9, 
   3.7690762283117647`*^9}, 3.7690762897322702`*^9, 3.769076322596464*^9, 
   3.769076371758964*^9, 3.769076422599306*^9, 3.7690833674365263`*^9, 
   3.769083527767881*^9, 3.769083565634512*^9, 3.769083726292507*^9, 
   3.769083811385626*^9, {3.769083866264555*^9, 3.769083877469214*^9}, 
   3.769083935192078*^9, 3.7690839766403503`*^9, {3.769084031869996*^9, 
   3.769084043178914*^9}, 3.7690841111645308`*^9, 3.769084225853574*^9, {
   3.7690844033492193`*^9, 3.76908442564826*^9}, 3.76908447840904*^9, 
   3.769085784642898*^9, 3.7690915822076902`*^9, 3.769092929991523*^9, 
   3.769093339855731*^9, 3.769093412685602*^9, 3.769095203263855*^9, 
   3.769095234207341*^9, 3.7690952871846123`*^9, 3.769095360175591*^9, {
   3.769110102598781*^9, 3.7691101114603977`*^9}, {3.769110144263361*^9, 
   3.769110168502372*^9}, 3.769110552028315*^9, {3.769110950953999*^9, 
   3.7691109710806313`*^9}, 3.769111007558845*^9, {3.76911116499158*^9, 
   3.769111193003745*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"F16P\"\>", "4.934464672855057`"},
     {"\<\"PYR\"\>", "4.548467686859041`"},
     {"\<\"ATP\"\>", "2.6530711178772366`"},
     {"\<\"TRIO\"\>", "2.3490324495875274`"},
     {"\<\"G6P\"\>", "1.5090163387321849`"},
     {"\<\" G3P\"\>", "0.4118254078801716`"},
     {"\<\"F6P\"\>", "0.28061233992131024`"},
     {"\<\"AMP\"\>", "0.24502207431154402`"},
     {"\<\"P3G\"\>", "0.18111549261420057`"},
     {"\<\"GLCi\"\>", "0.04203572434701785`"},
     {"\<\"PEP\"\>", "0.03154163980270514`"},
     {"\<\"NADH\"\>", "0.028085675728110836`"},
     {"\<\"P2G\"\>", "0.020764814240394582`"},
     {"\<\"BPG\"\>", "0.00020118014872584937`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.769040408088896*^9, 3.7690404546225567`*^9, {3.7690411153136044`*^9, 
   3.769041139874069*^9}, {3.769041205225243*^9, 3.769041223432848*^9}, {
   3.769075321636544*^9, 3.769075467746912*^9}, {3.769075542817019*^9, 
   3.7690755658512583`*^9}, {3.769075624718412*^9, 3.7690756924173098`*^9}, {
   3.769076011512532*^9, 3.769076079736052*^9}, {3.769076197763465*^9, 
   3.7690762283117647`*^9}, 3.7690762897322702`*^9, 3.769076322596464*^9, 
   3.769076371758964*^9, 3.769076422599306*^9, 3.7690833674365263`*^9, 
   3.769083527767881*^9, 3.769083565634512*^9, 3.769083726292507*^9, 
   3.769083811385626*^9, {3.769083866264555*^9, 3.769083877469214*^9}, 
   3.769083935192078*^9, 3.7690839766403503`*^9, {3.769084031869996*^9, 
   3.769084043178914*^9}, 3.7690841111645308`*^9, 3.769084225853574*^9, {
   3.7690844033492193`*^9, 3.76908442564826*^9}, 3.76908447840904*^9, 
   3.769085784642898*^9, 3.7690915822076902`*^9, 3.769092929991523*^9, 
   3.769093339855731*^9, 3.769093412685602*^9, 3.769095203263855*^9, 
   3.769095234207341*^9, 3.7690952871846123`*^9, 3.769095360175591*^9, {
   3.769110102598781*^9, 3.7691101114603977`*^9}, {3.769110144263361*^9, 
   3.769110168502372*^9}, 3.769110552028315*^9, {3.769110950953999*^9, 
   3.7691109710806313`*^9}, 3.769111007558845*^9, {3.76911116499158*^9, 
   3.769111193015818*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1: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
FnRrpb+gnc/rd+s0iwUte0JU6fnZmtVUsl6RBUNSq47SFlsjXzRHmQVzgxmP
aTe9O5Bfu5IFdm3HJen5O3isIydMlQUZnKtOtAcbT6SPa7AgLsGhjfZFdv+F
Ii0WaBTv5aPn2XquforXKhZ4awRp0BbMTzrDWI3298rZRvvuurH4Pl0WVKdY
nqAdMLT21Hl9FuTNKyuiTcRcPmFnyAInfsXHtBMe2kc8ABY01TgI0/dH84vu
3mhTFuxbYWBG+2+/u+76dSzYFrEyhPaq0cFkIUsW+CdL5NL2m/L92mLFAjfx
109pX+H/tumUHQuki4N46Pupb1Fo4QZHFiRJ3NOkvX9JVZeSM8qvqoQ17SVS
f+cKb2HBQd4SP9qW+PGdrdtYMFC65DrtY2oL7sV6sOBJtukI7bv6iTIb2SzY
HBDCoO/Dr+ZLDyz0YQGOvbWlrWib/uLRbhbYtN05RNtjK1Mzfg8LYvdrZtO+
4H319KZ9LLBVOVZP+0mg6siiUBbcmnnziva8w7fXPT7IgtTx8O+0BwsfVT45
xQIRMg+j7+OGzvfK7aksuLpn3zLamp/H39tmseBzO8VDO2vOTMazqyw43KM8
u56otJCT/Q0WtH8auEU7QkNS9HkFqo+nSCTtbq3eAo1aVN9XWzbR1tbJMk1o
YkHa3KOStD/pq+zf8IIFtYdzsunzmxpNiF7tY0FKZ/0u2hlQWSj4ngXnJ/l1
aE+ZRJjtHGFBx7ZJQdp2Zuav731jAeO8ch9dn6pN28xXiypAanjcKdqEU3Dx
NRUFuFATtof2BaWm91meChCWeHA7beG/S2XPpSnA4jc922jb+CefVe9UAM4E
tZF2ymux+a3iiuBhLGNI+4DIjY+7NyhCsfikOm03Y6vmxZGK8GONjiJtycVS
7x1rFEH9rDFO+1HvAO+l34og98iXSfv1/MPY41VK0M/Wx2iPr/pv7cweJVgk
o0bSzsI6nmldVYL38keUaNuLnXbf9UYJTP/8UKPdmRasuE5aGYK/NuvQ3kJu
m8CclME3axlFO3wvmzU/QRnu4r9m+zuL6+c62qQM0+4xlrTlvM1TKmaUoXmX
jS3tTDHZJ5HaK+GivJQj7S/OjLXfA1YC91qjC224TFSzi1bChS5/V9pqVzdk
vn63Ev6UZs5a7kZAhNNyFXh5q27WbzfXZYQ4qgB3Wf+sc3+Jc1POqkBf4NSs
62a0+tPaVOCS9fyttN/wOczJnq8KZ74umXV607mz10EViPrls3aJ7ZKvDlGF
X9YrZj00unZ0zy1VcNaVm/V+q7IK/LMq+L2UnXVHBSMkQFwN2CrSsx62+CS6
SVUNGK+Xzfp6zAXVzPVqoJQhMevgh+s2fvFUg7IpsVnnuMRHJ0WqQfxh0Vk/
G3rWuPqyGjwx+vfcpkuh/E2VGkxk/vv+cfPh/JOdamAO//YrE/StiJxUg1X1
2L/zmDo1hy9Rh/2+Sv/ie2sfd0hNHZQU1Wa94IiN7UFLdQgr1Jz1lzbt1DEv
dYj6b9W/96Wl3rpHqkPvTZ1ZM+4krSMuq8OCstWz9t+8uGS4Wh3OqerOWtg2
taW0Wx3CXf65YBM+eGhSHcb9//n6BXO51CUa4JL3z+UDXi5lGhpQrq83612v
A5aaW2uAuJv+rFd0h3Y8362B/n9qOGum9llzTrQGfJOlZk0mFFVM52hAsg7M
OknX1eJdnQacLv5n3ncLuh+80QCJw/9cPfJwRem0Bpg///d92OQpz4xlmvCl
xWjWgyWaKtOamrA89N9+1pyeSWcrTfD/9i+eH/sdG+/GaMJdu3/nl+rP3R5w
RROsC/7ly9Bi4g9Wpwk5mPa/fCxadkisXxN2lf7Lb2+7/vTfv5pgma8x6/8D
oCKEjw==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1: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
0ys=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0]], 
        LineBox[CompressedData["
1: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
mJr65/8DN7H3kA==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {10., 0}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{9, 20}, {-0.0011858337979845355`, 
       0.0031780571207822815`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Delta]GLCi\"", "\"\[Delta]G6P\"", "\"\[Delta]F6P\"", 
       "\"\[Delta]ATP\"", "\"\[Delta]F16P\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1/3, 1/3, 1/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.769040408088896*^9, 3.7690404546225567`*^9, {3.7690411153136044`*^9, 
   3.769041139874069*^9}, {3.769041205225243*^9, 3.769041223432848*^9}, {
   3.769075321636544*^9, 3.769075467746912*^9}, {3.769075542817019*^9, 
   3.7690755658512583`*^9}, {3.769075624718412*^9, 3.7690756924173098`*^9}, {
   3.769076011512532*^9, 3.769076079736052*^9}, {3.769076197763465*^9, 
   3.7690762283117647`*^9}, 3.7690762897322702`*^9, 3.769076322596464*^9, 
   3.769076371758964*^9, 3.769076422599306*^9, 3.7690833674365263`*^9, 
   3.769083527767881*^9, 3.769083565634512*^9, 3.769083726292507*^9, 
   3.769083811385626*^9, {3.769083866264555*^9, 3.769083877469214*^9}, 
   3.769083935192078*^9, 3.7690839766403503`*^9, {3.769084031869996*^9, 
   3.769084043178914*^9}, 3.7690841111645308`*^9, 3.769084225853574*^9, {
   3.7690844033492193`*^9, 3.76908442564826*^9}, 3.76908447840904*^9, 
   3.769085784642898*^9, 3.7690915822076902`*^9, 3.769092929991523*^9, 
   3.769093339855731*^9, 3.769093412685602*^9, 3.769095203263855*^9, 
   3.769095234207341*^9, 3.7690952871846123`*^9, 3.769095360175591*^9, {
   3.769110102598781*^9, 3.7691101114603977`*^9}, {3.769110144263361*^9, 
   3.769110168502372*^9}, 3.769110552028315*^9, {3.769110950953999*^9, 
   3.7691109710806313`*^9}, 3.769111007558845*^9, {3.76911116499158*^9, 
   3.769111193320323*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxF1nc8le//OHBFC5kllWTc4yR7heJ+UckqI4mWvUo4ZI+UpmhKJRKpVFbS
NJKISipkJ5lFlJGs+F2Xft/P+x8ez8e5zzVe6z6SDl4WzrM5ODgS0B/832DH
iXkcHFJwrGLompaMsHbqwbfr9NdIwdxtq2N3Gy/W5rjJ5xPt+Z/lXcM7Au/+
512r+q2cu/6zTHq4io249P/W+yPPL7DZ6j8fpm+Xczr9Z14J5tAztjTM2ZB/
Z8kCQe040TpN9sH/LCHoNUjH/Oe7C+bda4n/z6qzkxwvpv3noKme595Z/7lw
XF3M5NF/fj9mODT7yf9ZUrt1dNebp0+lYcTxiJrmvI3ag3+8kr3zpCG7aO2+
qTU7tDn/HA6kC6TBdzgjpoN20140ctG0pVAa/JpMQKTLR5v6nUZdLJKGwYg9
uW/Lg7XXDOf9NS6WhvehylJ/8g5pGwxV1swukQa1u83l6duPacP2t59bSqXh
nlFPl1vAKW2NvLKuZ2XSML/wmC3b8Ky24sqSn3GvpaF5iO/ti+fntVmRRaM+
b//vfBe1JbrzZ5m+Q58bbhvKT76kLWr8lHv1e2kw0C15J6iVrC2Q9VB43kdp
CHld/EJ5YZb2POEcsfYqaajy7XM4+r5be8o/k3xeIw2Eg+MnpaWiOiONd+Wv
1kpD0bNioRXnFXT6dW6vCaiXhtyNWqd28mvrdKXcgK2N0tDOb8HT5a2v0zL3
uqFCszRs3HNqZShhqlO7N8GCpwV93kAZ7RG21KmsvLyz+4s0sEPvPh0Ls9Z5
pXzR6eVXabj/3eK2euwuncK4c/uT2qXBzeHA5YYKO51H4zH+IZ3SIO4pbrKw
310nc0/Uwe3d0pBStn3HgwWBOjeLj51Q+S4NJ+qJvb1Pj+skUJHn+HuloTz/
xcO2TZd0YqMOxvf+kAax/HPfy37d0onuD7lR1i8NXQGpQa+CH+kcsQhMv/FL
Gj4Z1pKTaa90Qh8deHhwEK0/Fd7vzl+nc2AZu3DnsDT0/d15d25kt45H+P6y
NSPSkPbSSvXv/FEdpzb3D8Kj0uD8UGrdbrv5zC59l4afY9IAH80luPeLMpZ3
HdreTkhD/uqi1IOvacaEz7b39l9pqCM9jFic6sx6n53DkdPScIAVme1epcdo
1W7/azuLgJRL2XMD5m9mlLUs567jJMCtYKNOnIglI3PNjF90DgGiN/U5myxs
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
geH2f/5/aoClXw==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        LineBox[CompressedData["
1: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
+6w/1hmMT03N+v8An6qiNw==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1: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
hPjjefWoX5fvYj9BzjYI7fW4R8DVEHHiGXLAjLe29APUXxGXyluRdSsdkzsa
CNBJyV/YRucXbPoxs5GAmVW2ei/oen+UPyP+GD2/zMx8RefR9uWbUBvq74zx
8bfIN5I6Nz17QYDLmf7v7+h8TJ/mJL0iYLRha/975C081A+LNwRELwhs7qD7
o67Ukv8tmj9N+wuddH/sO3+h6R3qbzWVwC66PzRSphM6CHj6HFfoRj46etDG
uIuAynH317SdrgQX8nwgoOklV/AHZHLH9r93ewio1V34l/aktL1DTB9aTyPt
YA+dZ+ra+X8GCcD8bIJ76X6yIlyqh1D9u/8M0FbnFy/b/xnNs4/mtj66n6Kn
PCZHCFCRB6t+5PRb4l+vfiWg/vPrNtqc4XVRnt8J0G0N8xxAVpJ1WCI+TsAi
nao/tCcd9ma1TKC84tcWDSLXJ6YqHpokQEvkoN9H+jz3blZpTRGw2FRTbwjZ
dqrNbOQXOk/soMInZCnlsfb83wSsxp5jn5EHtwv7Ov0hoNByWnQYuTRD9eeS
vwSoXdowTdtwQZDYfm4ShLo9KkaQ/TqGbaz4SIiM3bH2O30+kcU98xeTkBd3
Dh9DntmksLtKgISoqBTZceSHkWZ/gwRJeMJ8rziBnHzT9wQuRMIngyWbfiBv
+3R41XthEnSiavZOIjNWXy5OFiVBMiuy6idyxbGB5t/LSei5neozjcyj3b2x
ECNB3P9QIc97DtUSONvmRpDgo+9fNh85rWAVR5RJAnY97vYCZAUh15goRRIC
FjbULES2/theY69OQsZIR+1iZMlVUxb8miQULS2+K4DcZyv+nlpLwsDiC01L
kEPrtv5S0EbPIa5vKXL2mba1XECCyvwNW5Yhez/+/qDCgATV5HsOYsiqXML2
ARtJuHJo0no58vQ61T5ZYxIqGL82iCM/CLAKfmNCQnD1sKQE8on8QK4kUxIu
n/j6mbZje1KyoTkJuwfwkhXInze2XCvZTMJbndJFK5HL9w+ztluRcOORUT7t
yFL+JxI2JGj/SlGWQjYZkHd9aktCovDtEtpCK82GY+1JCHFsX70K+Z21b7i2
A/r7FcviaRckHOb76ojyS0vspB1Ycym9wJmE+Su2y0sja401kNtcSPj55bYv
7aHEp0OabiTM2P2XSzudfHNlqQdaP6Sxkbbpve6dn9kkbGno7qE95Tqk2MAh
wff54Ahtp1O/SsK9SZhd5t9B+3Yjv6rqThJe1Plcpy3xZ2XZwC4SfnO642nv
V1+jeW4PCUtKi7bSVniy9sfe/0hwb1fRpv3OR6/Cei8JHn1pErSPcW8KUwxD
eQf/GqPPo5NttZ53Pwl/1fc00v6s5fTrQziqV7P4GdqZbeyq6gMkfHvH60Lb
fJdfRFoUCYcFnSRo/14YvGFPDAkgiLfQeRbnh/+xOETC9tjDe2m7smLriDgS
jJZkiNIWaD8ezZVAwnOX/y7S9akJToWOwyS4Caoq0A5Yks1VeZQEtadD5yWR
pQov3ks5TsJZo8pFtFsMr8UGJJGQIH6LTdc/srPCaNNJEia//L5M94fyPmqB
XAoJ0rHzP9L91CXS9HDmFAnlM0OqtPVM35qWpZGw+ORoP92Po709fEnpJIxf
H91MOyfyc7NPJtqPrVRP9+8WifHjhlkkaGDiurT/lv22XJWD8t4nXSeKfH3z
fMGpXBLYvTdMabOHBJ615ZEgMQjvRJDrV0nbHLlIwq4bS4Vo775NiGy/TEJS
hPJNYWQZO5UXrCskeH/kdaEdcwS2jheT4Homv0II2WCc4+xeTkJJXGUSPV9j
Sf6S2hUkKLq8MqGdzwx5L3qbBL9O5jzatvcPZI3eIaEzXLtKEJnbPd7tUTUJ
bQ6e+2iXTSVJF9SSICs2pUObczqtO4pCeV4R5KYtopx73vkuCSKLK57Q832v
6bKn5n0SmJp/s2kHb78ut7SBhHiJ38G05WZv9316iOaprMqSdlv63YIHTSRY
/tqiSDtWo9krt5mEN31NgrT7fd9/tH+K3o+50U/fJ0Y5X/z420ho3TTzlPa1
7lxOzCsS8GupT2ivkLVzmWwn4WV5axftOA6vfUAHmqccaR56vdELdyx7u0kY
vf5Fh/YFI1Gz7B7Uv7om7rSdBgKMnfpIeK98JYH2koSHBqIDJByzYJTPnY+Q
0Xs6SIKc+71B2mGN+3WODpGgqZoqTeeh5PtindFnEq7FXXKhffZKgkrVCLoP
hu4P0LY0/6C49yuql/ErdTp/7mFtpup3Eh5J/omiXXn8NDY8RkIW69hD2gFK
IzKXJkhgVbfw0fWVfWKyynOShGenl5nRfr3r/AqpKRL8n9+Iow2ldiKnfpPw
IVFpjPYPqxLBzX9ISF9ZhNH9UvSNd/GivyTIkLX2tMXUq3iiuJng+rrvGu3P
5TI//PiYMKY7YUf3X+7W8O/YYibs29sVQdt+8sVItwATrrl3XaBNaR0e3CrE
BE0vjx+0Q9o/9AqJMEE4OWY13d8K+3W6H4syoSL+pznt1KqRNwbiTBAdJy7T
NnPZ9HJGggmO+6Lbac/+Pt9aKcmEJ4O7BOj5uZk13RIsxYSzeoYbafuy7B+t
kWZCcLJlJO1VXSUNQ6uZENPRUUW7LWrhvQuy6HuIjTO0WfVVVStwJqT2PD9O
z+sYe1nlS4IJi85ntNMu5Aq8eZLJhNG3x2Xof1/c8htLzRWY4KEjvp22yEbZ
4gVKTFjeFHaedmNfeGH9GiZgSZ/aaR+Ie1kQocKEjNOFAvR9oYYr561TY0Ls
wDdd2oMNh7O/qzPBJHnWm/Y5756MYk0m5GQuOUHbeqFums86JuiLbbtBm7cw
9ZTceiYYzpN5TrvadPREpzYTuP47N0KbOJZ32I6F8pzMX0XfX8mP7WMeARNC
uWw20v7bw9Y2N2UCQ39nOO3AqYCxZismyGc9zaLdKbj/qoUjE2zks2ppW+Lx
O1rcmTDMiRqhXa2bsmqzNxM8BZQk6ftSwTb79ZNdTBDZN6xLO8P3yskte5mw
Ym28He1F0bdMnx1gwvq3dz1pD159UtV6nAnumiZetB+0Dyi1ZTKhR7XWkrbG
1+8DtvlMKJf+pEU7f8FszosrTGgJ9pemLSzF72R/gwkbHgpw0Y5RXy786jYT
Vhee+UB/3zvNjiL1epRX+t462mu18o2SG5ngMtSeSfuzrvI+i9dM2H5Xxpa2
kd6E8JVOJrh1xijTzoGqq7wDTFAMdhGgPWUYY7zjCxOubgr8QudrZ2zSfXec
CUvlw57RXmTeJhLJLQ/zcU4e7Zot7ibrheWhfkIwnvYeu8/7x1fLw98Jzp65
+jiFllxTlof/urR30M5QbBzI95KHx9Ft22gL/BWXPpslDyXOhXP9YBN05rRa
uzxUS9m50E7rFuFrEVWAyKLWLbTDhW4M7bJQgD49NRPaHgZWTUtjFYBzWBdo
L18qOeBIKYAJ7965/w896ejnOv9bAbi3y8z1XzdfNPZsnSI4LXw/5+/rVmya
3aMIHw5v1KOdj718oXlFERYerjKgbS9yku3/QRHyVovP7deeFapgKqUELKU4
C9oupPsE5qQEjtr2NrSjgr2ZfMlK4H2wxWFuvdpA15FGJThqvMCVtoyvSdrt
WSW463KeTTtXRLo1du0a8LoeMpfPN2e5TT92rwEF1QAf2pBH1HkXr4GguDZf
2qpXLHK7+9bAjitL/ObWu7E7xmmlMoTNas+5d+u9nDBHZeBW9pjzxWnR2rTT
ynBZP3zO92Y1e7KeKkOHcOKcP3A7LLjApwIpnmlzzm48e/o6qIC0YuactyW+
la0LU4GtZhlz/jSyaWTPTRU4KpI6531WFbfxryrglnx8zi9vy4XtFlUF44KD
cx42+yy8RUUVAltC53z9WIZKrrkq7CAC5hz62HTzNy9VeOHOmXPBthNHU2NV
wbfBec4vPr1oWJ+nCrJs+znbvJWv/FCjChZr7eb8rCm68Ei7KrTccphzBW/A
7dhJtB6v27/zGDk1RS1Tg3W/Pf99X699UqSqGlRGeM158UEb2wOWavBY1HfO
356uzRz1UQO3N37/3peS7GXHqkHP7M45y91JNSXy1EC5zH/OQVuXlg7XqUEX
17/zCNhmNpe/UwOpFf9ctAUfjJxUg0Cpf76eYSKTuUwdbHT+ubLfZ1uFujqY
nf1n/+7d4ibW6rDPd9ecV7/b//LVLnUQeRY4Z8ba0yZ+R9UhUHr3nMnk4tsz
Berwa+ifU7VdzfruqUPR+j1z5upb/O7RB3VYw//PdV8ery6fUQe3+H/vR0we
98qR0ICYyqA5D5ZqKM9oaMCh8n/7Wfu9n3S20oDio/++5+c+x4bqYxoQ9PBf
HpI9Fz13X9IAvoP/8mKZTfzB7mlAvPO/PAUEJSJFejTAXN9nzh1tujN//2qA
ZKD3nP8HAk0P7w==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1: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
xjXTf/9qgcPVpln/D4otOtg=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0]], 
        LineBox[CompressedData["
1:eJxF1nk4VO/bAHBbCmVfSghzzhkRxlIqzLkpWymKQohDhbKlQpuSFiqVQhFf
FcoalWRpJBEhZItSoSKJIqQS73PG9V6/v1yf68yce30eo+IRsHknHw8PTzUv
Dw/913Jb5FweHlX4s7d538FCfs5YGavhi6AqVH5UFpUuF+CkMDpjXy1QhSOH
o04bqApyJr4tVU1drArTJyFhPHoeJ+1YnZG5gSpIBcV2f5m/gMOTLhp03l8V
5lsXxf1wleKYJ7vwCAerwsjJD72cXinO+bisC2eOqsLLJqmUxivSHLnT5tkn
zqvChS0BGXdfyHC0vMI+hWapwiLrRdZqQgs5JQ7yvPuLVaGzaf+WueQijpll
oWJAjSqkmj77ftNSnuOydHjrzj5VACm7h5e1FTji6yQ3eoz9fz6KnGe7V5i5
8TGgr6lNhPyqyAk+t83IRZwBTxWEa2yvK3HUc8L0nJQYkOzNPulhvYRzaei5
it1qBuj7mV+cVlfm/NISE9+wFT1X6E/LTFDmzFcmw0v2MkCs+NB68S5ljrJE
wCgz+n/OEpqb/T6RAedMeSN0R5U5+nwpnnEZDIjVHpMarlLmbOWpkuDP+Z8P
Tn99Epj3P5f9WaFgXciAhbf9uurylDmNv61+8hUxQIOY8UvJl+N0T7rUFhcz
YEm9FbNyu7rx6K+Am4GlDCh9wf9QMMHSmP/XiVAmhwGHlDSt64YdjaUn4mze
lzFgx1LCImzdDmNiPIOIK2eAYsiNrHu2fsYGY6X/1lcwQK/govrtlH3Glj8b
WvkqGRCYnqsk9DHUGBzq3r2vYoCo08Grzk/DjFeWVveVVDOAeKjzVHLDCWPW
ksrv8S8YMBjDHqlXPGWsFlE+GVSH8v2y59148Rlj5f7HvDYvGfDh8c52U4Nz
xgvXFwtrNDLg+sMIqyHlq8bieQ+l5r5C8X3HQ3M87xjPlbqv8LGZAfXM0wmj
Ge+Mp4Pv4k9aGWBY5x+t/n0+e+JNltb1djRPlvKv9A+q7GH2HYOQDgaMBZjy
aTjpsPtupYLdGwY4bR+IzX6+mv1e8IaVdhcD5t2z3xt12ZTdvjtps8h7Bnwc
rj1z8YcFu6HhmnP/BwYUPjvEqtbbwH6uG7fjWQ8DjmSOlloIbWKXxcf4pXxk
QD6xY1/xLXt24Z/o4MOfUTz1/WurSA/23e1njzn0M+DytmG27JkgdnrF6Ui9
AQacLkzc/Uopgp1ERMSIDTJg+9WopOcLr7Bjzx5LHPzGgAM2enc9IJV9fvhw
avUwA3jDC7qA9YB9cnNoTuoPBlgtyvBdn/qMfaRw/8Njowy4sfOtsRizlb1f
fm+Z8xgDPJ1f2k+mfWL7hvlVG0wwoFpIctEUc5y9o9enSWqSAebzTgj0B88h
Xcx3dX7/zYBt7wx76g/IkPZZHr11fxmwoZjpPvoMI61F3Qbv/GPAtbv6bnV/
dMk1Qc5jETMMUBPZsulqFUmubnf458aLQbbnt33PSyxI3dX2gkb8GFjeOnVU
95ANqf6frdjCORjsErF+7tqzmVTl27BwTBADhW1Fy2VltpDyu6xUmuZhULNz
eM2q8K2kZK2Zeo4wBntEnYK6vR1IYS1Tvcj5GPyrLF0bxO9I8l1mG+0QxeBq
TFa6835H8s/4ajMQR/HVOY/jmxzJUSeDjQqSGOhnm8f8VHUie1RY7q0yGPCF
Lm835jiR5fdUTq5VxECu+O2q9UPbyCIZpWjlJRgI4gWpx1Y5k/kH5eOnlDH4
FvlAL+qUM3nDRCqjAMPgjJTGl3AFF/LYK4F6bBkGyzNTd7WCKxm8nLeNRwuD
ifNFLj2nXUn/hH/vurQxmFndp+xd50pupya+x+phIHNoesrJZjvJHumXmmOI
QZHYHrcS0o00dF7u+NQIgxuBPFhHkBu5supE0lE2qv+93sjvVDdSJ0ERnzDB
ICfsX6AMjzupxb/H5/4aDHyffpO8JuNOqvsV5fqbYcBMk1KUUncnMRO7Ff2W
GBgazNEbs3EnVbJvHEpdh8F5u2+drpQ7qSQzXOZmjcHGfeU61XvdycXHDPkV
NmJQsOlPon64O7lwINKiwwaDyt74I1kX3UkZu/ZzsZswSF/2SEo72Z2U5DCa
bO0wwH59PleT6U6KxJQ5vtiK+jO2v9mh3J2c91ck+ZQjqk/5UohrrTspsNOp
x2QbBgvmHDl5tcWd5G28jU87Y+CYxy8j1uVOTq8c8ylxxUD9ySvzho/u5N9b
JneD3TDYvYBR/u6rOzk5/+KoLoXB/Tm+WRYj7uR4cNeK7x4YCCeuGpP95U6O
di89nL0DA7OWLH/7KXfy+7qQJ167MBDNLSwX5qXIbwWV/Jg3Bt9v975dO4ci
vyhJWnb7YHBdSP6IiBBFfo50O5+0BwMxWUMjn/kU2Tua0+Toh0Gy6u793mIU
+d7lj7RMAAbP/yldk5CkyLfPLZxeBWLgNDfwkb80RXaw4pKjgzBIE3uuHiVL
kW2JvT1W+1F/19V3eS+kyGYBFiEYjMHSmcAfsvIU2eh/dHdFCAa6h/aFXV9M
kfUdtXfDDmJwuLYl558CRb4wXfhz9WEMvBpf7zJTosjnOTsNfh1B9Q5PeR1c
QpFPjvOUBxzHIDWg3OiJCkU+/rpBYNkJDA75J0i/U6XIIvvrll8iMBi+FLR4
mkGR99VWvHI/g4F2UVmPC0GReZcjZBSjMJiekNNNZVJkzlSTU+dZDMbPeb6b
UqPI2017ejddwEBgRvH1uAZFpq4uJkQvYSDrH7EtUZMib6QJ7qmNQfWe8jF1
1qbIhNCbP03jMOB8uHrJQI8i43uHDWbiMbjjGNZvv5wiL1sbHSm9hsGvyfHM
GAOKPK/8WkA/Cc1fILrCx4gio85iVj+SMdicnrlUgKTI02N7o3NS0D7Lmdg8
NqHI4zXzZfFU9PyG6JlwC4rcF2jKlM1C98XU1ih9e4rcSh5M/pWNzu/FGL93
DhS5WjRfqjMXgw9PvcgEZ4rkyVHkSbqH9mPxuBnbkyIv9E92qBRj8IW/qeBr
EEUGFWrb8JdikFdj79UZTJFbTu2q+vQYg/7wgdFnhyhSgdF67045Bnt/5SmH
n6DIrO15ZzVrMMjUm7rjFIPep9nHI1aLgUrvopU9sRS5d0oh5EcdBhcf8T7d
fI0iVyae9XzQiMEbg79SQ/9R5GKfp+gHEwaehEyv5C2KnDaYtAluwcBZ/Ke9
YjpFVrXtNFr1Gs37dsWZriyKzEhLui/fiUGiCB5/MRf1b1+L2tQblI+0aTqW
T5GbJUxknrxH+ZLOP34WUOSK7pBzN7rReerc80zzEUUuyrvLe6IXA/mLt0Os
iimy21pheG0fBllfs6XVOBRZudhuB/EFg3w126zBMoq88zXqzdyv6P7Idl90
pZwizxaX2w4Movt8+YjJkgqK9I/89bx2CIORFSMjl55R5CYHLeOc7xgcKXP4
9KWSIvWJnQ+iRzBQetmyQu05Rf591pxiO47O3xa9C1QNOk+XhWR1f2Ew+N6t
1PUFRVZQcF7qNwaNZ23rzGopMp0Vwjf+B523Ib8p+TqKjJzJDW2fwiD09MLo
98i+DZ+GH01j0NNvWxRTT5E2yYt3JvDgsP1Q6/3lLylS13fz20N8OOA8Bfl1
yLKGUZtcBHCoXT2vz76BIv8IlVcbC+IQfWQsrhn5XceE8ZJ5OCiLbR0wa6TI
8juaBTzCOMRK7BjJQ04L3qHeK4LD1Ztbnkg0UeQZs+s3ni3AITNK/YAv8m7p
Ztl0MRy8sxOxp8g690l+bykcDMLFB5xfUaR0ePBBKxmUn9+OqlTkSZvc7+py
OKz2ql42gFw2JN81JI9D7p+6ZQHNFGm9dKJgnyoO5stKTA+1UKT6PmdPawwH
9v1/tmXI8zjlEjiB8h+o/snfivbF9px/+1IctJbpVschs0OV1Vbp4PBKNXr8
dRva34pT7RJ6OHyJf1Ot1Y7qFxk8+VUfh4dWkrGRyI9SHvZcX4kD5+r5lWtf
UySret31aRIHm8+/7rZ1UKSoRL7VaxMcTmW++MjuRPfpNpnJvDU4tC0rTMhE
zhz+YE9Z4JD4MtT1xBuKVJU9IFq5EQfFskZBwy5U/86U8ChXHGJ4FbtjP1Dk
6F0BlocbDj93LEj9jdw06fN+NYWDiKmSsUs3RUaf1zf8tgPF9/6XKN+D5t2e
MFC5C4eR/N+sYOR1yjNXk71xWGbkatKILFjwYmyjLw49lmd+h/ZS5Kd/WqlM
fxziR9effIFcYRG7iScQB35JYpncR4o89nb73Xv7UH8VbtZmIm/HK13OHsBh
2JkRO4xsFLBUxDMEB1WP5HWsT2hefGNe0odxmAkPf5aF3G7tJDt0BIf3fwIy
PiIXxJdVVoXh8Pb8k5JFn9H5V49SCTmBw7dxZdWjyLb7hxttTuIw+jUhIwtZ
q8wuTO002rdC7Zg25K+blN52RuFw52WIENZHkTXXI6Lun8NB75RsqwXy7c9f
DM5F4/DaKW69D/JJ7Y19nhdxaI3nOxuJ7HHwQaxRDA7+HFZhOjI8W7hG5goO
nlajE+XISgvCRoZicfhdumjfG+S3Nyw3plzDwW6je8G8frR/P6YNHBNxWC8x
HxSQb8FDFYkkHAQ1F8dpIXt3q4yfSEHzconktUVez+p4b3gTh4WfJte7IWsd
v1AzdgvlnzNS5Yc8tuTv9V23cbCO+y87Evl1wL1TSzJwEF7kbRSHXPLEK6Aj
E4dbv0csbyKHu7WarsvFobghR6QIWTQld0CzAIdy0S1tPcgjw54tfQ9xuMlS
Hx5EbmXLc1Ie4ZCkcXh8HPn6+9OXJEpx8F269I3QF4pUU3I3GH+K9tPfOkkH
2TRZ8tTjRhzyBS4bnEbGh2r8D7zC4ceKm54xyPOMjzlqteDw6MKx3CTkxq5B
jRvt6DzGB4Y9QHZRqGqOeIeD3EGr4z3IwddDlNcPonrs8SLjAYp0GtQUFhjC
IeCdU7slspHhp5+Ph3FwPJr42g6Z/61ttdYoDv9cP+zzQb4kr+4v+RuHul0t
dy4j79vd7VD3BwfL/UJ7k5C3lsSbnJzC4Zph/J90ZMVt/DITM+j9W65uLkLO
Sugq7RQkoMlh/8o3yPs3Hnn9aB4B3gav63uR2fwKP+OECche0C47iPzK11l9
sygBlwbKU/8gJ6r8NWOJE/C6Tf8H71eK3NGeSIlKErBF7ePIPORJ8s21WhkC
ilfeVJNFrhg7WJAhR0C+1FkvBeTzmYuaTi8i4Hj+rt2qyMpSTnPXKBJgNyJx
QRP5a/WkqsoSAu69an2oi1xw5Bp7RpmAvskFyQbIFn2vD5RiBHzdvecxIItf
D4lJIAiY293yby3yGxu53BA1AgTL9olbIfsXb/2kt4yAnC82V22RV/pPzEho
EcC7PFrUHpmPEb/4hzYBpk/4HByQ48+3bc7RI+BV/Q0vV2R3kwP+Z5cTsHJf
w3J3ZPUJ6bPeBgS4JrF7PJA5bvZPMUMC7Evz3nohn5Ye6+IzJmBxwhbt3ci2
L65MdrPR5/tv+Pgif9Jt0U42JUBzWCYhEPluf9D6w2sJqLlXGBOEHJok6eVk
TsDj6a8h+5FFBDf/J7OOANx6SioUWbezaf6FTcgWKc/DkI8faxgIcyeAetY2
9xzyOn3/Oa4eBPzLNDtzHll6YIGK4Q4CnjzgEbyAfGfzBsdfXgREpIZNX0Ju
wOufBwQQ0G9mVhuPrFj/ItU9jICj/IuNbiF/O13yR+k4mn+y+PFU5BKT7E3v
wgko2v6kPA3Z8dH5GadTBPr/6LLqDnLsLRtnu/MENLQpjmUje7rCfYkLBIR6
eUnl0vkv1BFqukhAgACmcRe5MVrykfUVAq63Va3JRxY+2CZpnkjAap8MjQLk
Tr3nPgJJBNRHVMo8RM4YLiyvSCZA6pzBb9pmO675kzdR/enHsx/R9S6Jqvp3
C+3L2zmHipB7Ow8qPE5D/VwLJsV0v2yca1dmEMAZ1y0uQbYRtlb5lUnAC49E
n1JkpSqj0IfZKJ63nORj5NLVSoRuHgFvOh5Yc5DPjose/ZFPQHPbjQ+0HfNn
Wu7eJ4B1Tsa3DHkC7wnXKCTg5ZPvQU+Qq7pfdQw8IkBWnG+Yduz1Cu2MYgIk
i8Y9y5F1JNLeYRwCDO69MXmKzFMfq/+xjACfltAs2g2nT527WU7AzNAmsQpk
36ldq5Qq0b7nijbSNnzkcKmrioDcukT1Z3T/giz7E6sJsAhpCqd9p39pnFwd
ASdsklUqkYNvyX9rqydAMfDgHtprXUXWxDYQ8NueeZ92b/O3H+LNBPjZnVhZ
hXwv+p1FYwsBhtv3H6R93LLhv+g2AkiZimLaimV51sKdBFz2+rP6Od2PzKAM
/m60z/qpm6rp+R6bdJsYIuCi/ILtL5CvPZT7nv2dgO/35a/T9hhcEUaNEFBx
dX0n7YmtB5LqxwjQx9Y41yIraI123PqLzvvx2yfqkH26BjfZCDFB+61h5Ut6
nyRFegREmCD16+XcBuQpC/XAkvlMkPlcsI72pQfeF3BxJlgVfm+gXXj2c+1f
WSZs0xdqa6TrKRfYdm8hE7Y0pMs1IVtNMAZ2yTNh0CZtG+0uymNusyITvFhV
3bT5V31Yk4ExwUAlqu8Vcr3/dLMrwYQ5r5h4M31/pCl6SKkxoTMN86CtLu5y
PEyDCQKtK9ppj5kdFtPXZEKlcd38Fvr+OJz434AWE6b6SoG2bX/HY3tdJgjK
5qfQllecXC+sz4S0bN1a2h83y719spwJGkliI7RzIlfsPmDAhIkgQelWer5l
W36rr2JCcEG7Lm1h9Vi5eCMm1MTxetJOjmtezgtMaPy3+DRtFq+Eve8aJkQ+
2Z1Du9LXJui1ORPqtvW20nboiL5kuo4Ju/nd/9H+uqb+bu4GJnBGyxlt9P27
2Gowwp4J9oduUrQNRquY25yZ0JXmd5T2NebrTDE3JgxzWKG0J12+aFR5MEHM
VZ37ecfLv3MP7WLCffkby2kXVQuzWLtRP+948NFenWyzUvAgE7rFc0Pp+InN
7iWlR1D8twvdaP+dG2S09zgTbj/uMqPtYhxRRpxkwrtiNw3aj4NioesMExa3
zhOlrZCRXhFzjgkgTn6j+3f0XeFai4tMuOXnU0n7vWTN86nLTJBudU2kzbbs
tLwfz4TVu2IP0C5XVNoUmc6E56p58rRNfno4bS9ggqzwN2XafNtPub4oRfu0
y9OCdkXNHUr/GRMsmO07aEfo1e5MqWWC2TOLUNpr//vmI9zMhBP7laJoL1Kx
c57oYMK8IN5k2sOpxda9H5hwqEmqlLbjZ18zx49oX+40NnLfTyizG/rQfLwd
B2gv825ZsfYrE/j8/OfR9V7NPK1dMsQEfolmTdp8g6vUWCOon+/5HWn7LhtS
vj3GhLJo7Cjtdr8bixQm0b4fPJ5EG/LsJC//Rd/P4BTSltEt4Q/jU4PGD/ve
c/ehQHncR0gN4h1DftOOLRl6bSKnBsZJhBI9P+PykpJFuBqMXLTeSLuv6kzy
iK4a6Bj5hNO+VGd//AWowRyB5hja8449tGw8ogbqmJ0D7eO6shJtRWrQFv3A
hLadmfmHpz/VwHSMY0SbcAzOvau1FKY7OjRpJ2hUf761cylIryjUoj1/Rk7p
atJSeHfvlD7tTQFxV3Q6lsKvFDHuvsV/kBSql1KHjfzZ3OeHxO998VuvDpFy
vly7mdjUiEWog7WeJdeyYvKfHZ6og9c5I65fdn3ivfFXHY7ct+L6g9AxrHGF
BqSb7+F6ZMUii+m9GtD/OZnrW1hri36mBpw52sm1veRF9z3dGrCYpcTNpyMp
WN1SYRnc5QRw7czcPoY5LoOxlVVc3+L4uwxVL4NIlucK2sre5vFF08vgtmYW
1ymSSk0RyzVhv+UA1z+cVC3GAzXB6p6KAW24SZTtytEEBmsd16zM9SkfPmqC
KnhyrXwv8LjjYi1YIhrCde+Wiv9CHLTgDvsM1+l/pDjxV7SgLuwy1xXT+j1J
DVqQbZXAdTff1jmpQtog4JvEdXL11Sv5oA2REbPedr5TpSxEG8ztErkeGLIY
2vtAG9R647gOtSkswr9rw8vWi1y3FqmGBEqxwGF1FNeDVl8lNmqz4K7GCa7z
zyZop6xjwSr2Ya6D6yw3/NjJgvll+7lO23YhKjaCBWrZ/ly3DLRUrbzJgnX4
bq43dS591P2YBXmNXlw31hzLiOxgQUj5rAsFfYsiJliwUd5ntp61jjVh0jqw
d+ns91t77aOPsnSgZGDWIuGbNh+x1oHW4D1c/2hYnjjspQNZr2fdqiDf6x6h
A9ZyvlyrFsdaEjd1YB571gFbxPIGy3Tg1sZZz9+cWFvwRgdqNs86ayPed3RC
B9TtZ52fYK6cKK0LD5xm/eiT17ZCXV3Y5z/rPR8C5cxtdaEocdZL3hxsbfPT
Be0vs2Ysv2LuE6ULSiw/rpmXcoqm0nSB13nWsatcrD5W6ELinlnzfhR586Jb
FzZ6zrrsW92SgildMDGf9eGJczv/W6gH2xfPui9PT2tKTw+EPs3Gs/V5O+Fk
owe70mb9K9ShqvSsHiQvmLV8TzoVeFsPgmpm+2VsNfYPq9AD3bOzni+68Khk
jx7Yb5h1V7Ph1MyMHoirzPr/AEgR/vY=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {10., 0}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{9.000000224489796, 19.999999775510204`}, {-0.065, 0.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"10 \[Delta]TRIO\"", "\"10 \[Delta]NAD\"", "\"\[Delta]ADP\"", 
       "\"\[Delta]BPG\"", "\"\[Delta]P3G\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1/3, 1/3, 1/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.769040408088896*^9, 3.7690404546225567`*^9, {3.7690411153136044`*^9, 
   3.769041139874069*^9}, {3.769041205225243*^9, 3.769041223432848*^9}, {
   3.769075321636544*^9, 3.769075467746912*^9}, {3.769075542817019*^9, 
   3.7690755658512583`*^9}, {3.769075624718412*^9, 3.7690756924173098`*^9}, {
   3.769076011512532*^9, 3.769076079736052*^9}, {3.769076197763465*^9, 
   3.7690762283117647`*^9}, 3.7690762897322702`*^9, 3.769076322596464*^9, 
   3.769076371758964*^9, 3.769076422599306*^9, 3.7690833674365263`*^9, 
   3.769083527767881*^9, 3.769083565634512*^9, 3.769083726292507*^9, 
   3.769083811385626*^9, {3.769083866264555*^9, 3.769083877469214*^9}, 
   3.769083935192078*^9, 3.7690839766403503`*^9, {3.769084031869996*^9, 
   3.769084043178914*^9}, 3.7690841111645308`*^9, 3.769084225853574*^9, {
   3.7690844033492193`*^9, 3.76908442564826*^9}, 3.76908447840904*^9, 
   3.769085784642898*^9, 3.7690915822076902`*^9, 3.769092929991523*^9, 
   3.769093339855731*^9, 3.769093412685602*^9, 3.769095203263855*^9, 
   3.769095234207341*^9, 3.7690952871846123`*^9, 3.769095360175591*^9, {
   3.769110102598781*^9, 3.7691101114603977`*^9}, {3.769110144263361*^9, 
   3.769110168502372*^9}, 3.769110552028315*^9, {3.769110950953999*^9, 
   3.7691109710806313`*^9}, 3.769111007558845*^9, {3.76911116499158*^9, 
   3.769111193688826*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
xjXTf/9qgcPVpln/D4otOtg=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        LineBox[CompressedData["
1:eJxF1nk4VO/bAHBbCmVfSghzzhkRxlIqzLkpWymKQohDhbKlQpuSFiqVQhFf
FcoalWRpJBEhZItSoSKJIqQS73PG9V6/v1yf68yce30eo+IRsHknHw8PTzUv
Dw/913Jb5FweHlX4s7d538FCfs5YGavhi6AqVH5UFpUuF+CkMDpjXy1QhSOH
o04bqApyJr4tVU1drArTJyFhPHoeJ+1YnZG5gSpIBcV2f5m/gMOTLhp03l8V
5lsXxf1wleKYJ7vwCAerwsjJD72cXinO+bisC2eOqsLLJqmUxivSHLnT5tkn
zqvChS0BGXdfyHC0vMI+hWapwiLrRdZqQgs5JQ7yvPuLVaGzaf+WueQijpll
oWJAjSqkmj77ftNSnuOydHjrzj5VACm7h5e1FTji6yQ3eoz9fz6KnGe7V5i5
8TGgr6lNhPyqyAk+t83IRZwBTxWEa2yvK3HUc8L0nJQYkOzNPulhvYRzaei5
it1qBuj7mV+cVlfm/NISE9+wFT1X6E/LTFDmzFcmw0v2MkCs+NB68S5ljrJE
wCgz+n/OEpqb/T6RAedMeSN0R5U5+nwpnnEZDIjVHpMarlLmbOWpkuDP+Z8P
Tn99Epj3P5f9WaFgXciAhbf9uurylDmNv61+8hUxQIOY8UvJl+N0T7rUFhcz
YEm9FbNyu7rx6K+Am4GlDCh9wf9QMMHSmP/XiVAmhwGHlDSt64YdjaUn4mze
lzFgx1LCImzdDmNiPIOIK2eAYsiNrHu2fsYGY6X/1lcwQK/govrtlH3Glj8b
WvkqGRCYnqsk9DHUGBzq3r2vYoCo08Grzk/DjFeWVveVVDOAeKjzVHLDCWPW
ksrv8S8YMBjDHqlXPGWsFlE+GVSH8v2y59148Rlj5f7HvDYvGfDh8c52U4Nz
xgvXFwtrNDLg+sMIqyHlq8bieQ+l5r5C8X3HQ3M87xjPlbqv8LGZAfXM0wmj
Ge+Mp4Pv4k9aGWBY5x+t/n0+e+JNltb1djRPlvKv9A+q7GH2HYOQDgaMBZjy
aTjpsPtupYLdGwY4bR+IzX6+mv1e8IaVdhcD5t2z3xt12ZTdvjtps8h7Bnwc
rj1z8YcFu6HhmnP/BwYUPjvEqtbbwH6uG7fjWQ8DjmSOlloIbWKXxcf4pXxk
QD6xY1/xLXt24Z/o4MOfUTz1/WurSA/23e1njzn0M+DytmG27JkgdnrF6Ui9
AQacLkzc/Uopgp1ERMSIDTJg+9WopOcLr7Bjzx5LHPzGgAM2enc9IJV9fvhw
avUwA3jDC7qA9YB9cnNoTuoPBlgtyvBdn/qMfaRw/8Njowy4sfOtsRizlb1f
fm+Z8xgDPJ1f2k+mfWL7hvlVG0wwoFpIctEUc5y9o9enSWqSAebzTgj0B88h
Xcx3dX7/zYBt7wx76g/IkPZZHr11fxmwoZjpPvoMI61F3Qbv/GPAtbv6bnV/
dMk1Qc5jETMMUBPZsulqFUmubnf458aLQbbnt33PSyxI3dX2gkb8GFjeOnVU
95ANqf6frdjCORjsErF+7tqzmVTl27BwTBADhW1Fy2VltpDyu6xUmuZhULNz
eM2q8K2kZK2Zeo4wBntEnYK6vR1IYS1Tvcj5GPyrLF0bxO9I8l1mG+0QxeBq
TFa6835H8s/4ajMQR/HVOY/jmxzJUSeDjQqSGOhnm8f8VHUie1RY7q0yGPCF
Lm835jiR5fdUTq5VxECu+O2q9UPbyCIZpWjlJRgI4gWpx1Y5k/kH5eOnlDH4
FvlAL+qUM3nDRCqjAMPgjJTGl3AFF/LYK4F6bBkGyzNTd7WCKxm8nLeNRwuD
ifNFLj2nXUn/hH/vurQxmFndp+xd50pupya+x+phIHNoesrJZjvJHumXmmOI
QZHYHrcS0o00dF7u+NQIgxuBPFhHkBu5supE0lE2qv+93sjvVDdSJ0ERnzDB
ICfsX6AMjzupxb/H5/4aDHyffpO8JuNOqvsV5fqbYcBMk1KUUncnMRO7Ff2W
GBgazNEbs3EnVbJvHEpdh8F5u2+drpQ7qSQzXOZmjcHGfeU61XvdycXHDPkV
NmJQsOlPon64O7lwINKiwwaDyt74I1kX3UkZu/ZzsZswSF/2SEo72Z2U5DCa
bO0wwH59PleT6U6KxJQ5vtiK+jO2v9mh3J2c91ck+ZQjqk/5UohrrTspsNOp
x2QbBgvmHDl5tcWd5G28jU87Y+CYxy8j1uVOTq8c8ylxxUD9ySvzho/u5N9b
JneD3TDYvYBR/u6rOzk5/+KoLoXB/Tm+WRYj7uR4cNeK7x4YCCeuGpP95U6O
di89nL0DA7OWLH/7KXfy+7qQJ167MBDNLSwX5qXIbwWV/Jg3Bt9v975dO4ci
vyhJWnb7YHBdSP6IiBBFfo50O5+0BwMxWUMjn/kU2Tua0+Toh0Gy6u793mIU
+d7lj7RMAAbP/yldk5CkyLfPLZxeBWLgNDfwkb80RXaw4pKjgzBIE3uuHiVL
kW2JvT1W+1F/19V3eS+kyGYBFiEYjMHSmcAfsvIU2eh/dHdFCAa6h/aFXV9M
kfUdtXfDDmJwuLYl558CRb4wXfhz9WEMvBpf7zJTosjnOTsNfh1B9Q5PeR1c
QpFPjvOUBxzHIDWg3OiJCkU+/rpBYNkJDA75J0i/U6XIIvvrll8iMBi+FLR4
mkGR99VWvHI/g4F2UVmPC0GReZcjZBSjMJiekNNNZVJkzlSTU+dZDMbPeb6b
UqPI2017ejddwEBgRvH1uAZFpq4uJkQvYSDrH7EtUZMib6QJ7qmNQfWe8jF1
1qbIhNCbP03jMOB8uHrJQI8i43uHDWbiMbjjGNZvv5wiL1sbHSm9hsGvyfHM
GAOKPK/8WkA/Cc1fILrCx4gio85iVj+SMdicnrlUgKTI02N7o3NS0D7Lmdg8
NqHI4zXzZfFU9PyG6JlwC4rcF2jKlM1C98XU1ih9e4rcSh5M/pWNzu/FGL93
DhS5WjRfqjMXgw9PvcgEZ4rkyVHkSbqH9mPxuBnbkyIv9E92qBRj8IW/qeBr
EEUGFWrb8JdikFdj79UZTJFbTu2q+vQYg/7wgdFnhyhSgdF67045Bnt/5SmH
n6DIrO15ZzVrMMjUm7rjFIPep9nHI1aLgUrvopU9sRS5d0oh5EcdBhcf8T7d
fI0iVyae9XzQiMEbg79SQ/9R5GKfp+gHEwaehEyv5C2KnDaYtAluwcBZ/Ke9
YjpFVrXtNFr1Gs37dsWZriyKzEhLui/fiUGiCB5/MRf1b1+L2tQblI+0aTqW
T5GbJUxknrxH+ZLOP34WUOSK7pBzN7rReerc80zzEUUuyrvLe6IXA/mLt0Os
iimy21pheG0fBllfs6XVOBRZudhuB/EFg3w126zBMoq88zXqzdyv6P7Idl90
pZwizxaX2w4Movt8+YjJkgqK9I/89bx2CIORFSMjl55R5CYHLeOc7xgcKXP4
9KWSIvWJnQ+iRzBQetmyQu05Rf591pxiO47O3xa9C1QNOk+XhWR1f2Ew+N6t
1PUFRVZQcF7qNwaNZ23rzGopMp0Vwjf+B523Ib8p+TqKjJzJDW2fwiD09MLo
98i+DZ+GH01j0NNvWxRTT5E2yYt3JvDgsP1Q6/3lLylS13fz20N8OOA8Bfl1
yLKGUZtcBHCoXT2vz76BIv8IlVcbC+IQfWQsrhn5XceE8ZJ5OCiLbR0wa6TI
8juaBTzCOMRK7BjJQ04L3qHeK4LD1Ztbnkg0UeQZs+s3ni3AITNK/YAv8m7p
Ztl0MRy8sxOxp8g690l+bykcDMLFB5xfUaR0ePBBKxmUn9+OqlTkSZvc7+py
OKz2ql42gFw2JN81JI9D7p+6ZQHNFGm9dKJgnyoO5stKTA+1UKT6PmdPawwH
9v1/tmXI8zjlEjiB8h+o/snfivbF9px/+1IctJbpVschs0OV1Vbp4PBKNXr8
dRva34pT7RJ6OHyJf1Ot1Y7qFxk8+VUfh4dWkrGRyI9SHvZcX4kD5+r5lWtf
UySret31aRIHm8+/7rZ1UKSoRL7VaxMcTmW++MjuRPfpNpnJvDU4tC0rTMhE
zhz+YE9Z4JD4MtT1xBuKVJU9IFq5EQfFskZBwy5U/86U8ChXHGJ4FbtjP1Dk
6F0BlocbDj93LEj9jdw06fN+NYWDiKmSsUs3RUaf1zf8tgPF9/6XKN+D5t2e
MFC5C4eR/N+sYOR1yjNXk71xWGbkatKILFjwYmyjLw49lmd+h/ZS5Kd/WqlM
fxziR9effIFcYRG7iScQB35JYpncR4o89nb73Xv7UH8VbtZmIm/HK13OHsBh
2JkRO4xsFLBUxDMEB1WP5HWsT2hefGNe0odxmAkPf5aF3G7tJDt0BIf3fwIy
PiIXxJdVVoXh8Pb8k5JFn9H5V49SCTmBw7dxZdWjyLb7hxttTuIw+jUhIwtZ
q8wuTO002rdC7Zg25K+blN52RuFw52WIENZHkTXXI6Lun8NB75RsqwXy7c9f
DM5F4/DaKW69D/JJ7Y19nhdxaI3nOxuJ7HHwQaxRDA7+HFZhOjI8W7hG5goO
nlajE+XISgvCRoZicfhdumjfG+S3Nyw3plzDwW6je8G8frR/P6YNHBNxWC8x
HxSQb8FDFYkkHAQ1F8dpIXt3q4yfSEHzconktUVez+p4b3gTh4WfJte7IWsd
v1AzdgvlnzNS5Yc8tuTv9V23cbCO+y87Evl1wL1TSzJwEF7kbRSHXPLEK6Aj
E4dbv0csbyKHu7WarsvFobghR6QIWTQld0CzAIdy0S1tPcgjw54tfQ9xuMlS
Hx5EbmXLc1Ie4ZCkcXh8HPn6+9OXJEpx8F269I3QF4pUU3I3GH+K9tPfOkkH
2TRZ8tTjRhzyBS4bnEbGh2r8D7zC4ceKm54xyPOMjzlqteDw6MKx3CTkxq5B
jRvt6DzGB4Y9QHZRqGqOeIeD3EGr4z3IwddDlNcPonrs8SLjAYp0GtQUFhjC
IeCdU7slspHhp5+Ph3FwPJr42g6Z/61ttdYoDv9cP+zzQb4kr+4v+RuHul0t
dy4j79vd7VD3BwfL/UJ7k5C3lsSbnJzC4Zph/J90ZMVt/DITM+j9W65uLkLO
Sugq7RQkoMlh/8o3yPs3Hnn9aB4B3gav63uR2fwKP+OECche0C47iPzK11l9
sygBlwbKU/8gJ6r8NWOJE/C6Tf8H71eK3NGeSIlKErBF7ePIPORJ8s21WhkC
ilfeVJNFrhg7WJAhR0C+1FkvBeTzmYuaTi8i4Hj+rt2qyMpSTnPXKBJgNyJx
QRP5a/WkqsoSAu69an2oi1xw5Bp7RpmAvskFyQbIFn2vD5RiBHzdvecxIItf
D4lJIAiY293yby3yGxu53BA1AgTL9olbIfsXb/2kt4yAnC82V22RV/pPzEho
EcC7PFrUHpmPEb/4hzYBpk/4HByQ48+3bc7RI+BV/Q0vV2R3kwP+Z5cTsHJf
w3J3ZPUJ6bPeBgS4JrF7PJA5bvZPMUMC7Evz3nohn5Ye6+IzJmBxwhbt3ci2
L65MdrPR5/tv+Pgif9Jt0U42JUBzWCYhEPluf9D6w2sJqLlXGBOEHJok6eVk
TsDj6a8h+5FFBDf/J7OOANx6SioUWbezaf6FTcgWKc/DkI8faxgIcyeAetY2
9xzyOn3/Oa4eBPzLNDtzHll6YIGK4Q4CnjzgEbyAfGfzBsdfXgREpIZNX0Ju
wOufBwQQ0G9mVhuPrFj/ItU9jICj/IuNbiF/O13yR+k4mn+y+PFU5BKT7E3v
wgko2v6kPA3Z8dH5GadTBPr/6LLqDnLsLRtnu/MENLQpjmUje7rCfYkLBIR6
eUnl0vkv1BFqukhAgACmcRe5MVrykfUVAq63Va3JRxY+2CZpnkjAap8MjQLk
Tr3nPgJJBNRHVMo8RM4YLiyvSCZA6pzBb9pmO675kzdR/enHsx/R9S6Jqvp3
C+3L2zmHipB7Ow8qPE5D/VwLJsV0v2yca1dmEMAZ1y0uQbYRtlb5lUnAC49E
n1JkpSqj0IfZKJ63nORj5NLVSoRuHgFvOh5Yc5DPjose/ZFPQHPbjQ+0HfNn
Wu7eJ4B1Tsa3DHkC7wnXKCTg5ZPvQU+Qq7pfdQw8IkBWnG+Yduz1Cu2MYgIk
i8Y9y5F1JNLeYRwCDO69MXmKzFMfq/+xjACfltAs2g2nT527WU7AzNAmsQpk
36ldq5Qq0b7nijbSNnzkcKmrioDcukT1Z3T/giz7E6sJsAhpCqd9p39pnFwd
ASdsklUqkYNvyX9rqydAMfDgHtprXUXWxDYQ8NueeZ92b/O3H+LNBPjZnVhZ
hXwv+p1FYwsBhtv3H6R93LLhv+g2AkiZimLaimV51sKdBFz2+rP6Od2PzKAM
/m60z/qpm6rp+R6bdJsYIuCi/ILtL5CvPZT7nv2dgO/35a/T9hhcEUaNEFBx
dX0n7YmtB5LqxwjQx9Y41yIraI123PqLzvvx2yfqkH26BjfZCDFB+61h5Ut6
nyRFegREmCD16+XcBuQpC/XAkvlMkPlcsI72pQfeF3BxJlgVfm+gXXj2c+1f
WSZs0xdqa6TrKRfYdm8hE7Y0pMs1IVtNMAZ2yTNh0CZtG+0uymNusyITvFhV
3bT5V31Yk4ExwUAlqu8Vcr3/dLMrwYQ5r5h4M31/pCl6SKkxoTMN86CtLu5y
PEyDCQKtK9ppj5kdFtPXZEKlcd38Fvr+OJz434AWE6b6SoG2bX/HY3tdJgjK
5qfQllecXC+sz4S0bN1a2h83y719spwJGkliI7RzIlfsPmDAhIkgQelWer5l
W36rr2JCcEG7Lm1h9Vi5eCMm1MTxetJOjmtezgtMaPy3+DRtFq+Eve8aJkQ+
2Z1Du9LXJui1ORPqtvW20nboiL5kuo4Ju/nd/9H+uqb+bu4GJnBGyxlt9P27
2Gowwp4J9oduUrQNRquY25yZ0JXmd5T2NebrTDE3JgxzWKG0J12+aFR5MEHM
VZ37ecfLv3MP7WLCffkby2kXVQuzWLtRP+948NFenWyzUvAgE7rFc0Pp+InN
7iWlR1D8twvdaP+dG2S09zgTbj/uMqPtYhxRRpxkwrtiNw3aj4NioesMExa3
zhOlrZCRXhFzjgkgTn6j+3f0XeFai4tMuOXnU0n7vWTN86nLTJBudU2kzbbs
tLwfz4TVu2IP0C5XVNoUmc6E56p58rRNfno4bS9ggqzwN2XafNtPub4oRfu0
y9OCdkXNHUr/GRMsmO07aEfo1e5MqWWC2TOLUNpr//vmI9zMhBP7laJoL1Kx
c57oYMK8IN5k2sOpxda9H5hwqEmqlLbjZ18zx49oX+40NnLfTyizG/rQfLwd
B2gv825ZsfYrE/j8/OfR9V7NPK1dMsQEfolmTdp8g6vUWCOon+/5HWn7LhtS
vj3GhLJo7Cjtdr8bixQm0b4fPJ5EG/LsJC//Rd/P4BTSltEt4Q/jU4PGD/ve
c/ehQHncR0gN4h1DftOOLRl6bSKnBsZJhBI9P+PykpJFuBqMXLTeSLuv6kzy
iK4a6Bj5hNO+VGd//AWowRyB5hja8449tGw8ogbqmJ0D7eO6shJtRWrQFv3A
hLadmfmHpz/VwHSMY0SbcAzOvau1FKY7OjRpJ2hUf761cylIryjUoj1/Rk7p
atJSeHfvlD7tTQFxV3Q6lsKvFDHuvsV/kBSql1KHjfzZ3OeHxO998VuvDpFy
vly7mdjUiEWog7WeJdeyYvKfHZ6og9c5I65fdn3ivfFXHY7ct+L6g9AxrHGF
BqSb7+F6ZMUii+m9GtD/OZnrW1hri36mBpw52sm1veRF9z3dGrCYpcTNpyMp
WN1SYRnc5QRw7czcPoY5LoOxlVVc3+L4uwxVL4NIlucK2sre5vFF08vgtmYW
1ymSSk0RyzVhv+UA1z+cVC3GAzXB6p6KAW24SZTtytEEBmsd16zM9SkfPmqC
KnhyrXwv8LjjYi1YIhrCde+Wiv9CHLTgDvsM1+l/pDjxV7SgLuwy1xXT+j1J
DVqQbZXAdTff1jmpQtog4JvEdXL11Sv5oA2REbPedr5TpSxEG8ztErkeGLIY
2vtAG9R647gOtSkswr9rw8vWi1y3FqmGBEqxwGF1FNeDVl8lNmqz4K7GCa7z
zyZop6xjwSr2Ya6D6yw3/NjJgvll+7lO23YhKjaCBWrZ/ly3DLRUrbzJgnX4
bq43dS591P2YBXmNXlw31hzLiOxgQUj5rAsFfYsiJliwUd5ntp61jjVh0jqw
d+ns91t77aOPsnSgZGDWIuGbNh+x1oHW4D1c/2hYnjjspQNZr2fdqiDf6x6h
A9ZyvlyrFsdaEjd1YB571gFbxPIGy3Tg1sZZz9+cWFvwRgdqNs86ayPed3RC
B9TtZ52fYK6cKK0LD5xm/eiT17ZCXV3Y5z/rPR8C5cxtdaEocdZL3hxsbfPT
Be0vs2Ysv2LuE6ULSiw/rpmXcoqm0nSB13nWsatcrD5W6ELinlnzfhR586Jb
FzZ6zrrsW92SgildMDGf9eGJczv/W6gH2xfPui9PT2tKTw+EPs3Gs/V5O+Fk
owe70mb9K9ShqvSsHiQvmLV8TzoVeFsPgmpm+2VsNfYPq9AD3bOzni+68Khk
jx7Yb5h1V7Ph1MyMHoirzPr/AEgR/vY=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1: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
u5GgpdacyvgS+eE2vwcJoQ6PrzGecu9XfuFNwhnp4TjG2b/HhtJ9SAjStQtj
7HL+T+5BXxK23Xi9lfFiVY49m3agerZvNGZcXMOjobGThOgLegRj8f8kH3zb
TYJph/Ek00+YlurKK3tJaPQ8X8e4fbtRoe0BEhTz391krJdms5orDM3T4VEE
45Qmz5Inh0m497l9C+N/i4IM9oaT0N41qsPY3TCynDhBwrretMWMS4MS4dMp
EnYcPtPMzN9/aRp70WkSnpf6PGIslX2j8lwsCS91diUyrjPJi/SPJ2GLhHMg
4yMdhevME0jwSOuwYKwW+nSh/DkSyp3vrWDcKVRbPX2ehAVv2qeYvBhZtFk8
SCbBtibkAeOR7i/c8ZdI+Kzz4Tzjq0e+v9qeQkJpfMwBxtbiP2NNUknwNY7e
zHj2wT8r6asoTzXVxow9+5c0NF0nYUSuS4xxhbSMXfQNEiaMYyaYfIdHw6af
OSTMHvaoZWz809t1awEJkRVfSxhX1t7yWvmcBFZKQD3jdVeH/HiaSHDbFNfJ
eLmcg9tkKwknNA3nzhvJfGzV/ZmEW99aJZnnuXzzN3X5SoK+m/dqxpWErFF9
L8qf6ls3xio7mlet+07Crws/oxhfvB2lXjJMwqnqiyWMrSy7lA+MojxFv/3A
mGNwjYLGDxI2cadNMC6KvYANjpOgc8mef24/KsOyNyfQ+2YNvwLj97uvLZea
IuHKM0FHxpDvIHT+HzrvaVwY4ztjXLyLZ0nwtNtxmbGoVsmCoxwK8O9CXAHj
8H27p38uVIDxzC+vGX8vkP3lx60AP67ZdDF+qnuqd5OAArAaxTiZvCSWDH8w
XqYAX/hZJOMdho4vVWUU4Nf6R7aMDStKSpbjCqCwgy+asdBauZyFKgow7RdT
ybj3xam0H1oK4Di0dJDxE4uRMx1rFGCPFs3J5P/sa8fwl4DquXJKcO6+HHtk
0XBYAUwC940zPx+uJSb4rlgB7E7famDsYGr2+dlPdJ5hZD5jwiU4N09NES50
lyQxvqxc8y1jmyLQ2+/OecnsMpmLqYrgsrg8lbHdnqQLmq2KEP5QYc7Jn4W4
64SV4Jx3ZArjgwL3+3dvUILZ0O2XGXsY29TyRyrB3e93LjEW45f45vxUCSJv
Gc35zace9mv/lCB7THHOn7mPYQ2rlCH70NY5/1i13HxmrzLUKjTMOQNraV55
WxmefqXnzncUSvDc1aUM68vF557fmhqsZCGlAo+qf83Zjdw6gbmogH921xXG
R4N8FbjPqkD8kbK5+jPKAtyHa1RAae+5NMayO8ySi2dUoLTV+irjdCGZxkgd
VUgIGpvzmKu8+a9AVbhtcCCdMVwnyn1zVOHUwLM5a9zekP75qypUy36Zs+z9
wHAXSTUQOvNnzt2bKq+GOKtBaNrSa4xv/BUuS76gBsK5knOunFn5JbVeDUpt
sTl3cTgtzORWB8/jCnNOq7l44R6oQ8LUvDfHtcmVh6hD3h1izgPD5sN7H6qD
c7bcnENtCovxUXWQvy8x55Zi+ZBAYQ3oXyQ858H13wWt1TXAvYFnzvdiLqun
W2oAdznHnINfW2wc26YB/7T+zdWftfnM6cRIDSjWmphz80Dzi9XXNaBUbHTO
dm2KRV2lGnD5ytCcG2qPZUe3asDJb/Mu5PIvjpzUgMCvI3NOW+dSe1REE/T2
jc25pdsx/oiGJrjE/5gz73E7+8NWmsDrMT7nsXqdlJHtmvBxaN4tUhLdnpGa
4GP5c87yjxMtiOuaUBw57z2b+PMHyzVha9q8l9invCpo1wTfzHnfscZ7j0xq
wkDWvO9dNpNNEdGCydx5F/Vs31yopQXydfPe9TlwmZmtFrAvne9/RXtYy7vd
WkAenTdL54KZ32ktWDcwb/JsTvF0lhZcV/g158Q17uu/VmpBFcyb/Stv+8su
LdDQnnf50OsVBdNaML543ocmY7ddFdcG4dr583rztdWmtbVBJnTetn4fJ11t
0PeXz/t3qPOLJzHa6P+J+XolvtzwCrypDUUt8/MyXD/xH1apDWoh817CJ35E
6Is2qMjM+1OT/vTsrDZs7Jif//8AsbsaXg==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1: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
G2b+/lUD8UOtc/4fZFijVQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0]], 
        LineBox[CompressedData["
1:eJxF13k4Vd/XAHBDSSqVsWS+Z7iETA2Is5pEJUMyRJEkRUjiqkgpIRqRyJBK
lCmVRBeJCCFJEoWUJFSGFOXdW+/31z/1fJ7OPXvtNex9UnDytNjJx8PD44H+
wH8bbQmdxsOjCHEvzkB6gjR3qEi99pOAImgXPWzac1+Gm8R6HfV8liLUpvW4
qzyX5Q5tVh1dM1cRXC5I8Pd/luOuCz1qVyD2z8kFL4vU5ikCT/GVGutj8tyR
L0qKVxcowkbt/IvLZitwU8wbPp1SROul1zrNv6zANck7mO2jpAgfZT+o/mIr
cq8dqV5uuFQRjk4XKStcyeLyXBf2jvBQhO475dKl6TTXMMGeR8gXxafU2p2y
hM2NiL55+mQAik90eqCzmRK3IXJUeuoJRZAKkzNe06bElQwxvHUsQhF2/Vks
Ru1R5toHRunwRCnC3f0b3gn8UOam+HZWBMSjeHucbnYHL+Sq7Qrs4tz8Lx8q
XB+HGu+R22h9o9QZ4cqq3AJrKV6fB//lR5W7xihPxrPyv/yoccNhSsaXOrS+
LM+yWdsWceuXWejuefVffhZxJTSSK7vfKsKW4xK7uvXUufZK/VY7P/6XL3Xu
nHUiG52GFOHGTxXNykp17uM9S9Y48LFgyGPV77TNGlzfU1uW289h/X/+NLjK
GYFatrIsgC7byrBODW5bTYqylQoLIm29Luzx1OSe7XuisEmXBdpRY6Mt9zS5
q4V755kZsaClNmTb+nFN7g+12XNMrP55pjxztGAfC+jVCUoqYVpc+bme3+nI
f745fdqtt3EseBbIPnO5TourzZe0Izrtn/3/fC72yv7nol9LpDfk/XPdT+NB
vnwWHNV6cWX9ajVu+6h91YMHLJAaMtgSYK+t//2H5xWvQhbwWB4rlOO30uf/
cYxDc1kwyE988Wpy0RcbiTZ9W8SC0LGMqelF3vrUcBoVXcICgbXUsnTtQ/pL
hwp/ry9lgd6VZJPfBsf0jQZrG/nKWLB6lohbgNpJfbCubntbzgIPoydNczMj
9JcVVnwsqGDBaPecxCTRc/rqcmUDMU9Z8ODATeUNeRf02cElo97VLGBk32bv
o2P05bsf8po+Y4Ghq4f31j2x+vPWPxBaWMeCKUr3Es/nXtafk31PdNpzFkS7
PqusnnVNf5porvT7BhaUN2+lT2/4qP/HN4ssbmRBiu3OlpKnkgYjLTfV4ptY
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

         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {10., 0}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{9, 20}, {-2.370538073535859*^-13, 
       0.0061242003948290295`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Delta]BPG\"", "\"\[Delta]P3G\"", "\"\[Delta]P2G\"", 
       "\"\[Delta]PEP\"", "\"5 \[Delta]PYR\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1/3, 1/3, 1/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.769040408088896*^9, 3.7690404546225567`*^9, {3.7690411153136044`*^9, 
   3.769041139874069*^9}, {3.769041205225243*^9, 3.769041223432848*^9}, {
   3.769075321636544*^9, 3.769075467746912*^9}, {3.769075542817019*^9, 
   3.7690755658512583`*^9}, {3.769075624718412*^9, 3.7690756924173098`*^9}, {
   3.769076011512532*^9, 3.769076079736052*^9}, {3.769076197763465*^9, 
   3.7690762283117647`*^9}, 3.7690762897322702`*^9, 3.769076322596464*^9, 
   3.769076371758964*^9, 3.769076422599306*^9, 3.7690833674365263`*^9, 
   3.769083527767881*^9, 3.769083565634512*^9, 3.769083726292507*^9, 
   3.769083811385626*^9, {3.769083866264555*^9, 3.769083877469214*^9}, 
   3.769083935192078*^9, 3.7690839766403503`*^9, {3.769084031869996*^9, 
   3.769084043178914*^9}, 3.7690841111645308`*^9, 3.769084225853574*^9, {
   3.7690844033492193`*^9, 3.76908442564826*^9}, 3.76908447840904*^9, 
   3.769085784642898*^9, 3.7690915822076902`*^9, 3.769092929991523*^9, 
   3.769093339855731*^9, 3.769093412685602*^9, 3.769095203263855*^9, 
   3.769095234207341*^9, 3.7690952871846123`*^9, 3.769095360175591*^9, {
   3.769110102598781*^9, 3.7691101114603977`*^9}, {3.769110144263361*^9, 
   3.769110168502372*^9}, 3.769110552028315*^9, {3.769110950953999*^9, 
   3.7691109710806313`*^9}, 3.769111007558845*^9, {3.76911116499158*^9, 
   3.76911119412208*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
a/0q4quB/h++WyG/
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        LineBox[CompressedData["
1:eJxF13k4Vd/XAHBDSSqVsWS+Z7iETA2Is5pEJUMyRJEkRUjiqkgpIRqRyJBK
lCmVRBeJCCFJEoWUJFSGFOXdW+/31z/1fJ7OPXvtNex9UnDytNjJx8PD44H+
wH8bbQmdxsOjCHEvzkB6gjR3qEi99pOAImgXPWzac1+Gm8R6HfV8liLUpvW4
qzyX5Q5tVh1dM1cRXC5I8Pd/luOuCz1qVyD2z8kFL4vU5ikCT/GVGutj8tyR
L0qKVxcowkbt/IvLZitwU8wbPp1SROul1zrNv6zANck7mO2jpAgfZT+o/mIr
cq8dqV5uuFQRjk4XKStcyeLyXBf2jvBQhO475dKl6TTXMMGeR8gXxafU2p2y
hM2NiL55+mQAik90eqCzmRK3IXJUeuoJRZAKkzNe06bElQwxvHUsQhF2/Vks
Ru1R5toHRunwRCnC3f0b3gn8UOam+HZWBMSjeHucbnYHL+Sq7Qrs4tz8Lx8q
XB+HGu+R22h9o9QZ4cqq3AJrKV6fB//lR5W7xihPxrPyv/yoccNhSsaXOrS+
LM+yWdsWceuXWejuefVffhZxJTSSK7vfKsKW4xK7uvXUufZK/VY7P/6XL3Xu
nHUiG52GFOHGTxXNykp17uM9S9Y48LFgyGPV77TNGlzfU1uW289h/X/+NLjK
GYFatrIsgC7byrBODW5bTYqylQoLIm29Luzx1OSe7XuisEmXBdpRY6Mt9zS5
q4V755kZsaClNmTb+nFN7g+12XNMrP55pjxztGAfC+jVCUoqYVpc+bme3+nI
f745fdqtt3EseBbIPnO5TourzZe0Izrtn/3/fC72yv7nol9LpDfk/XPdT+NB
vnwWHNV6cWX9ajVu+6h91YMHLJAaMtgSYK+t//2H5xWvQhbwWB4rlOO30uf/
cYxDc1kwyE988Wpy0RcbiTZ9W8SC0LGMqelF3vrUcBoVXcICgbXUsnTtQ/pL
hwp/ry9lgd6VZJPfBsf0jQZrG/nKWLB6lohbgNpJfbCubntbzgIPoydNczMj
9JcVVnwsqGDBaPecxCTRc/rqcmUDMU9Z8ODATeUNeRf02cElo97VLGBk32bv
o2P05bsf8po+Y4Ghq4f31j2x+vPWPxBaWMeCKUr3Es/nXtafk31PdNpzFkS7
PqusnnVNf5porvT7BhaUN2+lT2/4qP/HN4ssbmRBiu3OlpKnkgYjLTfV4ptY
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

         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1: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
3uTMzLz/B2j7KMQ=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1: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
0ys=
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {10., 0}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{9, 20}, {-0.00018782054905757835`, 
       0.019999999999999345`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Delta]ACE\"", "\"5 \[Delta]PYR\"", "\"5 \[Delta]NAD\"", 
       "\"\[Delta]ATP\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1/3, 1/3, 1/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.769040408088896*^9, 3.7690404546225567`*^9, {3.7690411153136044`*^9, 
   3.769041139874069*^9}, {3.769041205225243*^9, 3.769041223432848*^9}, {
   3.769075321636544*^9, 3.769075467746912*^9}, {3.769075542817019*^9, 
   3.7690755658512583`*^9}, {3.769075624718412*^9, 3.7690756924173098`*^9}, {
   3.769076011512532*^9, 3.769076079736052*^9}, {3.769076197763465*^9, 
   3.7690762283117647`*^9}, 3.7690762897322702`*^9, 3.769076322596464*^9, 
   3.769076371758964*^9, 3.769076422599306*^9, 3.7690833674365263`*^9, 
   3.769083527767881*^9, 3.769083565634512*^9, 3.769083726292507*^9, 
   3.769083811385626*^9, {3.769083866264555*^9, 3.769083877469214*^9}, 
   3.769083935192078*^9, 3.7690839766403503`*^9, {3.769084031869996*^9, 
   3.769084043178914*^9}, 3.7690841111645308`*^9, 3.769084225853574*^9, {
   3.7690844033492193`*^9, 3.76908442564826*^9}, 3.76908447840904*^9, 
   3.769085784642898*^9, 3.7690915822076902`*^9, 3.769092929991523*^9, 
   3.769093339855731*^9, 3.769093412685602*^9, 3.769095203263855*^9, 
   3.769095234207341*^9, 3.7690952871846123`*^9, 3.769095360175591*^9, {
   3.769110102598781*^9, 3.7691101114603977`*^9}, {3.769110144263361*^9, 
   3.769110168502372*^9}, 3.769110552028315*^9, {3.769110950953999*^9, 
   3.7691109710806313`*^9}, 3.769111007558845*^9, {3.76911116499158*^9, 
   3.769111194358007*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Subsubsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "*", " ", "the", " ", "response", " ", "of", " ", "flux", " ", "to", " ", 
    "from", " ", "the", " ", "step", " ", "perturbation", " ", "specified", 
    " ", "above"}], " ", "**)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xx", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0.005", " ", "x"}], "+", "t0", "-", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "600"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", " ", "#1"}], " ", "&"}], ",", "19"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meanResult", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", " ", "#1"}], " ", "&"}], ",", " ", "19"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "<", "20"}], ",", 
      RowBox[{"j", "++"}], ",", 
      RowBox[{
       RowBox[{"result", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"rates", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "//.", "rateEquations"}], "//.",
              "assignments"}], "//.", "parameters"}], "//.", "timeCourse"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "xx"}], "}"}]}], "]"}], "]"}]}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "<", "20"}], ",", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"meanResult", "[", 
        RowBox[{"[", "j", "]"}], "]"}], "=", 
       RowBox[{"Mean", "[", 
        RowBox[{"result", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", 
           RowBox[{"1", ";;", "100"}]}], "]"}], "]"}], "]"}]}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{"xx", ",", 
         RowBox[{
          RowBox[{"result", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "-", 
          RowBox[{"meanResult", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "19"}], "}"}]}], "]"}], "]"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"xx", ",", 
          RowBox[{
           RowBox[{"result", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "-", 
           RowBox[{"meanResult", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "4"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"SwatchLegend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<GLT\>\"", ",", "\"\<GLK\>\"", ",", "\"\<GLYCO\>\"", ",", 
            "\"\<Treha\>\""}], "}"}], ",", 
          RowBox[{"LegendMarkerSize", "\[Rule]", "7"}], ",", 
          RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}], 
        ",", "Right"}], "]"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"xx", ",", 
          RowBox[{
           RowBox[{"result", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "-", 
           RowBox[{"meanResult", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}]}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<PGI\>\"", ",", "\"\<PFK\>\"", ",", "\"\<ALD\>\"", ",", 
          "\"\<G3PDH\>\"", ",", "\"\<G3PA\>\""}], "}"}], ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "7"}], ",", 
        RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"xx", ",", 
          RowBox[{
           RowBox[{"result", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "-", 
           RowBox[{"meanResult", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", "11", ",", "12", ",", "13", ",", "14"}], "}"}]}],
         "}"}]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<GAPDH\>\"", ",", "\"\<PGK\>\"", ",", "\"\<PGM\>\"", ",", 
          "\"\<ENO\>\"", ",", "\"\<PYK\>\""}], "}"}], ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "7"}], ",", 
        RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
     " ", ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"xx", ",", 
          RowBox[{
           RowBox[{"result", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "-", 
           RowBox[{"meanResult", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "16", ",", "17", ",", "18", ",", "19"}], "}"}]}],
         "}"}]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<PDC\>\"", ",", "\"\<SUC\>\"", ",", "\"\<ADH\>\"", ",", 
          "\"\<ATP\>\"", ",", "\"\<AK\>\""}], "}"}], ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "7"}], ",", 
        RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"xx", ",", 
          RowBox[{
           RowBox[{"result", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "-", 
           RowBox[{"meanResult", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "6", ",", "15"}], "}"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<PGI\>\"", ",", "\"\<PFK\>\"", ",", "\"\<GAPDH\>\""}], 
         "}"}], ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "7"}], ",", 
        RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.769040529909898*^9, {3.769040665000381*^9, 3.76904070469685*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1: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
0Qs+b6H5CgP59wr4Ywi9L6NKZipk/wcEsj+Z
       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJw1l3lcjfkXx1N3Y4wla2NLIllmjG2Ie2+aX4OsZckSskx2SqW6bbc9lIrQ
Yl9LSSST5d6bCJMlSzOihhIpWbKUnd9znvPRH+P1mXO+53ue7+c53/d9ui9Y
7fSnsZGR0QzhP/Tv+YbeLnHGFrZG9BfVXRVR55jXVcpa62iuGlOpaZslZ717
XFdVszv73JXNkK/orLp2Vfhrzrq+1EwVVyAUbMna1tBB5ZTXNaKuNev8U+1U
bbNGCxVZu15soxLLdcD6R61VKcnCnxnrye1aqVyoYGf0c6S5qpvYILRTUxW1
N7o76pnJVPuFcnd6oN8mJio3+uvF2ryZkcpaLIj1bh+Vz4RqEX3RX+Nbpdje
z4hveKn0EMrtG4DnPfBYOUj8g15ZqmwUjq9gCPTbU0p6XMdh0G0Ldf70wDbQ
R+/plOIBQn94pBP/tcV+/Z7pRD/s0I/fK534uPY4z7S3OtGP0dD73unEcg6o
t+yjTvRjPLTRF53oxyTkL/qmE/1wRP2rRnrRj6nYv7iJXvTDGflnjPWiHzNx
fgkmevH4XJA/WaIX/ZgL/VGiF9ubj/3jpXrRj4VY31qmF/1wY10RKNOLfiyB
X3dketGP5VjfVa4X/ViFfp3ketEPd9TzlutFOzyxf6RcL/rhjfVRcr34uL6s
XX3ketEPDfZ3luvFcoHYv7dcL67TIr9Ophf9CEV8l0wv+hGB9fYyvehHFPZ7
INWLfqxH/nKpXvQjBv3XSfTi8cXhfF0letGPBMT/NmE/EvE8vU3Yj23YLwB+
JCP/UhP2Yzt00ybsx05oOyP2Yw/qPfmqE/3Yh/1tvuhEOw4iHvxJJ/qRhuf5
64NO9CMD8YfvdKIfWdDGjTrRj2zs1/GtTvQjB/V7vdaJfuSiXt96nehHHrTT
M56P06hnV8PzoUPcGvORj7i8guejAHH9HZ6PQuhb13k+LkEPPsvzUQS9O1Ep
+nEV2va8UvSjGPrZTaXox83v/d5Tin6UYP/+lUrRjzvQNo+Voh93v+tapehH
Odb3e64U/biPeGS9UvSjEnrla6XoRxXOz+GtUvSjGvFOjUrRjxrEK97xfVWH
8036wPfVC+SP+sT3VT32L/vM99UbrF/4le+rBqwv+8b31XvW5ruNVKIfH7F+
bBOV6McX5D9pohL/v1EPUVdojFXMD9auJibgB+v8YBPwA/kvTcAP1uZTJOAH
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
       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJw1l3k8VVsbx08IyZCEFKU6IZVGpdI5pyKalEZFrqhuw71FUtKEMmTIdMiU
DIUoFJVwzkGkRCgVpSLlmq40eym9z97Pc88f6ftZe6+99vqtZ333muB4cP0u
KQ6HYwP/MH/vfTOwC5GaKID/cgIOCHg+Xdb544Yil35fzLNs8RiVJYfss30R
T+FFivNiBZY9q9QW8Kqr4KeI7TLa83khpdChCrbHuhvz1ueP8+lSxfZIpbm8
UVkW0CO222TN5rHdaWK71bZZvNgY+Gkhr1adybNjOtRGtk6dzhvPDhD5GH8q
jxmexQTku/8a8C5Ddy8mIZfl6PF2Mz89ZDN/Lm8K2yFyp+tEXjf05jMV2dFV
l8cOzwg5R1GH5wLdpcxEHrTR4s1hf/S+j9R532H6So2RdR1H8pjXtTZBtlmk
zDvOvPBCur5fjreYnUBkzu8hPPavAHl0eN9iNo+lyOtsuxazr2uO7OlSuZjN
wwI5cdFLEdvdSmSHho8iNo/VyDOr+kRsHmuRi6M5YjYPa7o+REbM5rGRrl8l
L2bz2ELPqx4uZvPYSs/TVBGz02dH86WuKmbzsEfWOztSzA5vB/LtBjUxm4cT
coGaupjNYzfyS2MNMZvHHuQ8vqaYzWM/cu+s0WI2jwPIRkpaYjYPZ2SNJ1pi
Ng5XZEuvMWI2Dzdk57FjxezrutP4ksaK2Tw8kMeoaYvZ7k4id7poi9k8PJEX
irXFbB7eyDl92mI2Dx/k7gk6YjYPP+SohTpiNo8A5PXLdMRsHkE0/6Y6Ynb6
QpCD9HUwjzC6XkYH8xAi5z/VxjwuIO+O0sY8YpAHV2tjHvHIE/vGYh4JyCei
x2IeScjJRmMxjxSar8IxmEcqsiJ/DOaRjhxeoIV5ZCJ7GGlhHlnIf8WNxjxy
kJWlRmMeucgcJ03M4xbNr1gD88in+zU0MI8C5Jn71DEPEXJ9wSjMoxi5X34U
5lGKbLVJDfMoRz6UOBLzqECW71LFPCopP2NVzKMKWcNrBOZRg5wXp4J51CGb
LVDGPOqRRzcpYh4vkP19qD4akWvnKWAeTciCT/KYxxtk7m05zKOF8vWVxTxa
kdftHIp5tCEbrJPBPNqRQ1dJYx5dyFVbpDCPHrr+yBDMoxf5fRoH8/iCnN70
W8Tm8Q3ZPXJQxObRh1x84peIzaMfWTfyp4jN4xfNZ8uAiM2DMwnzchoQoT+Q
R48bEKE/kAWjBkToD2QbywHcrxSQa4sGcL9SRLY8/BP3KxVkB5dfIvQHsv/t
QRH6g54/iYN5aCLnqw7BPLSQ5xpIYR7ayA1/SmMe45D76mQwjwnI9X9SHpOQ
2/XkMQ896r9kGOZhgBytPRzzmIqcuEgR8zBC/jlRCfOYidz0XAnzmEPzYauM
9WFM9+cpY32Y0PVtylgfC5G535WxPhbTeKCdjUOAnFOkjPWxlObnhDLWhznN
5xRlrA8LZOcHSlgfK5FPbFfC+liNfK1bEetjLfI0D0XyB7KBgiL5g8aTOJz8
gay49D9/IK/+TPVhR/N3S4H8Qe8XqkD+QJbxVSB/IFfFKJA/kIOuK5A/6H7o
D/1B73tDgfyBLJ+iQP5Abg5QIH/Q+PcqkD+Q7QQK5A96nooC+QNZu2EY+YPW
V+ww8geyp80w8getJ9Vh5A9abxXy5A/kEcflyR/IO6fJkz9ovprkyB+UV5Ac
+YPex1SO/IHs3iNL/qDxJsuSP2i92ciSP5CLR8qSP6ge64aSPyiPyKHkD2Sh
Pe1XqcjxhkPJHzTeHzLkD8qjXIb8Qe8fIUP+IHaUIX/QepstQ/6gehgiQ/5A
vlwnTf6g902SJn/QenCRJn/QeATS5A+6X0Wa/IHMmTOI+1UFsVkQ7leVNB5Z
OfzeraI8PbXwe7cGOXkiF79365BV1afi9249y573Mhbg9+4Llps9xLb4vdvI
8rrSiwfwe7eJ5VBO81H83n3DcrfxhbP4vdvC8s1slQj83m1lOWbG2wz83m1j
OSx4bQF+77YzXGyhL/cIv3e72HbNvbea8Hu3h+F0SVRGL37v9jLcJ6v/QIaP
/mC4fqh3+xg++oNhtzPN+bP46A9ggXd2kJ8FH/0BrHup+t96ez76A9jg15Mh
21z57LxyuALOKEW1CSa+fPQH8EILbbMNUXz0B3CkneqwQyl89AfwMd+nRupZ
fPQHV+B517N518ZbfPQHtBsMObrrryI++gPaJzw60De6lI/+gPaseYJtZvf5
6A9ot7+k9z6jko/+4AqKU3IWWfBr+OgPriDxlEzUmP46PvqDK9D9tqZwln09
H/0B7VtHTF5b/pyP/oD7Q/QffzRo5KM/uILm0/0uud6v+OgPuL9m6PH9Va/5
6A+uIGeN/GZ1TjMf/cEVjEhwOq+v2MJHf3AFM3tNT1XIveOjP7iC3lDl1d69
7zCPOVwBbGEOOmWtmIcxtL8KOxbn+R7zMOEKQq+G2C/hfsA8FkJ/hvvUoq5/
4OMBDth1toXr2DbMQ8DMZ3v8t7/aMI+l8H6j1av9ktowD3OuYN0sh7iW/DbM
wwKuV1KeLZ/bhnmshOc31EdYhbZhHqu5AoFsx4a11m2Yx1p4361vFbq+f8A8
rKE/wT17c+8PmMdGuH/nxF7J1/eYxxaYD9unGV/Xvsc8tkL7bsnVnMhWzMMO
3u/m+KTuineYhz3M74bds+63t2AeO6C9aQ/Xo78Z83CCfEodjfMH32Ieu+H6
/nsBCV8ojz3AHXJ3vRpeYR774fpTPpt4NxsxjwNcgcOdUI10nxeYhzO8X3rK
jpNbnmEerjAfb+oVbac9xTzcIP8dnzbkyNdhHu7QvsS48++WaszDA/pPehBQ
X/sQ8zgJ/XFu5g62lWMenrBe/zj0VmRYinl4A+/Y9NHTTIR5+EB/Lf4fVFNv
Yx5+wHZ6HTVncjCPAKZ+3pW0PbqCeQQx9XU/W3/NBcwjBHjduvl/q7lhHmHA
Pwu6XN+dlaA/gN+565RVXpCgP4B3bU8L2JEkQX8APxkrMLh+RYL+AF7ve3vU
o3QJ+gN47luxS3GGBP0BXOYojhFmStAfwPwt2xZYZ0rQH8CG6zWbhmRI0B/A
s/a1deSmSdAfwG83D48+clmC/gCOmnzNc1uiBP0BLN40c1trlAT9AXx5XfD2
xX4S9AdwcZ+llboV5pEP7HBRxmBJMOZRACwMmJBnfhHzEAGbdDi935qKeRQz
7b8fDNhnYR6lwP8L1q1dk4t5lANLj7qbc+IO5lEB7Lx/+IgbhZhHJfN8HR/F
ZgnmUQX5Z+9yCvtdgnnUAOf5RKhKlWEedXC9Zprajc/lWB/1sD7uLDnztqoC
6+MFtC+o/Lkx6CHWRyO0F20umjr9EdZHE6yHeanrH2dWYX28gXadW/LaQx9j
fbRAu2nAR6t5NVgfrdDuXKkTPK4W66MNxuP5LKwusBbrox2ed9tNj/euFuuj
C9p9y/NsJtRhffTAei8+XPTOsg7roxf6F60MeWFTR/6A+5/2bNtrXUf+gOsv
3euQnkP10QfPDxMFLR+sJX8A77M8KZVXi3n8gvpc3GFisqmW/DFZIPgZH6t/
v4b8ATzJdusj0WPyB/AwxSQLYTX5Y7LAc2rZ4bLVVeQPaBc3usd0VpI/Jgs4
1hppli4PyR/M/a22h99XkD8mC4pveJY/sfjPH3B99OplepfKyB9wfcl+pzk9
peQPuN5qROptkxLyB1z/SbjojoyE/AGctcL50MVC8gewyHu+z9J88gfwi+RB
r/488geMf9fKqOuPbpA/oP2reGHJ0evkD+C/T7z6mJhG/gC225sp1k4mfwDP
3Cut3R5D/gAOjXk2dXso+QN4z8sPTy6cIn8Acww5TydPkaA/GN6W1B1wQoL+
AE588Tl3RYAE/QEsfLbUYG64BP3BPO+rtJ9VlAT9AWxYMr3bNUaC/gBu6vba
lRonQX8Aa+97M7wzXoL+AM4461RidlGC/gDW2/90jzhegv4AtrrkYOsQh/vV
RuB0BY1U4xjcr7YAL59mXLQyCverrcBvIteYXw/H/cqOyW98qXFDEO5X9sz7
HP5T0+gM7lc7gPumX6nsd8b9ygnY4djF3AIb8gew7j/LtBpPkT+Ai6fvGGEf
RP4ATpD7O6FVSP4AljXtfFQSR/4Ann8lKtM2ifwBHLu/aEbjZfIH8LzbNpJ1
6eQP4BtmD9rvZpI/gD+7fr2gmE3+gPURlGcepnuD/AHtXkGNhuk3yR/QHrL5
V4lWHvkD2lX971scukX+AD7bePln1m3yB7D0gqOu1XfIH3D/k6Y9YY/yyR/A
HIfBuLS75A/g+XIGRg4FWB9C4Mlmg4u/FmB9XID+1g8c1HYqxPqIgXabcxuO
XCvE+ohnrp9lsKG2EOsjAa5PsR2mXEP1kQR8dHWA7dVCrI8Upp4T2k0cCjGP
VOBDLqf74XnoD+BMnWMz9hZgHpnAVvJd2eK7mEcW9Gfa8zHoRz7mkQN8bcbm
YRr5mEcus56LIuO072Aet4A/XJ3/Uuk2+QN49NujZ7rzyB/Q/0CD1u7CXPIH
tC+z7dxz8ib5A3jIQPFR4xvkD2CDo2Pkq7PJH8D1kzW/6F0nfzDsKXY5lUH+
ADb3GzGlMY38ATzix1h/0yvkD6beF7wvu55M/gB+maDbOSuR/AH8vuCeUVwc
+QPYX/f3u2EXyB/AvY+DVPPDyR/A7oYmH7cGkz+Y+tB9IHntQ/4AbphtOVvp
FPkDuD3bcWGhC/mDqZeJov6NtuQPYE9Fx7RqM/R5F7Bg3LIMtV3o8x5gedkN
Pd+d0ee9wPkjtU2b3dDnX5j35VRzLY+hz78x45Eb4zL3uAT9wdRjzvdn14/j
ftXPtJv6Ty72wP3qF3DzbCdpD3fcrzh6Ao5lhv2f3Ycl7HKWAt4T1VVv6Iz7
1VBgz0k/GiJ34n4lB8zZ8cRp/CrcrxSAm2Mct92zJn8A68r/3jB7Hz+U9Qdw
eyTf/9gR8gfwtdln3i70JH8ATzM08nL3IX8A72wc0P0ngPwB/POTlpJpKPkD
mPePw1HlCPIHM76Y5fdbI8kfwLPNxn7MiyZ/AKe+rVA7Hkf+AF7tKvowI4H8
AbzYW69kdyL5A3jr3ezB1CTyBzPeTcNlnv/nD+B5Hs8dPqWQP4D3lq368J32
K2PgiomtKe+vkD+AW8q2teSn0vmDGU9hB+9QGp0/gI0+PUxUSafzB/DC4b0z
QtP5bB5LgY3vdW//kk7nD+CcgxOaTa7S+QP49JDTdxyu0vkD2P/st3H7r9L5
A7i1pi3B5irmsRZ4qMf3b1Ou0vkD2Oa21KTmdDp/ANecVtx+Ip3OH8BuUVx5
TjqdP4Bf7Yoo+yuNzh/AY902rihLpfMHcM/8FH/5VDp/AM9puem16AqdP4D/
FOVu/OMy+QNY0dl83pEU8gfwkT/8d3gnkz+APwbqc30pjwPAauObKs4kkj+A
4xuPzRlIIH8w85OdIOqKJ38w7zcmOfF1LPkDuOzKWaNn0eQP4OS3BrHPo8gf
wIK9/YUfhOQPYNnFbjtkIzAPb+DS72dGm4aRP4BnTlWvVAshfzDr60PCyQ+B
5A/g7pXJIZ/9yR9MvdhKbeH7Yh4hTP1NeP6g5gz5g6mf1PFvUr3IH8Cjq+0O
nz9N/gDuNZ/+bOcJ8gdTr/tfWDw9Rv5gxmNouvblUfIHUx/Llu+C+kN/AI/g
HruY5Ub+YMZjrpdxxI38wcxfebNjtRv5A9hg116p60fIH8AO0WpWKu7kD6a/
/ePPdR8jfwDnTxGGmZ4gfwBH37s/+/sp8gdwvWncazkv8gdwqFrPQYk3+YOp
/yn39sefJX8An83dviLGl/wBbDorZ32OP+ZRClzkYVr5KoD8ATw3aLBdPZj8
wYzHRrnTJoT8wcyXi0p0TSj5g9nPUqbGfwrDPGqADxgsqVaJIH8A1x4wydQX
kj+AixVOi+dFkj+A36/9dmthFPmD2Z+e+J2cdYH8weT1zkNRK5r8AfyyqDnz
YzT5A5jLsbqbG0P+ANb7u+ObUyz5A/hJj6vZ71jyB7C9WnDe2Tg6fzDPm/jL
80scnT+Y+tddp78qns4fwFm3RjkGxtP5Azioepd+HtXHN2Dh3brL5fF0/mCe
Z9S/oDiezh/M/rvCzfVyPJ0/gA+NWaboGk/nD324fvBLz7R4zEMK+OvmLr2n
cXT+YNr1wr/sjqPzB3CiusaVjlg6fwBPe7VRbBdL/gBuupBSVhJD/gDmrSra
OyaG/AG8Upq3bU80+QP43ZNnjtcvkD+Ag5I7lnVRHlrA7sXv30yKIn8ACxr6
/mcTSf4APt+rbhskJH8Ai+2S6yQR5A9gI+UpMt/CyR/AVX/Jxk4PJ3/oM/U2
fer+MPIHsEa11tTsUPIHsG52udL3EPIH8DWtYXKJ58kfwP6rAlPtg8kfwKHJ
m3/MCSJ/MPPTVv9lQiD5A/jyZlcdwwDyB3B+h1TmmnPkD2BTn/SGYKqPpcCW
B77bd/mRP4BP2G04t9uP/ME8ry312m9f8gfwiNaZZbd9yR/Ae2bPcwqk/Wot
sNm1SLWTvuQP5nreqR8BvuQPYOG8VZp5vuQP4G6+zpwfvuQP4HVq/2tY70f+
YPpfluVV7kf+YNaPqte2Nf7kD+D22HS/dn/yBzDXc4py5DnyB/N+YRqV6wLI
H8Bnv2le0AokfzD9+R6Z/28g+QO4ebfW7odB5A9mvSxvfpkZTP5g2g18rcLP
kz+Y9SL30dcjhPwBPFrl8bRZoeQPZvwPD9emhJI/mPUWVDpzVBj5A3j9zqG2
XmHkD+B55i5bOv/zB5Pn73nWVuHkD2CDzGXHr4WTP4BP6RWPkokgfzDjLeE5
b4wgfwAX1/w0vEj7VRhTL1JuOa8jyB/AnbG8y+pC8gdTP52m98yE5A/g+K/F
rfuE5A/ghb+eP/MTkj+Y+ZRcCo2j+kgCLkjO1k4Vkj+YvM1iA9OE5A+mflqk
RyYKyR/AUU0b+0OE5A/gDFO/kKN0HswCNkk+aL5FSP5g7l+hEj5DSP4AlpWe
IT1ESP5gnmfsMKkqgvzBjCf+n4iwCPIHM/7HxZ+tI8gfwIdeR3YqRZA/mPqd
ct/wfjj5A9hOZL3neDj5A9hwgcZGI8qjAnj5Brvrb8PIH8BLb3zSCQ0jfwDH
GjzYKfjPH8CVy8O4n0LJH8BjLOOVYX2gP4CL5PnizaHkDya/Vs3HiqHkD+Da
XwopgSHkD2a9aV8MkAkhfwCPErbY+JwnfzD19ONxh/J58gcznw4VnUnB5A9m
PW46OIIfTP5g6kkzvauNzuddzPoub6mJCSJ/MOvvs9oUG6qPXma/6EibPDGI
/AFs06f98kcg+QP454DS5sZA8gczvyebj96n/aof+MG5TRqSQPIH8z7dCq2l
geQPA/j+W9J0qi6Q/380b553
       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJw1l3k8VWkfwG9CeNsXqWmUEk2rtJmGey8R00iltBothDYpl6y5bvZRdlpk
iUSLuaVFy71XKKaUdaZI2r0mkp2kmff3nN/v9cdM38+55znnPN/znO85OrsO
2u5W4vF4m+E/7P/FPbPso5WmC+GfvAl28/ghLesKtFWQw+Sz+VZvfMfnDeNY
XLJ/Fl/jWaa7iQZuH9ypx39SDn/Dcbtdui4/uggGHIXbv/0wg29boB3SMga5
/4MOf3yeJYyI7Ht5Gp8bbiJy5xdt/ulT8DcJ+VzeFL49G3AK8l2vyfyp3Aki
d63T4rPTs9RB5gk1+Vkw3LMZyGeE4/nO7E8P2Wf9WP4P3IDI671H81thtJA5
yHd+HcHnTm8+csondf4hGC7TAFmepspfxP0hR3oM5ffC9BUtQXZ35fHZ5a4z
Qr73dcDEj13wcmRv5x4TE24CaT5GtZvgeSMbtX0w4XyYIRfufW7CXa4FXd/p
WyacD0vivaUybrhVyDv2N8g4H9bIWtObZJyPNXT89E8yzsc65NotnTLOxwbk
9rweGedjE51/Zb+M87EF2b7wq4ybPnv6/dF/ZJwPB+TKUJ6cO72dyOU3h8g5
H47I3RVKcs6HM3Jz9VA558MV2aBQWc752IfsfFJFzvlwQ9a0V5VzPtzp/P8z
TM7p8EBenDNMzvnwpOMvVJNzl+uNrJurJud8+CI/H6ku54YLQPZyVJdz8ypG
TrqgLud8SJCLXqjLOR8hyDE8DTnnIww5TlNDzvmIJB/aGnLORxSyREtDzk1f
NI2voiHnfMQi6zWpy7nTS0B+eEddzvlIRtYIVpdzPk4hh5qpyzkfKcglvWpy
zkcqzV+GGvrIQG4zU0Mfmcj9L4ahj2zksQeGoY8cmt9eVfRxiebTRxV95CFH
9aqgDylyzgEV9JGPfO2VMvq4gcxfrYw+CpAbbw5FH3eQp38/FH3IkFPESuij
EPn1myHoowhZbDoEfTxA1kznoY9SZOvBf3F9PKLxCv7B9VGOvNjrG66PCmTh
0kFcH1XI778M4Pqope1FX3B9PEP2j6H1UYdcuLsP10cDssGKXlwfjcjNP/TI
OB9vkLW+65ZxPt7R8SZ2yTgfTciuOp0yzkczzb9Rh4zz0YJsvL1dxvloQ5bO
+SzjfLTT/Nz9JON8dNH5u7fKOB89yEbWLTLORz/5W/dRxvkYoPOV/C3jfHxD
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

       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1: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
tyJx
       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1: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
       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1: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

       "]],
      FontFamily->"Times"]}, 
    {RGBColor[1, 0.75, 0], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], 
     StyleBox[PointBox[CompressedData["
1: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
O6iTDxUz+D2zWfeMhljxf0Nedi4=
       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1: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
wed/Z+4J5/8fdVGX4w==
       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1: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
izI9+4PyeLYy1bJMz/4QXLrafIn+up79Ifh0x+Rr7a7r2R+ClxZPWGJVqmd/
0PPd7gQWX9WzPwTfSXHO/+GKnv0heJiZkda3RM/+oPOZOLLzmCI9+4Oe79ay
oP6inv0hOOL33le2FujZH4Lrn/697voFPftD8P3J7Vxn5ujZH4JnZI64dlbL
eSwT7HXSJO+NhvMIFOzS4ae6uCjOI4jyLeubNWIx10cw5fl93wP6WK6PtYLf
Vod9dU7i+tgguFw7OzAxg+tjo+COx3M9m3IUUh6b6Hw97xzqlsf1ESp4TcTN
ot8KuD7CBA8cfWnuxYtcH9vp/Gvnrnx4ievjd8H2AwLLS4u5PsJpPSZrl4df
5vqIoPo6Ne2F1VWuj32Ur+aLZ8A1ro/9gu1m1fbaVcr1ESU48sHOoKDrXB8x
gj0DanJsUR+xgvP2BDw7VMb1cUzwCNvKRffKuD5OUN77TL57VMb1oRSsvXKq
a2YZ14ea3t/bt0d5l3F9JNLztYNW665zfSQJPta0r0dDKferFMGjX2c2Ny/l
fpVG78fw7f3rrnK/0tJ5vRlRdeYK55FF79fPqdoplzmPbKqHSZlBN4s5j1zB
26Y5dXYs4jzO0/qDe9/cUsh55NP6Q9QVF/7gPArofZtg3uaGnvO4SPWcsuJ3
yzzOo4jGneNqPXI5jxLKf9yo16FnOI+rlH906dB8LedRKji++LmNxSnO4wa9
T8E+HrdVnMdN4g49TibGcB53iF2/Zm3cxnlUEH/p6HdjIddHJbFZ+LzSCK6P
KprfMG7Iqliuj4d0/tcO5xcquT4eUz9Y77hxQiLXx1PqXzsOPXI/xfVRQ+/T
vm7/5aRyfdRSfSzZudEd9fGS6meu0cCADK6P1/S+uD4zdEG/ekv96OxPS69m
cr96T/M/GtW5ZRb3qw90vVPSEYMs7lf10nkNs9Fmcr/6TO+vb96tLpncrxqp
P3Y6N2BcBvcrg97i+ve30h213K+MBMdbThh8L5X7VTPBXu0Xujw4xf2quWDt
bxbTwk5yv2op2L7r2E731NyvWgvuPjd9ZUkc96s2xP3+ebY0hvtVW8Euug3L
pu7hfmUlOHSsa1LoOu5XHQQb7K2eXb0c/hBc4Gesqd0FfxBPiv3gcwj+oPmb
PzuujIM/BJevv7d+UQL8IbjaKMD8SRL8QfsLHFk7LBX+EFwbM1iZouX6GED7
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
       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1: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
mP2yLSKH8zFQaP2qvr5Bxzgfg2j837p7a45zPoYK7ftk1+6sE5yPYbT/0LNX
/tNzPjyFDtZHby7N53x4Ca0L/35vxCnOh1zolzYdZgajXnmTH7UTlykKOR8+
Qlfn7rfMK+R8jKP56xK8nA2cjwnkh9vSMKWB8+EntH+nB+2WGzgfk+m+Dv+R
0FLI+ZhK5+k1x3K4gfMRIPQnTukZCwo5HzOEvqk9/OZSAedjltCXNM+t+haw
H3OEDpdP2mF7iv0IFLps8KCFA/PZjyDa/5Ptpx1Osh8L6D39uD+gAjxfJLTH
h3HPth5nPxaT7jxrt00e+7GU1gvxGvw8l/1YTucfsir8Rjb7sVLo1tk5Nw9k
sx/B5P/8htp9WeAH3UdGyMFvDoMfpE3K7mvSwQ+6778Xa2elgB/k55WiRxc1
4Aftt+VYXlsV+EHz/xPY7dQB8IPe07jhZ4/HgB90v0vt9rVEgR+03niP3z/b
CX5I7/vqwaVbwQ/y78Gzif3WgR+k76pL580DP0jLTuo2eXE+oklHXl89Yhnn
I47mi/hlkGwD16t4as/N8sxYyfUqgfS481FdNnG9SqT+BdPzwsO4XqmpvdU/
9t5buF5pSdt8tmnyRq5XqdS/XYzlvRCuV2mk6zbNKl/H9SqD+scf/7d0Cder
TNL5/V7cmc71Skf6SXiOjT/4QfoTxXn1CvCD5qsY5eYSAn5Qe81w95ow8EM6
/+JtyTvBD/LD7skIfRT4Qff7dK5zp2jwg/x4UHhRFQt+kF8OVXs7HAQ/6P1k
fRFgUIEf5PeQVoYwNfhBeVz9cLhMBX7Q+zsx8o/nyeAHzfdh766cVPCD9v/m
m8jANPBD6Cgbzd+v0jkft2h/P7qGrMrgfNyl+aYc2HvlCOfjHtWbKfHln2Ry
Ph7QfsZcauOdxfl4RO1OnpN66TgfNfS+PJ6vj9FxPh4LvX/rFeu3qFd1lMcv
g+LGIh/PqR71+/xtKPLxkurPkOVdMrLx/UHrxZ51LM7G9wedb2yt17lsfH9Q
PpoT/leI36+aKN/uVcfU2ezHBzrv0quT12fj+6OPqB9Px28Zma2UnrO50Pqm
jsNe6PD9IbQqMfTHOB2+P4T2vlqwYKgO3x9Cm14dnxeehe8PoUObI8bHZiqj
JH7Q+CWP2+87iu8P6v/lik5bj+D7Q+iodZtuLsrA94fQL38a8b3iMPghtC5r
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
       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], PointSize[
     0.002777777777777778], AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxFmHlcjWkbx0OmZI0sYwgZxFiOyT7OOdmmBiM1ZqyTTDPZaZClMFmyTfaS
Qs7eRk5DSeqcRNKCjCjLZCnJnkqS7b2v5/r1eftjzPdz38+9/Z7r/vbU7bel
Hn80tLCwmCb+Q/+ef+M4a3dDB2fxvxbDGg43BT1zT7ZvzFx0Z4jJ9YG/XbwV
c/7TQSabQq2v3Ia5XOZkupwnfpqh/cRA0+4MMWBLZsf5MpNHsn3QM1vmViH9
TXbxLmJE5vR5fU3ScO2ZA936mCLCxc+XzBaujqZZNGAnPO/R09RFWiDz5MVf
m2h5Lt2YfcMdTDoxXGF3Zq+bXU0+9NOTWeVib+otDcjctdFXpuditKBvmJ2L
25uk5fVH/yI7059iOK0M7ZW2JifpBzylhalGHF/GYKz/s7WJtus+DO2PGpkC
aMMj0N7kU5pcOkDsL6U6TfrXGZz4OE3KYzR4WG6atN1x4C3/yqU8XMAbynm4
8eA1VXIpj4ngH+vkUh5uOG9PC4WUhzva5zZSSHlMATt/oZDymIr+T6wVUh7T
sf65TRXS8c3C/pKbK6Q8PPF8cUuFtLw5zPeft1JIeXij/aatQsrDB8/HtVZI
ecxD++I2CimPhZjvKzuFlMcSrOe0nULKwxf5jW6rkOJYjrxS2iqkPPwwvkM7
hbTd1Whf004h5eGP58+1U0jDrQO/a6eQ1hFY/3x7hZTHRqxP3l4h5RGE/f3Q
XiHlsRX9BUt57MB4I9srpDyCsR8xnnR8u9H+sR3nsZfZK68d5xGC+fa24zzC
MP6EdpxHOOZ/35bzOIx2bVvOIxLPi/OR8lBj/iI7zkOL/nPtOA8D+r9qw3lE
g32RRxz4WWvOIx7Pe7XmPIwYP9+W8ziJ9pG2nEci1qttxXkkI0+rVpxHCvha
C84jDbyrOeeRDnZpxnlkYD2fbDiPTMyf0ITzyEL7H9acRw7W08GK88gDX27M
eVzF85stOY9reF6B+ihA/w8NOI9CtKdbcB63wHaf5VIedzFe0ge5lEcx2hfU
yaU8HoBltXIpjxJw0xq5lEcZ+GOVXMqjHNykUi7l8Qw8oEIu5fES/Oi5XMqj
Ahz7RC7lUQVOKJNLebwBW5TKpTxqwREP5FIedWDre3Ipj4/gtXfk/Fx3Zl2R
nP0BXn9Tzv4Ad7zB95UV2L+A7ysbcHwB31fNwEk3+L5qCdYUytkf4BW35ewP
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
sht+v7JwpN8vfK0m6JT/A3a+dZw=
       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
     PointSize[0.002777777777777778], AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1: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
8X+RNmOA
       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], PointSize[
     0.002777777777777778], AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1: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
u0c8/OEk+FnHsDHxyv8DJYRbFw==
       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], PointSize[
     0.002777777777777778], AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1: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
       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxd1X9MVfcZx/FbpyFx/oitmXEaWifnHBsbZzVuxnl/jIzgKKmhYUEXxops
jMqKNM6NsJHcmBFaQ4asbpSGEBkLZWMhZMyGsekInSNhrIyVFc2MKbFjrHSE
1dEQE5N97/OgT77v+4cn71z8es55qZ9dp8489801sVjshPslc31reU9py5rP
pGLyufz7xoWioex11sdm67f2Z1mvn+muja+3/suE+2ywbhl1B262fm4ou3Fh
i/XW/nx3orUct8369Xb32W5dmjlwp/XjcoPWmdvL32X9c3fczG7ryswntH5S
DrT+0J3WuNdabm+f9UvuuO791gflY/2xe32jh6wzj1t02Pr7mQc+Yh2XF2gt
l5S1eORay+PmWYtHvrUcV2AtHoXW4nHcWjyKrMWj2Fo8SqzF46S1vL5Sa/Eo
s5bbK7cWjwpr8ai0Fo8qa/GothaPGmvxqLUWjrPW4nHOWh63zlo86q3luAZr
uaStxeO8tXg0WotHk7V4XLAWj2ZreX0t1uLRai23d8laPNqsxaPdWjw6rMWj
01o8uqzFo9taOHqsxaPXWjz6rMWj31o8BqzFY9BaPK5Yi8eQtXgMW4vHVWu5
jFiLx6i1eFy3Fo8xa/EYtxaPCWvxmLQWjylr8Zi2Fo8Za/G4aS0et6zF47a1
eMxai8cda/GYsxaPeWvxWLAWj0Vr8ViyFo+71uKxbC0eK9bicc9aPO5b63X3
w9b9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9
sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sJZLCh658MiDRz48CuBRCI/j
8CiCRzE8SuBxEh6l8CiDRzk8KuBRCY8qeFTDowYetfA4C49z8KiDRz08GuCR
hsd5eDTCowkeF+DRDI8WeLTC4xI82uDRDo8OeHTCowse3fDogUcvPPrg0f+g
YzHdjwc9cFT340FPH9X9eNAfHtX9WO30J+K6H6v9/I647sdqrxyIy3VktZ8q
iOt+rPaaU3HdD+30n+riuh/aI1mt+s9tXLu28o247of2iS0jcd0P7f9tfDeu
+6H9sy8uxnU/pFPl19YmdD+k0zde3JnQ/ZD+60/rDiZ0P6R/9UJvQUL3Q/rV
L8dPJXQ/pHcc/aguofuR6cuL6za2JnQ/Mr3/O/PPvJHQ/cj0sQMfTf4hofuR
6dd2/PM3f0/ofmT65aa3XvtPQvfDdfrl+mvB2qTuh+uR7x76R8mOpO6H6/c2
PPvjFw4kdT9cdxx9s67oWFL3w/VTp5++3F6W1P1wnSrOezXvpaQ65qRi365+
54NN6aTuR05q5PMnPh2vb0rqfuSkUn9+rOdfx5qTuh/u++x3P/do24+Suh+u
N53p+/orLUndD3feK5ezvjfXktT9yEm996lHvvCLtReTuh/u+5ql3Cc+eTGp
+5GTSv9k4cgPN15M6n7kpJ7P/kZR5aaLSd2PzM8/euO3rnU/3PefffLNG651
P1x//MvH33et++HOe/GZE/OudT/c978+MP9v17of7rz3c3/wgWvdj5zUE7/b
MZhp3Y+c1OUzZ8Yyrfvhfv6/K29nWvfDvY9rf5zKtO6H6+q3/5Zp3Q/35z/2
9DuZ1v1w72f4K9K6H+77r1ZIJ+QFuvurrpIWjpS7n2dPS+t+uN//SLW07oe7
vy9p6364/pq27oe7329p6364809r636486q1dT8e+K96FLvnWW3dD3e/q637
Ya37Ya37Ya37Ya37Ya37Ya37Ya37Ya37Ya37Ya37Ya37Ya37Ya37YS0eDdb6
/5q17oe17oe17oe17oe17oe17oe17oe17oe17gc82uHRAY9OeHTBoxsePfDo
hUcfPPrhMQCPQXhcgccQPIbhcRUeI/AYhcd1eIzBYxweE/CYhMcUPKbhMQOP
m/C4BY/b8JiFxx14zMFjHh4L8FiExxI87sJjGR4r8LgHj/vwiAW+x5rA91gX
+B5Zge+xPvA9NgS+x+bA99gS+B5bA99jW+B7bA98j52B75Ed+B67At9jd+B7
hIHvsSfwPfYGvse+wPfYH/geBwPf41DgexwOfI8jge8RD3yPFDxy4ZEHj3x4
FMCjEB7H4VEEj2J4lMDjJDxK4VEGj3J4VMCjEh5V8KiGRw08auFxFh7n4FEH
j3p4NMAjDY/z8GiERxM8LsCjGR4t8GiFxyV4tMGjHR4d8OiERxc8uuHRA49e
ePTBox8eA/AYhMcVeAzBYxgeV+ExAo9ReFyHxxg8xuExAY9JeEzBYxoeM/C4
CY9b8LgNj1l43IHHHDzm4bEAj0V4LMHjLjyW4bECj3vwuA+PWPiw5a/zmtD3
WBf6Hlmh77E+9D02WF+U/Qh9jy2h77E19D22hb7H9tD32Bn6Htmh77Er9D12
h75HGPoee0LfY2/oe+wLfY/9oe9xMPQ9DoW+x+HQ9zgS+h7x0PdIwSMXHnnw
yIdHATwK4XEcHkXwKIZHCTxOwqMUHmXwKIdHBTwq4VEFj2p41MCjFh5n4XEO
HnXwqIdHAzzS8DgPj0Z4NMHjAjya4dECj1Z4XIJHGzza4dEBj054dMGjGx49
8OiFRx88+uExAI9BeFyBxxA8huFxFR4j8BiFx3V4jMFjHB4T8JiExxQ8puEx
A4+b8LgFj9vwmIXHHXjMwWMeHgvwWITHEjzuwmMZHivwuAeP+/CIRdiPyPdY
F/keWZHvsT7yPTZEvsfmyPfYEvkeWyPfY1vke2yPfI+dke+RHfkeuyLfY3fk
e4SR77En8j32Rr7Hvsj32B/5Hgcj3+NQ5HscjnyPI5HvEY98jxQ8cuGRB498
eBTAoxAex+FRBI9ieJTA4yQ8SuFRBo9yeFTAoxIeVfCohkcNPGrhcRYe5+BR
B496eDTAIw2P8/BohEcTPC7AoxkeLfBohccleLTBox0eHfDohEcXPLrh0QOP
Xnj0waMfHgPwGITHFXgMwWMYHlfhMQKPUXhch8cYPMbhMQGPSXhMwWMaHjPw
uAmPW/C4DY9ZeNyBxxw85uGxAI9FeCzB4y48luGxAo978LgPj9ieh/1/HODy
5A==
       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJxFmHtcTPn/x1OIsIp0GRRyW0Rf4es2My3rslaiTWRDRFpZsonk1lqxwpZd
K2xairavVlphk53RTjPTSFephLWltFa5lFty+70/5/06j19/fL/7fJyZz/mc
8zyfz/OMvkvXeC83NzMzm0//I/4/9/lg/1jzfh70n2ZxfVy00Q1zspzagR/2
0U6vibRNt2TuM9xJa1WZHKq0Ynbz6KktLKC/zswZdo7aWB0N2JW55Hd7rXeW
U3SDDfOTCjutbfo0GhHjv+6hlYazx3GXHtojh+nPkTlgtq3WXwzYi/lYVHet
szRB8LluWjG9aX1x/kYb7QkartKFOXSwjTZI/A1ktg621n4oDchcPbertpFG
ix7KbFbbRStNbzhzzobO2rU0XLIbjnfvpHWX/jC/cx21L+j26UYzeyzsoBWX
O2cs7ldnS+0mccHjMV9dO61SuoE4vrWtVhrXA8c9LLSSj0k43tGcfUxhjqow
Yx/TwL7vNdJwM3B+q7caycdMzDe/VSP58MLnD7RoJB9zwMEvNJIPH/D0ZxrJ
xzzwyGaN5MMP4w96opFunz/G/6RRI/lYBF5wXyNNbwl4c51G8hGI8TKqNZKP
IBx/XKWRfASDE69pJB8h4GqjRvKxGhz1m0byEQqef0Ip6QgDn9UpJR/h4PYl
SulyI8AHKpSSj0hwp7+U0nBbML+zNUo+D46X1CklH9vBdf8oJR/R+Py/D5SS
j13y8YesNwa88olS8rEXfKtJKd2+WHx/2lOl5GM/c076M6U0vQNgmxdKyUc8
eM1LpeTjML5/pUUp+UjA+M6tSslHIo6HvlZKPo7j+9o3SslHMrOH1TulpCMF
POe9UvKRynxshplK8pHGHNBgppJ8pDP32dNGJfnIwPk/NFdJPjJxPqO5SvJx
Hp8PtFBJPrLw+fcWKslHNs5/pK1KuoEanH9UO5X0uRyMV9ROJfnQ4fqC26sk
Hwbm6jaWKslHHr7/k6VK8pGPz4/qoJJ8FOD8RR1Uko9ifH9FR5XkoxTzMbdS
ST6u43iClUryUYnrGdtJJfmowvnKOqkkH7dxv0I7qyQfd/D9Ll1Uko8aXM+v
XVSSj1rwzA9Uko96fP7hByrJx32MH9eVfTQwuyms2ccjzPdLa/bxBOPlWLOP
p8wlPWzYx3PML8SGfbTgenQ27KMV53fsxj7e4n6FdWMfZi7Mhd3Yhzmzx+Du
7KMd8+zo7uzDkjmqtjv7sMLxybbsozOOn7BlH12Z+1j2YB82LphvD/Zhyxxa
2oN92OPz4+zYhyPzkyQ79tEL8/vAnn04MedssmcffZmtG+zZhwuOf+7APgbi
enMd2MdgzKeXI/sYis9/4cg+hmN+aY7sww3nv+vIPtwx364K9jEa8x2pYB9j
mTNmKdjHeIy/VME+lMwloQr24YH5b1Swj0nMcZsV7GMKzk/M/WB2o89zP3C+
MAX7mIn5falgH17wFaRgH3NwPEDBPnxw/s8V7GMexp+vYB9+mC8x94O52l/B
Phb9//jcD3w/XME+AjG/GAX7CMLxRAX7CMb9Pq1gHyEYL0vBPlbj+5cV7CMU
91unYB9huD+58BGO+ebARwSu7xJ8RIIz4WMLricVPqIwfgJ8bIe/WPiIBkfB
xy48X2vhIwbzCYCPvfDpBR+xuF4VfOzH+nGFjwP4fm/4iMf3u8DHYZzvvSP7
SMDxJkf2kYjrv+fIPo7D921H9pGM+Zc5so8U5mMXHdlHKj6/G+sjDTwF6yMd
96/JAf3A+eMc0A/cv4EO6AfOl2WPfuD7nvboB44326Ef8J9vh37geRlsj37g
/jU7oB/Mqa54381jXhg+m9938yWOulKwlN93C5gPrfmS33eLJc7x6rqW33dL
+Xi6XyC/715nntdlOb/vVkrcp69vGr/vVkkc3HFyNr/v3pa4uqb1J37fvcOc
l3Uc/ZD4xrncG+iHxD7j+p3l9916wceG175qq+Z+CLb+PWBjXzX3Q7BH4oiP
/qvmfgj2D0/uMlvN/RAco1gcHaTmfhB7LLdsctmq5n4QV/eu2PDhATX3Qxx/
9dHmVafU3A/i1sBt20fnqLkfxGp3i2N+pWrJh1l/DzOvTb84Lv9Lzf3o7xF1
Ur8gzb1Wzf0g9vIY+7LHPTX3g7i3ymJV+D0194P4WZH1APU9NfeDxrvjHnG0
tE7N/SAesWzssRl1au4Hfd46/sPmzFo194P4q+9q06xr1dwP+vyZM3ZRS++q
uR/E18w23T1Vo+Z+0Odf1JlNbKhWcz/oeMHjjk4DqtXcD+JXGWN8z91Rcz+I
90XsUDn8peZ+ELtYfbNn4y32MZh4avX6gltV7GMoceg3X++ZdIN9DBfje7t4
/FbBPtyIe7z6ymNoOftwJ16RcCAjs4x9jCbuFFX9jec19jGWOHX515Nfl7CP
8cTHLJy7bCtW8wZD/PHI2hljC9mHB3HW81F/DrjKPiYRj6+5P3DGFfYxhbjX
7o82/ZLHPqYR39jRo4PayD5mEI8d4xRkY2AfM4knLtZ966RnH17Em0v75S3P
ZR9zxHhJ+pp7OvbhQxx83bLnUR37mEfc8vXU8bt17MOP2D/85+O/6NiHP7GD
6eas5zr2sUiMv9B79Jpc9rGEuNvc1g42evYRSFxXPlN/Q88+gogHWzwc8aeB
fQQTj7RYdNNoZB8hxC8yTt+4l8c+VhN3PhM/QXGFfYQS6/etsw/IZx9hxJNC
w/dkXmUf4cRBTdp860L2EUHcf2S987oi9hFJ3CHR73EVfGwhTn+4bvHPJewj
ivhm2qDDXqXsYzuxY+QG6zel7COaOLf56Ljka+xjF3FUvxFpk8vYRwzx35cL
Ot8uYx97ib2/6OMccp19xIr1V5F96fF19rGf+JTr7BvB5ezjAHH1mu92lJez
j3ji5gfmT0ZVsI/DxPlb85ftrGAfCcThRY2zrlSwj0TiozunjXtbwT6OE//8
aH9h30r2kUzcuDCwakwl+0gh7t708JOJlewjlbiLdYLryEr2kUZ83Lv5gkMl
+0gnNjuZNeYJ1kcGcaTFHeeLFewjkzjCf2+7dRXs4zyx2+bGg30r2EeW2C8u
BiXpytlHNnHipDHW88vZh4bY5+Ww6rvX2UcOsV/LiCHLrrMPHfHV4jD7v8rY
h4E4sPP3d2eVsY88MZ9tE8qyr7GPfOLfXteN7XeNfRQQF27P+mJnKfsoFvON
idLeL2EfpeJ5uerw3YwS9nGdeNgRf68Fxeyjknj62IxTLkXso4p4+MDrJ58W
sI/bxL69rx0puMo+7hDPUv8vOyOffdQQxz31tU66wj5qiSt6x69PMrGPerFe
Cqccz8xDP8T555g/r8D6aCC+u87uTBcj+kH8x9wBZfMN6IfYP18scbuoRz/E
87R+otcIPfpBbLSZvvlSLvohnt/FJ8sW5qIf4vl694eXXS77eEuc7dw5tU6H
fgzwMLtt2jTDpEM/iO9c7rQyR4d+EPcqqFheoEM/iD/eMGRxgw79IF5W5tra
Mxf9IPaZuaw/nZ/7QXyo5Z+Dp7Ff2QwQ6ze+pJMe/SC+/0PhmvV69IN4+PiU
+w169IP4xpndmSsN6AfxA+dSdZMB/SB2GpTydIsR/SC280/+qGse+kFse2jt
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

       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1:eJw1mHlczdn/x6+yZuy7MSlMyt6MRoN7bxO+aJBt7EtEjDXVbb+plFZTUVps
UUgqVEjceyvTGNvIMnYmW78IlbptxO+8P++X/pDX433O+7zP+/U55/n5ZLpy
8+zVBjKZbIH4h35f1JsviTIYYCP+K2srM1UEV8zKM27FWrauv2LKM+/uWW1Y
927upzC6l+IsN2Jdkt9Xcf2a+PmG9YLU3oqoIpGwE2uT8z0Vs/OMgyu6sC6o
6a7onjVZZGTdMK6bQkrXi7Xnri6KpETx04d1aU0nxRJK2I+1zdNvFP2lAhF/
1U5B5U02xXpGbRSpIt29gayj7VoqnOjHDPUeaaGwkBJi/vjP8rciW/BQzF/Z
KJfKG8Ha/0KtfItIlzKKdbJdlfxH6Qfx3uXyOtG+IivUJyuV03ZnWSO+u0Tu
Qxsei36W75fLpQZCf7ikkX7bYLzZA43khy309ecaabuToDPLNZIfk7Ge1XuN
lM4O/c2u1kh+TMN4k1qN5Ic94qvqNJIfs7D/rQ0ayY+52L9rk0byYz5rB+Un
jeTHQuR71ayR2rcEcacvGsmPZdArZFqpvBXoV7NMK/nhyPpkaAut5IcT6jEw
0Ep+rMX8DQZayY/1qK/YQCv5sQnjOxlqJT+cv/prqJXscIV2N9RKfqjQn1hD
rbRdT/Q71VAr+eHN2vmIoVZKp2ZdssdQK43zR74gQ63kR+DX/RlqJT+CWc/8
wVAr+RGC/A0GWsmPcNSfbaCV/IjEeo4GWql9Uaw7GxloJT9ioI+20ErlxUKP
a6GV/IjHen/JtJIfiahnqkwr+bEXOgx+7Ife8lkj+XEQ/v3arJH8SEE/e3/S
SHYcgX7QpJH8SIOOatRIfhxHvnENGsmPLOgndRrJj5OsTTz0GsmPHOy/ba1G
8uM08u36oJH8yEO8d7VG8iMf9VlWaiQ/NNDmb/l8FMDPPq/5fBQhX8syPh/F
6P+753w+LmF+2n98Pq4g7v6Az8c1xKfc5vNxA/GJV/h83ITufYHPxx1okyg+
H/eg2+bKJT8eQJcUyyU/HiN/bolc8uMp9Oq7csmPZ9B1j+SSHy8wP7tULvlR
Bv3bC7nkRzn2++IV31cV0IvK+b56j3zn3vB9VYV+fX7L91UNtFkl31d6+JdQ
xfdVA/zYUc33VRPyuXzg+6oZ8Uk1cqku2UCOt66VMz9Ym+TWypkfiE/Xy5kf
rEtv6vn6M2LtYFMnZ36wtkmokzM/oO/XyZkfmP+lTs78YC3rWC9nfkAb1LMf
fTD+YR370Q86vo79MIYeU8d+mKL+fD37MRD5TPTshxnqiallP8wx/rta8AP5
CmvAD+xPXQN+oB8zasAPzP+xBvxgXWBRA35gvVE14Ae06D83EPnXwA8b5Iut
YT9sEb9Sw35MQrxtLfsxGfX+Wsvp7Fgn76plP6Yh/qSW/bBH3FzPfszCflz0
7MdcxM/p2Y/5iH/Ssx8Lkc8afizB+I3wYxnGJ8CPFag3r479cMR+rtaxH06I
P65jP9bCr8o69mM98hvWsx+bsH6fevbDGXHLevbDFXG7evZDhX6vrmc/PJE/
oJ798IZf++rZDzXGn69nP/yR70E9+xEI3VDPfgRjv70b2I+Qr/1pYD/Csb+F
DexHJOJeDexHFOYnNbAfMYjnN7AfsajnUQP7EY/+fWxgPxKR/9tG9mMv9NhG
9mM/xi9oZD8OIr+qkf1IQXxnI/txBP3JbGQ/0rB+cSP7cRz9eoT3qyyMr25k
P04i3rKJ/ciB7tXEfpzG+CFN7Ece6hnXxH7kIz6jif3QYH2HJvajAPtzbWI/
iuD/9ib2oxj9LP7Eflxi3TnTgN93r7CeOaMdv+9eQzy9M7/v3sD6Zd35ffcm
6n/Wm99377AuaTWI33fvsbY7bMvvuw9YJ7Wfy++7j1nHtFzO77tPJe0/Ytt6
ft99xnFzuTe/776QdIKZ8S5+3y2T9Nz+Bin8vlsu6dwnrXMVzA9JLz/0oFjB
/CDtb12mf6Bgfki6e3+XKgXzg3Tpo4lbWymZH6SnlPdy76dkfpDObThR+YOS
+UF61hfL61OUzA/Sc8ccbbFcKfVJNshGlrz1XO7+LUrmB2n/83eXBSiZH0I7
R/dyX79DyfwQuryr7HZTnJL5IXTJXfs4g/1K5ofQJ8/uslSkKJkfQg+zfnlg
z1El84O06ZV7bTOUzA+hFQeGW44/qWR+CH337fq+m7OVzA+hW6+OCYvPVTI/
hLZJnm558oyS+SF03sCmbrl5SuaH0H7K9SH785XMD6G1kQvHrr+gZH5QfTdt
5D21SuaH0E2DOrbfq1MyP4S+6Dziom+Bkvkh9G/Df//So1DJ/BDawcc0KaFQ
yfwQOm3ktQzDIvbDSuhg2eHweUXsh7XQ8YZlBdFF7MdYodUK027ZRUp+oGm9
xU3b84vYDxuhC7Q9ZqUXsR+2QtfvKnoaUMR+TKL+mcy8+UsR+zFZ6C76yk9v
CtkPO6EjO/dc41fIfkwTetWeCJvmAvbDXuh39W4v1hawH7OEXjmxOTlYx37M
Fdo6vstvfbTsx3yhX8aFr4q+wH4sFNoo+HnQ+3z2Y4nQ6e5esWPOsR/LhN55
eED05rPsxwqq96+YHUmn2Q9HobM+Tcu8kMN+OAntb5XY4eEp9mOt0NET7sS+
O8F+rBd67u0Pt4dnsB+bhB70bmKWbxr74Uz7nWSX8SyV/XAVesO8kQ2OB9kP
ldChVtP3dt/LfniSf5NjH52OYz+8hZb9vXHUpij2Qy30qAxb40lB7Ic/+THt
S11LN/YjkMa3vrAp9yf2I5jql83rNGeTjvlB8Y8zTh1W65gflM/k4dbmIB3z
Q2gTb7/lncN1zA+hZ04tut3uDx3zQ+gFgdVbVNE65gf5caIiZnGMjvlB+W+1
mJ8fo2N+0PM85unTuBgd80PoqkXnt9RE65gfdJ4Pt92RHaVjfghd6rv91d5I
HfOD4roxV06H6pgfNL8u3bFjkI75Qft32NnNRa1jflD9g0ytdm7RMT+onuXz
BsTN1jE/SCc1X523kv3Iofkvzjw+7cF+nBa6c8DKijXb2I88Gn9iftTgCPYj
X2hz89bqwBj2QyP0Wvf826o49qOA5uu7/+uYyH4UCe150uq57T72o5jGHzN7
HpTM5+OS0G45N17NP8Tn4wr1c6naoWcqn49rdJ/Vj4+6cJjPxw2hx2cPq/0f
7qub9HxV5mzJTuPzcYeep3eVEz4d4/Nxj/r/w+PPpsf5fDyg+/B59SHTDD4f
jyl/5j/bGzP4fDyl5+FOhltaJp+PZ0Kn/rs0dHgWn48X9HzePTQjNIvPR5nQ
E9MN8/Ky+HyU0333bWpbXRafjwqh347eV74ni8/He1pvcMzCmVl8Pqroebqx
6vSTTPajRug73X5OnpQJfgidoDDvGJ4BftD8SAurzOPgh9AtPz+PPJXOfjTT
8/7Z+M/EY+DH9yJf79f5a9PAD6EdbOa4mh4FP4RuMPfoe+kw+CH0tE5j9UtS
wQ+hbYL2zy07BH4Ibb1gSpzTQfBD6L/n+I4oOgB+0PgVD1dk7wU/aL0PU+en
JoIfQqct1rvv3w1+kK45VnFkF/ghdHLQ2t0Xo8EPoat+6GVeGwF+CO2/zc3i
wHbwQ+jSmMXHYwLAD1qvuqPBMS/wg+JX77x76gx+UH3xMX+lrgA/hJb9tGzl
e2vwg/I7NBSEzNExP4QuyDrb98MqHfOD5m91rlq5Scf8oPX+dP/YxlXH/BDa
5LfFuo8qHfOD8v+8Z2hHTx3zg+p52cbc1kvH/KB891be3eulY35Qvvu/yL73
4vtqMs0v7NHnhQffV3YUX62zfqbi+2oa1TvJPXmIK99X9pSv3mpjwma+r2ZR
/Vcjuh9dw/fVXBp/aF2GfCnfV/Mpv2WI3MeW76uFpFscPfxiCvhB85f+2vHS
CvCD9ATba683gh9Uz8u3EUoV+EH7q3TYmO0DflA9ZmtnGweAHzS/JOamUxD4
Qes1XI1LDwE/aP6GS6XPwsEPGn8halirP8APej4Gtc3ZHg1+CG2ee6mpMQb8
ENr59MAFC3eBH0LnvR396WAs+EHPb0XY8pu4r/ylfpROfLUb/BA62uDfC4/i
wQ96vm85DM5J4PMRQvrXsjHrEvl8hNP5sT7/4Usin49IWm++ZYZrEp+PKBrf
bNypOInPR4zQCSUtu9Um8fmIFdpztFOzbA+fj3iqr9p22dskPh+J9DyNG9bx
bBL7sZfOi856+Mok9mM/9WOssldlIvtxkPq1YKHT8kT2I4X6c/pWeW4C+3GE
6kn/PbU6nv1IE/pkn4jCXvHsx3Fa/2r/WIvd7EcW9TPMcodFHPtxkvaXn2PV
Nxb8oP1btBv6eSf4QfHnhj3uw488oe+3DTuUHg1+UL4OQw2r/wA/qN4ze0+F
RoIf1P9NP4aZhoMfVF/TvPiCEPBD6JlbPArXBYMf1J/qJ+mDtoEf0vNz/+IH
f/CD8m/4MDFbDX7Q89orrOdZL/CDxpuMMf6oAj9ovOzwz0Eu4Ac9H/m/LDyx
CfwgPbLjstq14Ac93+0aTP9zBD/oeQ5cV/pmGfhB4xftMfKYD35QPL/foTWz
wA/S0dqRflPBD9JnTezrbcEP0nsP9HVUgB+k39cGjRsPfpBe5WE/Qwl+kO4w
2jh3AvhBeoNF6fd24AfVs+/LhQ2zwA/S3beeuz0P/KDxZzY4/bAU/DAT8ZnW
NdYrldLjbCB0wYrxZeOdwA/Sq+fNT1gHftD4RZOnKDaDH0LbjHwS39kF/BDa
YfTzO4luymiJHxT/90qH0R7gB8UXrIy77wV+mNH9nXfN3xf8ENrE7/ZUs63g
B40/snXpM3/wQ+jODsZdzQPBD6GdB9zaumob+EHr9WtftisI/BC6ZNK8oznB
4AetV6DJKtwOftD40OIP50PAD9rflL+jkkPBD8pfH1azMQz8oH5se/LXgHB8
fwh9sr1BvSYc3x9Cj7LskauIwPcH1e/Yelkq3q/G0v6sKrLeR+D7g+bHf7fn
O5wPG6FlAz/PsoxkP2xpv8P22QyJxPcH6ectjNpF4vuD9vdLVeQ/Efj+oPpm
Lr/lE4HvD9pPZpBJ1wj2w57yj17yeGc4vj+ErjIatO9LGL4/hE4uNO+1KAzf
H7SfGR59U0Px/UHzj2n2/BcCfgg98+3hmI4h4Afli5T1/nE7+EH12p2eYB8M
flC/m3tbrg4CPyi/zeKWHtvAD1r/xuar2wPBD1ov+tS+3QHgB60Xlq9K8wc/
KJ6R9IfvVvCD/P1zwd0cNfgh9T90cpMP+EHafoLFHG/wg/p1sC6u0BP8oPnD
vxs2xQP8oHrSr/i8VrEfgaQ3dPvnqBv4QePHlF4OcgU/KO63uF2gC/hBfo9+
fDd5C/hB8b92fX7mzH5E0fw2Lwf8zxn8oP4MtixL2gx+kH9ub19WbgI/aL/V
1UvCcV8lkl5Qb/z7JvCD9vOm+ygRZ35Qvn9OjajYBH5QvqUxP4VtBj+ovqJt
G0c5gx80fqHhT2edwQ/q14G6u/O2gB+0nsUikw4u4AetN/DbjHsu4Aflv+nY
OtcV/KD9LZu274Ab+EHjh6TcileBH7T+r3MMktzBD8rfZYJ/igf4Qfmc7VJP
eYIfpN373yn0Yj+KaP7a7W43vcEPyu/2n9FTH/CD1g9wGf7KF/yg/Qx3Snip
Bj9o/suyoQ/92I8blP/j1qcXt4IfFB/V1GjvD37Q8zqkdskZf/CD1lsUOLt7
APhB9XcKU/weAH5QvpEjQ3IDwA/S6TvO6wPAD6qv8ZDfsEDwg/QIs8wFgeAH
+ZHzsbt3IPghdLTzm7RonI8Kuj9CF7vuDQQ/6L76v7z4fYHgB+W7EzUrNhD8
oP1ssa31DwQ/KJ7vW+4YCH5Qvj2vj8kDwQ+6X/r+72LHQPCD9ten6Z97AeDH
YHEeR1R6JAaAH0IXfHmyee7Xv18JbeOm9WkXAH4IXdUja9k5f/BD6Ogu496v
As+/ofiBrvXf+IMfQpu4nk1fBT+6CF3a47fs437gh9AOyZ/zqtTgB43fvXOO
lRr8oHqunx/q4wt+CJ0cZVd80Qf8oPEpZTGdfcAPik+zaOvoDX5Q/YOvr77g
BX5Q/HKnV999/f6g/OPHHQn1BD+ovjZ5B5o9wA/S12I0ag/wg9a7vlvTzgP8
ENr/7v2ph9zBD8pXtPbJZHfwg+bfN6xoUoEfND/o8vHzKvCD5h/OGh2uAj+o
vqsT9jnhvrKl8ae6/TlTBX7Qfh4HzJ+iAj8of/js9tNV4AfFI1Quy1TgB+Xb
WFnjowI/qN/TvepSVeAH1Zvip7mP96u5Qste+wX0dAc/KF7v7bjUHfyg/J/2
e2a4gx8Un9n5hoEH+EH1Oh5YsdwD/KC46puhhR7gB8XNU74f7Al+SM9b/i/R
nuAH1ff4iMtH+LGe1nNVZq/xAj8o/l9Jw20v8IPyfbCZqPQGP6gfQfbJad7g
h9SfHYM6feUH9SNZ37jFB/yg+a0G2Zf4gB+0/0QzNwtf8IN0pfslX1/wg+qt
KU+47At+SP2rdOqkBj/Iz8yk/Olq8IPqP6w3DsJ9FUn1d1Vaifdd5gfN77Gx
z301+EG6Mm6bXg1+UH1zBjkZ+YEf0n4vXu7pB37QfpQji/v6gR80/+EfPiLO
/KD9Fx8aLuYzP2g/u7tY1KnBDxrfZ0fRQzX4QfrG+lV5avCD9mNpHhalBj+o
/tlX0x3U4AflD1y1fJga/KD4Cf3YGl/wg+prbP/stC/4QfEK+/duvuAH6V1X
Olj6gh80fl/TszfwQ0P5J7ztluIDflA9DpZTF/mAH7SfL/UWXXzAD4pXmMz+
2xv8oH5dGrDG3xv8oPXyjut/9gY/aH7A8Hi9F/hB+vLQKzlfvz+oH3rDriq8
794hvebg05+9wA+qr6g43sAL/KC4z7X9NzzBD6qn2lB+0BP8oPjE9AsenuAH
1XN+3Lw5nuAH5VuiHjIa56OM6jeIXNIX56Oc9LczvrTC+agg3f+SUT3uq/fU
v+vG/u9wX1XR8zey7+TXuK9qKP+ZxvFv8PdEPe0398D4Kg/wg3S4RcePHuAH
6dR/3Y3wftVM+xlbOsIYPJeZi/18zCy38lT+P900eCY=
       "]],
      FontFamily->"Times"]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], 
     StyleBox[PointBox[CompressedData["
1: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
t2vE75sm/x8iTOPX
       "]],
      FontFamily->"Times"]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{8.958203125000002, 0},
  BaseStyle->{FontFamily -> "Times"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{9.005, 12.}, {-0.10536300935273601`, 0.12960908298226315`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.769040530645697*^9, 3.769040719932077*^9, 
  3.7690411542723417`*^9, 3.769041242596836*^9, 
  3.7690858016935177`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJykfQWcXdW1/rwoEGiB9pX20b7K66NUaLHiBCchCUkgOAQSIMRD3N09k2Ti
7u7uSlwmY5Fxl+vu9/uvtc7Z+96B0L7f739gZnLPPWefvdf6lu6193m7fd9O
Hbq379v5q/a/a9K7fc9Onb/q87s3v+1Np+r+R0rKf3RKSUm58rsU/jfon+Yv
OTrzr5SUB+VPXVgsFtjtdvk0VH43QDAaxujLi+EJ+xCKGf92h333mrdEAmGc
mH0YYX845Y9yriEQrgEy3wVifnlK2B/CybQjiIajKXXM+xCpRuC7Zjg5a2/K
r81zLocf29ZcQiwWT/mmds+2bNmCw4cP1+pZNB5Dhi0XkVgEMfPf4VjkJ/J1
fYSCEWxZdRF+bxDVNyoRi8b00/3hKFKP3OS/Kb9VvY4FAddZIB5FwB3ASRpV
RVYZ4tSbOmabiAcRtX6Hkgv5OD33GGLhWMoD5nfuRO8RDkVRWmhL6Vh7FNu3
b8fRo0flU1dFwEgMW6mbPk+IOyHnYqEwMmZsQNjtS/mpui5IhJ5FhPaFaOx8
7i7E6E9JkVceyUc84IUrrS/ifi+idO5GpYv/3mM2ESJKcBORYMRslhoKW4Ds
j+hDEAFXAFu6r6HmYnXVgMPVwI1PEXD4sKXHWiHGA+atESJieYkD6vB6gti2
9vL3OHe7McfjcZQU2njseszxWAyOG8WIRSJ6zHyu+iaxjq6rL+fuoDH64U4l
wl5+k1jmNh4djSB88wr/vUeNK0Idy2xNpzx8uzRDndfDBlHMeZKG7MWxGQcF
INSruurrWACwbEYsvSXKrtzCKeZ1JPZzk+4hRzluLvsGLrsXO9df1fRnihRe
y8KNJd9w37/+cUoYGG5E0hXCqMuL4A55pYUAfR7Jn0najJF5jGFE7DR2vqce
nYsifOMCYKW24pH7lETFQzIkOpXyE5NYfm9IZCASQYLTJCpMEWtBTUPVoucC
/A6PMJ+EVA0zFiJSF1xgyUFpkZ0IZPTJ5Qxg28rTcOadp9bitxnm6dOnaw2T
xTPLns/iaYyKPmfS54j5mfpMfT/FY6CrjXZIoxBaDyHkD6XcbZ7zhSKYcfgG
AiR3xrjvJJ7HWNaM3gVLgdPU/7iX7o/g9LxjonXqq4EynIkGdA62AssvzGY9
3ii2rr4kn5SKCNMlZcWC7pQOtUe4c+dOjB8/HufPn0+ZZSKGaVRzq0r+svi5
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
h+nTZ2Du1Ml07TzMmzmD2noT8+fMoZ9UjPv6j2jX9X8xacZEtO42DGlz56UY
w/tvzJs+DVObvUzEmoqZzADzefPnzcfE4RPw6VfDMXfeAvo8DzMmTUTH9oMw
d26ib3Onj8LIjn/GF93/gvZf/xofdX4Eb330Nd6gEKtNh4fwUacnMDNtOuaN
oXCpxTP0vCmYv2BBfXl8/aQhLsC8aZMx450Xza7VM76bS9ibNgGzZ80R6tWh
KHIh4ZY4iklvkzobPwqzxg3H0A+fxYLUaQYnFizkR6TUNfHL7ciQ6JPBmYb8
vQxpzoiBSP24CebNoOHPmC73NZRr7pJrFixaLPfPGT0U09/4O1I/acpyINfP
X8jPWXi7x9ST3w2Mx/BlxK3UsSORNrg3pr32lzqY0fJZumV68ycx4/1XuTVG
qfyeSYHLnJGDMP3tp1OM6xpi+ltPYMa7jWXU/DN3stGDWbNnp9Q3H6+2HWNR
/o/acs2eNc9V8fzUunXr6pgb8XHqdM3atSgqLiG54d91kUqDWL1mjXxqaJ6b
TpHxuvXra103heKSjRSkJ183acoUbKKQKvm6qdOmY8fOXbXOjZswATt27ap1
79hx47Brz55a140ZOxZ79++vdW7U6NE4cPCQ+cloobAwDxfnvYDsiT9Dj/kr
8MYnj5OfeRiFRYV8H421niT+2fesKKtEcVFxAzn9czl9/OQpivaKcPWLpijI
TEdZQQ5KiotRXFyCwhs5yOjclL7PxdChw+TNNkzJwtxsnEx9BJOXPoW8wnzc
yC2gbhQpynL+mBPSJeVl3Es61wDF5ZVyK08g8l+ezD937lwdsyel5aUoL8ym
T4UovHkVxyb8FR/2GYtZm1uiY8f2OHfyuNxWVFSsm+J/F+XdwKlpf8SMtc+h
a5evceHkCW6jvjT737iZnoVNX46mpxahS9euuHz5itx6Mz0HWz7rgpzUh1GY
k4Fb185jT58nUFKUK9937tINF49twaGpv8VIivYnTXsYl7u8gdL0q7jRqzXK
cs4jK+3v+PS1OzF0zpO4WXCd2jiHa53fovYy65uD7tSpk6R4uMn8S2eQ8W0r
FF7PMr6+X/Ix2TnZSE+/iQlD1xPHipk7cvmtvGzcIjIXnD2Czx+6H8da/g4H
ScpHdZqI8+/8DzK6NUfRdSLYzetEw+Jig9BSxcBvaTIeQb9LSlFw+Rwy3/sz
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
o7xvaHkfzSa2qQuU/Kf/B6b26ZU=\
\>"]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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
0Qs+b6H5CgP59wr4Ywi9L6NKZipk/wcEsj+Z
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1:eJw1l3lcjfkXx1N3Y4wla2NLIllmjG2Ie2+aX4OsZckSskx2SqW6bbc9lIrQ
Yl9LSSST5d6bCJMlSzOihhIpWbKUnd9znvPRH+P1mXO+53ue7+c53/d9ui9Y
7fSnsZGR0QzhP/Tv+YbeLnHGFrZG9BfVXRVR55jXVcpa62iuGlOpaZslZ717
XFdVszv73JXNkK/orLp2Vfhrzrq+1EwVVyAUbMna1tBB5ZTXNaKuNev8U+1U
bbNGCxVZu15soxLLdcD6R61VKcnCnxnrye1aqVyoYGf0c6S5qpvYILRTUxW1
N7o76pnJVPuFcnd6oN8mJio3+uvF2ryZkcpaLIj1bh+Vz4RqEX3RX+Nbpdje
z4hveKn0EMrtG4DnPfBYOUj8g15ZqmwUjq9gCPTbU0p6XMdh0G0Ldf70wDbQ
R+/plOIBQn94pBP/tcV+/Z7pRD/s0I/fK534uPY4z7S3OtGP0dD73unEcg6o
t+yjTvRjPLTRF53oxyTkL/qmE/1wRP2rRnrRj6nYv7iJXvTDGflnjPWiHzNx
fgkmevH4XJA/WaIX/ZgL/VGiF9ubj/3jpXrRj4VY31qmF/1wY10RKNOLfiyB
X3dketGP5VjfVa4X/ViFfp3ketEPd9TzlutFOzyxf6RcL/rhjfVRcr34uL6s
XX3ketEPDfZ3luvFcoHYv7dcL67TIr9Ophf9CEV8l0wv+hGB9fYyvehHFPZ7
INWLfqxH/nKpXvQjBv3XSfTi8cXhfF0letGPBMT/NmE/EvE8vU3Yj23YLwB+
JCP/UhP2Yzt00ybsx05oOyP2Yw/qPfmqE/3Yh/1tvuhEOw4iHvxJJ/qRhuf5
64NO9CMD8YfvdKIfWdDGjTrRj2zs1/GtTvQjB/V7vdaJfuSiXt96nehHHrTT
M56P06hnV8PzoUPcGvORj7i8guejAHH9HZ6PQuhb13k+LkEPPsvzUQS9O1Ep
+nEV2va8UvSjGPrZTaXox83v/d5Tin6UYP/+lUrRjzvQNo+Voh93v+tapehH
Odb3e64U/biPeGS9UvSjEnrla6XoRxXOz+GtUvSjGvFOjUrRjxrEK97xfVWH
8036wPfVC+SP+sT3VT32L/vM99UbrF/4le+rBqwv+8b31XvW5ruNVKIfH7F+
bBOV6McX5D9pohL/v1EPUVdojFXMD9auJibgB+v8YBPwA/kvTcAP1uZTJOAH
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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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
geQPA/j+W9J0qi6Q/380b553
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1:eJw1l3k8VWkfwG9CeNsXqWmUEk2rtJmGey8R00iltBothDYpl6y5bvZRdlpk
iUSLuaVFy71XKKaUdaZI2r0mkp2kmff3nN/v9cdM38+55znnPN/znO85OrsO
2u5W4vF4m+E/7P/FPbPso5WmC+GfvAl28/ghLesKtFWQw+Sz+VZvfMfnDeNY
XLJ/Fl/jWaa7iQZuH9ypx39SDn/Dcbtdui4/uggGHIXbv/0wg29boB3SMga5
/4MOf3yeJYyI7Ht5Gp8bbiJy5xdt/ulT8DcJ+VzeFL49G3AK8l2vyfyp3Aki
d63T4rPTs9RB5gk1+Vkw3LMZyGeE4/nO7E8P2Wf9WP4P3IDI671H81thtJA5
yHd+HcHnTm8+csondf4hGC7TAFmepspfxP0hR3oM5ffC9BUtQXZ35fHZ5a4z
Qr73dcDEj13wcmRv5x4TE24CaT5GtZvgeSMbtX0w4XyYIRfufW7CXa4FXd/p
WyacD0vivaUybrhVyDv2N8g4H9bIWtObZJyPNXT89E8yzsc65NotnTLOxwbk
9rweGedjE51/Zb+M87EF2b7wq4ybPnv6/dF/ZJwPB+TKUJ6cO72dyOU3h8g5
H47I3RVKcs6HM3Jz9VA558MV2aBQWc752IfsfFJFzvlwQ9a0V5VzPtzp/P8z
TM7p8EBenDNMzvnwpOMvVJNzl+uNrJurJud8+CI/H6ku54YLQPZyVJdz8ypG
TrqgLud8SJCLXqjLOR8hyDE8DTnnIww5TlNDzvmIJB/aGnLORxSyREtDzk1f
NI2voiHnfMQi6zWpy7nTS0B+eEddzvlIRtYIVpdzPk4hh5qpyzkfKcglvWpy
zkcqzV+GGvrIQG4zU0Mfmcj9L4ahj2zksQeGoY8cmt9eVfRxiebTRxV95CFH
9aqgDylyzgEV9JGPfO2VMvq4gcxfrYw+CpAbbw5FH3eQp38/FH3IkFPESuij
EPn1myHoowhZbDoEfTxA1kznoY9SZOvBf3F9PKLxCv7B9VGOvNjrG66PCmTh
0kFcH1XI778M4Pqope1FX3B9PEP2j6H1UYdcuLsP10cDssGKXlwfjcjNP/TI
OB9vkLW+65ZxPt7R8SZ2yTgfTciuOp0yzkczzb9Rh4zz0YJsvL1dxvloQ5bO
+SzjfLTT/Nz9JON8dNH5u7fKOB89yEbWLTLORz/5W/dRxvkYoPOV/C3jfHxD
nvW2Wcb54M1AH4eaZdgPZIPFzTLsB/KOOc0y7Af9fksz+tBAfn6/GX0MRz65
+2/0MQrZ2/Ij+hiDLN3Tgj7G0++ftqKPiciu3m3oYxJy4eJ29DEFebhtB/rQ
RrZK7EQfOsjh/3ahjxnIUSd60IcestG3XvQxC7nWsB99zEFWXvQFfcyn8YYM
oA8DOv65AfSxCHmD1lf0sYT2d/2KPoxo/ISv6GM5svjcV/RhglwA2zkdQpr/
g1/Rhxly+pKv6MOCft8ygD4skRcnDlA/kO8tGaB+0PlWfaF+IDfs/UL9IFb9
Qv2g+c7pp34gm2/4fz+Qx4/op34gv/+rj/pBvm/0oY+dyO6X+9CHI7KWvA99
ONP1VPShD1eaHxgP+4GsW9OHPtxovh/2oQ935BJpH/rwQJ4b34c+PJGFbn3o
w5vuP7M+9OFL98OYPvQRQL7re9GHGHltWi/6kCBb7+hFHyF0PO1e9BGGnFPX
gz4ikUXxPegjCtnYugd9RNP1K/egj1jaX9aNPhLofI90o49kup8XdaOPU8jd
HV3oI4XWU34X+kil+fPpQh8ZtJ5X0PrIRC4bS8+rbFp/7+l5lUPr+2Yn+rhE
93dkJ/rIQy7/tRN9SOl+M+xEH/l0Paqd6OMGze+LDvRRQL6lHejjDrJ/SAf6
kCHbb+1AH4V0/AUd6KOI7oehHejjAfLm7o/ooxSZJ/ShftB6jOo2wX4gOxSr
4vtuBfL9/jH4vluFPGmuFr7v1iLfadbD991nHIvXFFvh+24dxzsS12/D990G
jpvN1uzG991Gjs0rdxzG9903HL/fNjQI33ffcZyuNJiM77tNjMVxFX4X8H23
GcfLm1qA77stjIUHb6T9ge+7bYzbXSwLX+L7bjvj8dqBUZ34vtvF2Chjg7Ka
APvB2H7Eg3NTBdgP4EL55LW8JQLsB7DQ064m+BcB9gM4vD/rqsVOATevPF0h
zzpj5OdaDwH2A7goKF3/0zEB9gP4vlHbjG2xAuwHcFPek7y60wLsh65Q7Mmf
c1k9U4D9AM5x40c65AqwH7rCwvCkWfr6UgH2A7aLJ/Cev8oXYD90hcJy0yt2
T24JsB/we41ue8W7uwLsBxzvRdL20/8pFGA/dIU7WuK8WucVCbAfwPM/pHXY
lgiwH7D/n809daKHAuwHHE8el9x9vEyA/YDjFQgG7518JMB+wPYftNuao8sF
2A/Yf9I40SG3pwLsh65Q6nNncsXESgH2Q1fYrpIzOfy/lQLsh64wZsGDQ85Z
VehjCYxfppOcaV2NPoxge5l5R35jNfpYDjzSWNVyS40AP+B0haP/HNTdeLcG
fQiBbW85aCrXog8zuL7VfC+lRbXowwL4uaCzzrIWfVjC+T5tccswq0Ufq3SF
BjOjh2bOqEUf1rrC9PvOF1xbatDHGrheg97KO6dr0Mc6XeFaswcVZw1r0McG
OP+Ef8xXX69GH5tgvPvxo5fpVKOPLbrC14Un7/f6VqEPe12hu5pelU1xJfpw
gP0Ty7dY9Fegj53gr8dj5jubp+jDEY7P67ZIPVGOPpzheg6/Lbl9l3y4Am8d
EhdZX4Y+9sF4y23DXD4/RB9usL9LXXzaPyXowx22e05KdxtejD48gIs2p3dO
uY8+POH4BwZzTV3l6MMb5ituozjg0h304QvbO122X9e4hT4CgG8m+AVH5aMP
MYw388r9ocuk6EMCx99mq3dg6kX0EQK/v+EkHbUsC32EAQ8aDxvldxZ9RLLt
qpV2onj0EQVsM8FpYXkw+ogGtnK+nlexC33EAs9SO9GfeViB/QCWfI63MQ5R
YD/Y+VpNaFSNVmA/gEM6/32/OV6B/QCukJ4er5OkwH4A13o6x71OVmA/gLfE
BLedPanAfgBvVPN/vPOkAvvB9s/iH1marMB+AEcc+dKsn6jAfgCb7DydvyJO
gf0A3mq8cN3C4wrsB/BbdbOiA8EK7AewvzhpklykwH4A80rfPKpbjj4KgMuX
rnGf4os+7gDf27QxcFok+pABK5VljumKRx+FwEvkV49/dwZ9FIGP9ZIdFcsz
0McD4J0a9am95KMUfr/90we7Wzno4xFb7/dM+R6X0Uc53A9lXq98R0vRRwVs
j9LxuPbiKvqoAv8Wr7/rSaLnVS383slM2YB/A9fHMxjfY5xa7JObuD7qYP8x
rqfOmhbg+mgAHm79cnrybVwfjbC/8na9jY/v4Pp4A9vtpj2VvbiL6+MdHO+s
2Wrrh/dwfTTB75cXN26JkOH6aIbf75PvSZ8hx/XRwq4/+bVFghzXRxvsL513
tb5ejuujHbaviBFv7JPj+uiC7QNH34z9KKd+wPZXF/iV+bQ++uF4dvO/XbST
Uz/g98qiU1pVMvTxDXjirc9v9WXUj5lCoebfaTr296gfwLYfhPPc71I/ZgoL
h/u5ZDjfoX7A9pqd5mvMblM/ZsL17/7NULWA+gG/r7S4vf/GTerHTCFv9HFD
4/U3qB+wf/++4R1v/98P2H9ctUmTyzXqB2xX3i/1/iClfsD+Gio/DcryqB/A
q0rNfX+/RP0ALjvcWHM+h/oB3Pc0cuGF89QPGH/C58/ut89RP2B7pHbDhpI0
6gfw8t8vzFl9mvoBXDTQ1q+ZSP0A1vWLC5kdQ/0Arpxw1G9qGPUDeJr69fFL
A6gfjB1W/myzj/oxk70vPBx7WFOB/WDsmPuHzx4F9gP4eenrJK8jCuwHcJLT
zH0CsQL7weZv65vW5mMK7Afwyrbc0luhCuwHsH1SUeWVcAX2A1jplJ30aYQC
+wG867cr2VMjFdgP4P4rGbILEQrsB3D1LZPVB8PxebUBOL00xlAcis+rTcAD
wxwjPxzD59UW4FaVi8GXxPi8sgdWPviiRO6DzysHNl8tPwVqH8Ln1U42H9Pq
D69xwOeVI/CO6aO8xq6kfgCLY7SiwvdRP4Cznrko1vlQP5ivpYNK5yXUD+D9
670sHoZTP4DXvundNXiC+sGu99iK/DNx1A9ghdD2fX4i9QN4WOLPPylOUj+A
x91bJbl5hvoBvM668U1cKvWDjbc4uTc7nfoB7GVj/KydnlchwM1d4zbrZlI/
4H4L+l5fRZBF/YDtL/eMvc4/T/2A7fntTcd0sqkfzG/D9b8/ZFM/gM//8ig7
8gKujwTgiSOqn4zMwfWRzO7v3MiiQzm4Pk6x8TXvLM/PwfWRAuNL7ceY1OTg
+kiF7d4lbyZX0/rIYD6dN3lKc3B9ZMLvLzX4zD+Ygz6ygYs7xniNykEfOcA7
endL4y6gj0vA2wKqJAPZ6CMPWLMj4YFVNvqQAq9cvDog8Dz6yIfjXUnLb0jP
Qh832P2bMm3R75nUD+ApTtu6Lp+jfsD+ezRbU1MyqB+w3az1abk4nfoB/NmH
t7AglfoBLH/bbb4rhfrB7q9NK4arnKZ+MH/m73PPJ1M/gLduj9f/OZH6AWzR
1uTQHUf9AP5X9bfeSzHUD+AU6xEvm6OoH8BzTf2eZoZTP4AL+8frxwRTP9j9
UfVO/4aY+gHsvv3TcUNf6gdb/9/erQj2oH4AGyR1Hq/eS/1g/NqjL3s79QNY
GBE7c7cV9YPt/17XNdYQe94C3D5g8KHCFnveBhxjdPqElQP2vJ35n/3cL9QR
e97Ffn8v7HqMM/a8h63PzJ7JVq4K7AcbPzlBdN0Vn1cDbD5X7LB57YLPq2/A
JxX828934/OKpwfvO5Mt6y/vUnC3sxKwMN/aqMEen1cqwO7aVSe32+Lzahiw
eG/x2iVG+LzSAOZdFHnfEFA/gNfaNd/euUkQw/UD+OS7WWtGOVE/gL3V+uv7
91M/gF+PtGj6wYP6ARwuCp001Jv6AWyUadcz4E/9AM6WTLdQCqJ+ALdvy8qK
OEb9AJZ/XrR2RCj1A/haxTm9sHDqB3DS/sbQjkjqB/D8Z1MMLI9TP4BF9+bX
SaKpH8AfglPeVvy/H8DnVlWXl8dSP4BL559adpOeV0uAO1rd90bGUz/Y8RML
6iwT6PsDeJTbZutPCfT9AVxjofbAJ5G+P4BbJzw/1poo4HyYAQ9PyVa3SKLv
DzafZXXjjiXR9wfwrRyrzOwk+v4Adhl5ovX3JPr+APb92WlPWhL6WAO8p6Oz
2DOJvj+A//W48WpREn1/AL9oNK2uT6TvD+Amf+e6fYn0/QEc+5fUtTmBvj+A
B/Q6htkm0PcHsOxhncfFePr+AC6ZKBV1xdH3B7CN3pz2+XHUD3b+RoJGh1jq
B/BzrzzjkBjqB3D/0uhFVuTDDbhwUg7P7zj1A/hypPFg9m/UD2BdX99FlRHU
D+DJkvDUgTDqB7BSY7TW7FDqB7t/FV07dgVTP4ANX25uypZQP9h432eM+CpG
HxLgymXvVEqOUj+ARy/wa7vnR/1g471co9PkTf1gPq+ErjP3on4Az+3Ocnjh
gT6i2fgLmirzDlE/gNNVR6ZJDlI/gGOkx/fO3k/9YDxu6KNNe6gfwJvTzd8P
d6F+AKtNmzF/1W7qB/COlI4FsP6wH+x8Y7UNtzpSP4DLhtWbznKkfrD5vq+Z
6+lI/WD3W81aUxMn6gc7P50lfj67qR9s/U6tc5vhQv0Atnr5pW7RHuoHe76Y
6oWc20f9YOvbJegPZzfqBzufE/F377pTP4ATch977T5M/WDbEx9nzxFRP9j4
89IM1b3QRxGbv7V5A/1HqB/ADZ2v/+rxoX6w4w3yMgb8qB/ABZ8XblQ6Sv0A
9mo8paIsRh8VbP2nrfQaGkT9YPPd99T0WxD1gz1v9gcs/iyhfrD5u/DJ+Nkx
6gew1i9G4vxg6gdw8PXEeZIQ6gewa7upzDSU+gG837L0djs9r96x+V4YrXoi
jPrBxh8y5LxWOPWD3X8HYuTR4fT9wfxeW5rZGU7fH8AbVwQ3CiPo+4PNx5cA
Q98I+v5gv2+3SUql9dHD5mdTumFeBH1/sOerzRP73Aj6/gC++GBtXEwEfX+w
+/n9WF+nCPr+0IfnadnBDzMj0IcS8PWsUcV/htP3B/BbW3UDz3D6/gDeOHrf
ZpVw+v4Atn4tTgwLo34Aa298ZPYtlPoB7H3b+Z1LKPUDeFZFU09ZCPUDePq5
IxOmh1A/gL0q1laLqOeTgHepzqgvOkb9AA41si0acYz6AWxTOGzaJgn1A/jo
t8aY9CDqB3B/+dfjLWLqB/Benknsj2LqB7D9psARWoHUD3Z+DnNEZQHUD+Dm
iiVvQ/2pH8AivcIzdn7UD+DRo0KLl/pSP4DbdznMnetD/QC+V2J1epk39YPN
7yar3VuPUD+AF68uO5foRf0AnmbUs/+jJ/UD2H1llOsWT+oHcLdm/fO3IuoH
sJMsWz1MRP0Afi273mshon4A+7/t408VUT+AxSKez1gR9QO48J/qRm0R9YPN
R71z/AoR9YNdb9xPPoEi6gdwuM7ElVUi6gcb73ZVyjJP6gc7/xV/NUg9qR/A
U/z9fv3Ji/rBzq9CsPVPL+oHm6+pmh/9j1A/2Hx8FzfDwJv6AVw++pzqJ2/q
B3BM1tmoqz7UD3Z8+1mX/XypH2y+AnPtf/ajfuiz9WyZoeVP/QBOl0387b/+
1A/gywahC64HUD/YfHgX/+F/lPoBPD4iPkcQSP0ALqlJHfM1kPoBbGwXVLJR
TP0A1sizq7wopn4AZ7+ax/sipn4A1z7h3xYGUT+AVx7elRlEz6tY4IEWteV3
6XmVAPzXgVuzPwVRP5jPX8N+nCihfgC/32pu+qOE+sHmK19n4noJ9YPdHwaL
851ofWQA+y7V/d5NQv0AvtaU4XRQQv0AzhLlFrhKqB/MV0DWtq0S6gdwQ+rR
GHP6HswD5q84LdeXUD+AlbNWrVGWUD+Acw5OuV8fRP0AFjrLoi8FUT+AH87V
/uVIEPWDXV+WUMwPon6w9WznXTokiPoBvCrWWnafel4E3Bu6amigmPrB1ttN
m2XLyUcpW5+LZqk1B1I/2PE7bZW2BlI/mL+w/quPj1I/gMt8Qn7kH6V+ME4K
+PNaAPUDOLh69pnZAdQP4IQT0anZ/tQPdn8dlzXp0/tuA7A095Dt737UD+C5
L8WPTfyoH8BRWgLNWl/qBztfnQNPDvtSP4ALjqyMm+xL/WDrf8J3TY/p+7wF
+Hmb47gwH+oHuz7pUV9rWh/t7H4bfGY+xYf6wfyuvhvc6039AHYVaFq98KZ+
sPWe/9H9ET2vBphvS9f6Ym/qB1vPLSf5pd7Uj1mwvjbHWtV6C/4HHKLouA==

         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {8.958203125000002, 0}, 
     PlotRange -> {{9.005, 12.}, {-0.05386810730977487, 0.7100685152704873}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {8.958203125000002, 0}, BaseStyle -> {FontSize -> 15}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{9.005, 12.}, {-0.05386810730977487, 0.7100685152704873}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"GLT\"", "\"GLK\"", "\"GLYCO\"", "\"Treha\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23571428571428577`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23571428571428577`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23571428571428577`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23571428571428577`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "7"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.769040530645697*^9, 3.769040719932077*^9, 
  3.7690411542723417`*^9, 3.769041242596836*^9, 3.7690858018225107`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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
tyJx
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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

         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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
O6iTDxUz+D2zWfeMhljxf0Nedi4=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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
wed/Z+4J5/8fdVGX4w==
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {8.958203125000002, 0}, 
     PlotRange -> {{9.005, 12.}, {-1.9187101553290518`, 0.6769184228833467}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {8.958203125000002, 0}, BaseStyle -> {FontSize -> 15}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{9.005, 12.}, {-1.9187101553290518`, 0.6769184228833467}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"PGI\"", "\"PFK\"", "\"ALD\"", "\"G3PDH\"", "\"G3PA\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.18857142857142858`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.18857142857142858`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.18857142857142858`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.18857142857142858`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.18857142857142858`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "7"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.769040530645697*^9, 3.769040719932077*^9, 
  3.7690411542723417`*^9, 3.769041242596836*^9, 3.769085802191587*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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
izI9+4PyeLYy1bJMz/4QXLrafIn+up79Ifh0x+Rr7a7r2R+ClxZPWGJVqmd/
0PPd7gQWX9WzPwTfSXHO/+GKnv0heJiZkda3RM/+oPOZOLLzmCI9+4Oe79ay
oP6inv0hOOL33le2FujZH4Lrn/697voFPftD8P3J7Vxn5ujZH4JnZI64dlbL
eSwT7HXSJO+NhvMIFOzS4ae6uCjOI4jyLeubNWIx10cw5fl93wP6WK6PtYLf
Vod9dU7i+tgguFw7OzAxg+tjo+COx3M9m3IUUh6b6Hw97xzqlsf1ESp4TcTN
ot8KuD7CBA8cfWnuxYtcH9vp/Gvnrnx4ievjd8H2AwLLS4u5PsJpPSZrl4df
5vqIoPo6Ne2F1VWuj32Ur+aLZ8A1ro/9gu1m1fbaVcr1ESU48sHOoKDrXB8x
gj0DanJsUR+xgvP2BDw7VMb1cUzwCNvKRffKuD5OUN77TL57VMb1oRSsvXKq
a2YZ14ea3t/bt0d5l3F9JNLztYNW665zfSQJPta0r0dDKferFMGjX2c2Ny/l
fpVG78fw7f3rrnK/0tJ5vRlRdeYK55FF79fPqdoplzmPbKqHSZlBN4s5j1zB
26Y5dXYs4jzO0/qDe9/cUsh55NP6Q9QVF/7gPArofZtg3uaGnvO4SPWcsuJ3
yzzOo4jGneNqPXI5jxLKf9yo16FnOI+rlH906dB8LedRKji++LmNxSnO4wa9
T8E+HrdVnMdN4g49TibGcB53iF2/Zm3cxnlUEH/p6HdjIddHJbFZ+LzSCK6P
KprfMG7Iqliuj4d0/tcO5xcquT4eUz9Y77hxQiLXx1PqXzsOPXI/xfVRQ+/T
vm7/5aRyfdRSfSzZudEd9fGS6meu0cCADK6P1/S+uD4zdEG/ekv96OxPS69m
cr96T/M/GtW5ZRb3qw90vVPSEYMs7lf10nkNs9Fmcr/6TO+vb96tLpncrxqp
P3Y6N2BcBvcrg97i+ve30h213K+MBMdbThh8L5X7VTPBXu0Xujw4xf2quWDt
bxbTwk5yv2op2L7r2E731NyvWgvuPjd9ZUkc96s2xP3+ebY0hvtVW8Euug3L
pu7hfmUlOHSsa1LoOu5XHQQb7K2eXb0c/hBc4Gesqd0FfxBPiv3gcwj+oPmb
PzuujIM/BJevv7d+UQL8IbjaKMD8SRL8QfsLHFk7LBX+EFwbM1iZouX6GED7
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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
mP2yLSKH8zFQaP2qvr5Bxzgfg2j837p7a45zPoYK7ftk1+6sE5yPYbT/0LNX
/tNzPjyFDtZHby7N53x4Ca0L/35vxCnOh1zolzYdZgajXnmTH7UTlykKOR8+
Qlfn7rfMK+R8jKP56xK8nA2cjwnkh9vSMKWB8+EntH+nB+2WGzgfk+m+Dv+R
0FLI+ZhK5+k1x3K4gfMRIPQnTukZCwo5HzOEvqk9/OZSAedjltCXNM+t+haw
H3OEDpdP2mF7iv0IFLps8KCFA/PZjyDa/5Ptpx1Osh8L6D39uD+gAjxfJLTH
h3HPth5nPxaT7jxrt00e+7GU1gvxGvw8l/1YTucfsir8Rjb7sVLo1tk5Nw9k
sx/B5P/8htp9WeAH3UdGyMFvDoMfpE3K7mvSwQ+6778Xa2elgB/k55WiRxc1
4Aftt+VYXlsV+EHz/xPY7dQB8IPe07jhZ4/HgB90v0vt9rVEgR+03niP3z/b
CX5I7/vqwaVbwQ/y78Gzif3WgR+k76pL580DP0jLTuo2eXE+oklHXl89Yhnn
I47mi/hlkGwD16t4as/N8sxYyfUqgfS481FdNnG9SqT+BdPzwsO4XqmpvdU/
9t5buF5pSdt8tmnyRq5XqdS/XYzlvRCuV2mk6zbNKl/H9SqD+scf/7d0Cder
TNL5/V7cmc71Skf6SXiOjT/4QfoTxXn1CvCD5qsY5eYSAn5Qe81w95ow8EM6
/+JtyTvBD/LD7skIfRT4Qff7dK5zp2jwg/x4UHhRFQt+kF8OVXs7HAQ/6P1k
fRFgUIEf5PeQVoYwNfhBeVz9cLhMBX7Q+zsx8o/nyeAHzfdh766cVPCD9v/m
m8jANPBD6Cgbzd+v0jkft2h/P7qGrMrgfNyl+aYc2HvlCOfjHtWbKfHln2Ry
Ph7QfsZcauOdxfl4RO1OnpN66TgfNfS+PJ6vj9FxPh4LvX/rFeu3qFd1lMcv
g+LGIh/PqR71+/xtKPLxkurPkOVdMrLx/UHrxZ51LM7G9wedb2yt17lsfH9Q
PpoT/leI36+aKN/uVcfU2ezHBzrv0quT12fj+6OPqB9Px28Zma2UnrO50Pqm
jsNe6PD9IbQqMfTHOB2+P4T2vlqwYKgO3x9Cm14dnxeehe8PoUObI8bHZiqj
JH7Q+CWP2+87iu8P6v/lik5bj+D7Q+iodZtuLsrA94fQL38a8b3iMPghtC5r
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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1:eJxFmHlcjWkbx0OmZI0sYwgZxFiOyT7OOdmmBiM1ZqyTTDPZaZClMFmyTfaS
Qs7eRk5DSeqcRNKCjCjLZCnJnkqS7b2v5/r1eftjzPdz38+9/Z7r/vbU7bel
Hn80tLCwmCb+Q/+ef+M4a3dDB2fxvxbDGg43BT1zT7ZvzFx0Z4jJ9YG/XbwV
c/7TQSabQq2v3Ia5XOZkupwnfpqh/cRA0+4MMWBLZsf5MpNHsn3QM1vmViH9
TXbxLmJE5vR5fU3ScO2ZA936mCLCxc+XzBaujqZZNGAnPO/R09RFWiDz5MVf
m2h5Lt2YfcMdTDoxXGF3Zq+bXU0+9NOTWeVib+otDcjctdFXpuditKBvmJ2L
25uk5fVH/yI7059iOK0M7ZW2JifpBzylhalGHF/GYKz/s7WJtus+DO2PGpkC
aMMj0N7kU5pcOkDsL6U6TfrXGZz4OE3KYzR4WG6atN1x4C3/yqU8XMAbynm4
8eA1VXIpj4ngH+vkUh5uOG9PC4WUhzva5zZSSHlMATt/oZDymIr+T6wVUh7T
sf65TRXS8c3C/pKbK6Q8PPF8cUuFtLw5zPeft1JIeXij/aatQsrDB8/HtVZI
ecxD++I2CimPhZjvKzuFlMcSrOe0nULKwxf5jW6rkOJYjrxS2iqkPPwwvkM7
hbTd1Whf004h5eGP58+1U0jDrQO/a6eQ1hFY/3x7hZTHRqxP3l4h5RGE/f3Q
XiHlsRX9BUt57MB4I9srpDyCsR8xnnR8u9H+sR3nsZfZK68d5xGC+fa24zzC
MP6EdpxHOOZ/35bzOIx2bVvOIxLPi/OR8lBj/iI7zkOL/nPtOA8D+r9qw3lE
g32RRxz4WWvOIx7Pe7XmPIwYP9+W8ziJ9pG2nEci1qttxXkkI0+rVpxHCvha
C84jDbyrOeeRDnZpxnlkYD2fbDiPTMyf0ITzyEL7H9acRw7W08GK88gDX27M
eVzF85stOY9reF6B+ihA/w8NOI9CtKdbcB63wHaf5VIedzFe0ge5lEcx2hfU
yaU8HoBltXIpjxJw0xq5lEcZ+GOVXMqjHNykUi7l8Qw8oEIu5fES/Oi5XMqj
Ahz7RC7lUQVOKJNLebwBW5TKpTxqwREP5FIedWDre3Ipj4/gtXfk/Fx3Zl2R
nP0BXn9Tzv4Ad7zB95UV2L+A7ysbcHwB31fNwEk3+L5qCdYUytkf4BW35ewP
8JBiOfsDvOqBnP0B/rmU8+gEPvOY87AHG55xHt2YA1tUcB7dwcGVnEdP9L9V
zXk4ov1iDefxDdpn1XIe/dGuesd5yMARdZyHE/pPes95DAZnvOc8hoE/vOc8
RuB5yw+chxzt995zHs5o3/ee8xgN7vGe8xiH/kfq4A9wgzr4o/683sEfeF5d
C3+An77lPNzRf9hbzmMKeFcN5zEVXPOG85iO55e94TxmgW3ecB6e4AvVnMcc
PB9VzXl4178f1ZyHz//7sz/+z+wP9D9VzXksAYdVcx6+4MXVnMfy+vepmvPw
w3jVVZzHarTHVnEe/mifUsV5rEP7u0rOIxDtByo5j43gfpWcRxD6n3vNeWxF
u9trzmMH2osrOI9gtM+v4Dx2o738Feextz7PV5xHSH39veQ8wsDfveA8wsHe
zzmPw+DQZ5xHJPjaU85DDf7qKeehra+3J5yHAfywnPOIBv9WznnEgV895jzi
wTsecx5GcJ/HnMdJ8E3cV4ngoDLOI7n+/SvjPFLATx5xHmng8EecRzp47CPO
I6O+fynnkYnzDXrLeWQxq4pawx/MFWu7wx/Mk08MgD+YHV2HwB/MXr+MhD+Y
x/d2hz8kDrT8eTX8IXH6oAbB7PO7EneN+eoA+7xY4vtrZsaxzx9I3PfkhnT2
eYnESTcv3mGfl0nc7kfnV+zzcoldVw2wVLI/iO+rih51VLI/iKPzdLJvlewP
Yi+3YIOrkv1BnP++r8lLyf4gtu5l2rVSyf4Q7Dy2Os1yl5L9IVjV2uA0RKtk
fwjOHxbkFpSklM7d4mtni2C7uFkeF5XsD8Hrmy2M3XJNyf4Q3LVHTrn1TSX7
Q/DmdbWHzhUq2R+CfdYEbg8oVLI/BFt/O/lZn5tK9ofgQX6JozwLlOwPwemf
v/1lxr9K9ofgf26s93XKV7I/BD8/Nf3Cu1wl+0PwnvuVW/yzlOwPwb+vzNVU
ZyjZH4JVUztNL01Vsj8Ee5V7rvpwUsn+EGzRcdCfOw1K9gdxVy+L+C1K9gdx
z+X5TULN7A/BzqWNQu/HmNkf1F6V1Kf7KTP7Q/C2oC6VuSlm9ofg1P2zbZem
m9kfgqO7WFd8fd7M/hB8//fEv/7ONLM/6PkFHud2ZZn5hRZ8LLtn9PBssxSH
M53f/pmbtuSY2R+C8/8+eGlFrpn9IThQdrvGMs/M/hA8787g4GF5ZvaH4OTR
R2tt88zsD5o/229bSK6Z/SF4bZ6L+4UcM/uD5ndo09mQbWZ/CC54kPyz8pKZ
/SHYMmvQk9CLZvaH4KJ7Q0YYL5jZH4KHqVp8Cskwsz9ofPv7/Sakm9kfNH/g
nLknz5rZH4J9rU4v35NkZn9QfiNse32XYGZ/CJ58dUjDzVGcx0La76/v+uYd
5DyWUB6WF5PXeXMevpRX618iivZzfSyn+aa2dnih4/rwo/Oziz79zwmuj9WC
W8UmubZJ5Prwp/nDht74MkUp5bFOcIfs7TNLTFwfgYI/rJgdcPIc18dG2r//
06VXznN9BNH8o2++MGVyfWwVXH2/ec2GLK6PHbTexf41dtlcH8GCjY+nZfrl
cH3sFnwwwtqkyeX62Ev83uVYRB7XRwi9D8u+uT7rMtdHGOVzaNPT8stcH+G0
vneyNsorXB+HKf8NFQ9nX+H6iBQ88ddmUyde4fpQUz3ZXMprfIXrQ0vnbVfa
dNdlrg8D7e/ltYGP87g+omk/Hn1Ptsnj+yqO1n9x9Ix2uXxfxdN491IGV2bz
fWUUnJff5lDsJc7jpOALwx52GpPFeSRSe6lhnTmT80gWrPOzMna/wHmkUB7p
fbOWZ3AeaYIdMxtXnEznPNIF115vcz0/jfPIoPtJ8fZFnxTOI5Pex++WJq9P
4jyy6DwLxh8u+IfzyKH8f557fH4855EnWKZ7kzApivO4Su+Lau3ZuSrO4xrl
p/cO37Kf8yig9/FZc/PKAM6jkHjNGZnLCq6PW/Q+vE28I9vD9XGX7rtRFT8t
jOD6KKb9Wb8oK1RzfTyg9TyZNOGtnuujhPI48Kl4ZwzXRxmt53StQ9gxro9y
ut9u/lDX8gTXxzPab+mYGQFGro+XNN/wMwt6JHB9VFCe45/nbkng+6qKzlPf
M0uVwPfVGxr/hMNcvwS+r2rpfEO7N7VK4PuqjtZrGOU3zcj31Ufqf+qY8nY8
31cWPcR+N8m67z/G91VD4i+6THgUw/dVY8H3k0Odiwx8X1kRl9e6+Wn5vrIR
rEqZaBVylO+rZoK7BjbLSQ3j+6oljRdrPFW3i+8rW8GBiX3mGgP4vrITbOFx
dntbT/hDcPraJ/eig+APmm/Ab5cK98MfxOftd9w8DH8I9rrqmv+fBv4QLAtp
WDo8Cv6g9ewMKFgZB3/Q+M1bl+44AX8InnYlb/zpBK6PbwRbFzX13XmS66M/
9d8X03lsIteHTLDvK0tNURLXhxOxoflB12Suj8G0PtdzDnvPcH0ME+xas/yB
MYXrY4TgS7JmrwxnuT7kgmvPdWr7ZyrXhzOdh+v7vS1RH6MFJ7/aUbMhjetj
nOBtVXM8LqVxfbgQe9h7lqRxfYyn+c57T7+exvUxkcb3uXclIo3rw43W63Gv
cFga14c7jf/jL1P/SeX6mELn5aVba5XKeUyl8xy5QTviLOcxndbnbfjDLYXz
mCV4ckXJPpcznIcnjW+KXN0zmfOYIzh6w4HAV0mchzedz0VNqD6R8/Ch98fP
uuPEU5zHPDqf1qplZf9wHgtp/FnBlqsTOI8lxCXLlZZGzsOX5ru1ZEzn4/AH
tfdrdmRQLPxB+V0uMUyJgj9ovvErj23WwR+CW437EJmthj/ofaqoqPSIhD9o
v7sdEj3C4Q8ar7FV68Mh8Ae93wdDcobugT/o/T7bSzZzG/xB/P26L6w3wB80
nvFxTSM/+INYE5Hn4g1/EFsYLTsU8N93Q4gvNr99aDb7PIy49SKfBov4vgqn
8XfcsZq5jO+rw8QbZxU8XMH3VSRxUa1/lB/fV2ppPYa6Cyv4vtISXztfMmIZ
31cGGt/l1Jf9F/F9FU1sc/XvKi++r+KIfW8cXDCU76t44gWzPnvPhD9ovG17
Kn/xhT+oPXHu7VJ/+IO4+d15AzfBH8T/XX4ydTv8Qef56en2gt3wB533GPua
8fvhDxq/UKHOPAB/EB/cEOkeAX/Q8/3+DX90BP4QbDw3cG+qCv6Q3mdTw00a
+IPy/9O192gd/EHtYxPVVXr4g97XET5XD0TBH7SesMWJvWLgD5qvf0MbbSzX
xy3qP2pNly+OcX3clfY7bsWk41wfxfT+rbvxYE0818cDen79hOAtJ7g+SgSX
d5GtHm7k+iij9pdRJZFGro9yqvduf3asMuL7g/of87gxGPXxUnBRr1NvfBLw
/SF4mOzj5i0J+P6g9cwvMIYk4PuD7rslhZf3JuD7g87jQg+P9Qn4/qDnG8cW
zkjgPD4Kdszd1sExAd8fPZ0tKt7aPykzKqXXuaHgwGDH7w4a8f0h2NhtQAe5
Ed8fgvcM8R5y/AS+P+j5N5tf5sLnzQRP/sbz36Ljyj2SP+h59SK/m8fw/SHY
62Lcqqw4fH/QeIPm7o2PhT8EWxzOWLMrBv6g9Xh+MM2Phj/o+fueHcdEwR/E
/o+OdzbAH4LvX9f99V4HfwiWxQ2aVKyFPwTnb1+cmK2BPwSrtPvczWr4g/oH
JI49p4I/aPzP4bc0R+EPwenfrrIsOQJ/0HyLc9p9fxj+ENzV15h4JQL+oPY4
mxF/hcMf9PyhQ0umH4Q/iJ0epXiGwR+0/wsh9nsOcB6jaf59hr4vQ+EPGv8L
S7s1ofAHtReX7peFwh90XoYh7e1C4Q8aX7HvgEMo5+FG62n+wDQjFP6g/r90
Lk4JhT9o/OVbq50PwB90PlvLLj49AH9Q+7nzGYlh8Ae1D7cbcPQg/EHjZ077
QhcOf1D/aU1czkXAH4KdU2Snqw7BH8RFERVDj8AftN6twaodkfAHtf8+dmb5
UfiD2qNs/zOo4A96vza6HZuphj+ofWFMZSsN/EHPX/BvmamBP6j/vF+XrdTC
H9SuGxDWXQd/CG61cHHnXB38Qe/nToeYhXrOYyNx9fDaRgb4g+ZrbPqwzwB/
UH45bY+3j4I/aPyPA7rujYI/qF7S74R/iuI8dtP5101eOjsa/iA+s/brk9H4
/qDzXHT3x3fR+P6g+aO+/2cg6iOc9rNI3ntWDL4/qN3tt9OrY/D9QevrNnj1
1hh8f9D4u3WGbTH4/qD23vrItTH4/qC8fHyueMfg+4PyLQu4pIjB9wftx333
gBYx+P6g92/zlYv/RsMf9PwO+bSd0fAHnUfiwmxFNPxB+3kS27gcPk8W7Nt9
9tvtUfAHnf++j6oeUfAH7WfKs5apBviD9pv58PtJBs4jg8Zb/nbBf3r4g9ZT
kBG3QA9/EPeb2OGtDv6g9Wttwzfp4A+6r6I/j7LVcR5Xqf+oolcqLfxB+59/
aZKTFv6g9X2qGSXuD/YHrb8qqeHvGviDztMzYqSlBv6g/gE7UmPV8AdxVXHA
NDX8QXlMTp/TXA1/0Pwn/orKVsEfdF9V/m2zSwV/0HpvTM2foYI/6Hz3t3eS
4b56Sef1V6dpLVAfFbRfpenQ06PwB41f26J9zlH4g9oXPHmRchT+oPOs7JGa
ehT+oDzvOra8ehT+oPUuTRv5+ij80Uu0X+8+1lYFfxBvSGgxUAV/CN5j2Spw
qgr+EOwVFdBmM3xuI1hV+dwpSQV/CDbG+k98oYI/qH9E5mlHNfwhOD/Nq2Cu
Gv4QnH76VXWMGv4QXHHKftlLNfwhWPaVffgg5NGJ1vOrPCNAA38Qr2jjcr7+
+4PG09ivs9HCH7SflDs5k+v9QesNXB8WqoU/aD1NX08u0sIf1L9CtqyDDv4g
9o5d+bMO/qD1LFz9bJcO/hB8f63L/Av4e8lg2r/iUNgbHfxB62t2q6ODHv4Q
bBGz+fgPevhDcODtHl0W6eEPWl+QjXI77qvRNF7I7SoV6mMcnefG3kNOoj5c
aP3X9r836+EPwc5m+Q9ZeviD5mvSckS2Hv6g8+2nKc/E71fuNF/WyMA0PfxB
89UYBhn18Idg32LviZF6+IPaxxS33KaHP4gX/Z67WA9/UP/luf+56eEPOr8e
XdX99fAH7bfBHB8bPfxB65uwZl+JDv6g9Vx335eigz+ofYRj9m7ksYTOP9as
9UYevjT/w5fHhyCP5YInz2j5a5P6v1/R88p3De9q4Q9qDx/X9ES9P2h9kxrd
2aiFP+j96Ri0d6oW/qD9tH/t008Lf9B8E63fWGrhDxovtNXuYg38Qe/DtXkr
UzTwB82fds09HL/vBlP/4QNPifeX/UHjnT3l46WBPygfj/9krhr4Q3CrRuvH
OOG+CqO8684Yu+G+Cid+7be5DerjsPQ+Ds21Rn1E0n56H9/UAPWhpvnaGQ0f
cV9pqX8njaNg9gfN/yL89Wc1/EE8tKqksQb+oPPQ6u+10MAf1L5kdmJHDfxB
+e5cNLS3Bv6g9d850n8EfJ5I563v9seP8Hkyzb9m2pHfNPAH1Uuj0og1GviD
3gebnzvv08AfNL628GGcBv6g5y/vjLqogT9o/Ijk3g+RRxa9L0lbHT4hjxzK
w+naTx218Ae12+5dNUQLf9B4f8S6e9T7g/Lqe0G9uN4fdJ53vAZu08IftL5e
OdlqLfxB41e4D0rRwh+0ntTbo69p4Q86r5xFWWVa+IPq2W/H0TrcVyU0/7ll
8c108Ac9b158vRPqo5zak6Kr+qA+ntF6NjhbDkV9vKTxP6RWO6M+Kqj/lkCT
K+qjis43vHr2JNTHG+l+CbjljvuqltajvuP0E77P62i8BPNqD/x+9ZH2d/Zg
sht+v7JwpN8vfK0m6JT/A3a+dZw=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1:eJxFmHlcjen7x7ONnSKyS5oZ+0SWMOecxkwja2UZS5aaqNCk7DLITqhQkkmd
ztIup40snZOolCLbxHcaFBKRsjaI330916fXrz9m5j33/dzb57nud0/9fl85
Y2lTIyOjueIf9O9L7wYsCGpqYSv+0+jKZxv9rmqnzD4tmG3vjdbbl/uZJrdk
tnk+Ut+mVO0ja8PsONxaX1wkftqhXTdcH5QjBuzIHOxppZ+R2WdXtQlzSdAw
vWnyRDEis7/rEL00nBnGsxukPx4ufrozm48foF9AA/ZiVk74Tt9XWiD6O1vq
aXkT+2G9uyz0GjFcaX88n22ud6ef75iNzProB0oDMmdf66F/IUbbNRjPx5jp
peUNQ/sJU72vGE5thfZ0E7219IP132yvfy+OL2cUxt/YSk/bdbLB8/Ob6TfR
hseh/eXnLJl0gHj+6Jss6f/bot3lSZaUxwTwhYtZ0nbtwLNKZVIeE8GvnvNw
k8Gpb2VSHlMx/p5PMikPB6zns5FcysMJ3Ly5XMpjFvb37zdyKY85eH53a7mU
xzyM36ydXDq+BWif0UEu5bGoMS9jubQ8V+aHY0zkUh5umK9vJ7mUhzuzy5tO
cikPT2ZlWme5lMcKjO9iKpfy8Eb7R1O5lIcPxt/eRS7FsRrr/6+LXMpjLeZb
1FUubXdD4/hd5VIefpi/vqtcGm4z2oeayaV9+mP8mWZyKY/tWM8KM7mUxy7s
d62ZXMpjD9p9zeRSHgF43sVMLuVxAPyzmVw6viCcZ08zzuMQnq/synmEgGO7
ch5h6C/2I+URjvW26cp5RGA9yV04j0js374L5xGN5/8x5TzUaF9qynnE4Pln
nTmPOKx3KfJIxHmVdeI8ksHTOnEeOjx/1oTzSEO7uQnnkQHeYcx5ZGI9eR05
j3PgrR04jyysb0R7ziMbXNGW88gBB7XhPHJxXuNacx75aH/ckvMoBAd+w3kU
NfZvwXlcx/xVzTiPG+DwppzHbfD0JpxHKZ5vZcR53AMfbpBJeZShf/9PMimP
++DcepmURznY771MyuMR+Oe3MimPSozX/7VMyqMK3KdWJuVRjf7uL2RSHjXg
oiqZlEct2PeJTMrjDXh+hUzK4x3Y+IFMyqMe3Op/MimPj+CIOzIpjwbw3zdk
Rrwx5p3FMvYHuOiKjP0BDs7l+6oluPYS31dt/p/ZH2BlLt9XHcGmBTL2B3ju
NRn7A3z5poz90dheKmN/gJ+XcR69wHnlnEefxvmecB79wN885zz6g9/XcB7f
Mfsb6jiPAeDYN5zHYPCYd5zHMDy//j3nYQX2+sB5WIN71nMeo/D8gXrOw6Zx
f/Wcxzi0F9RzHjJwdD3nYQueWc95TAA//sB52IHnf4A/MH7We/gDbPwe/mjs
/w7+QLv6LefhBH71hvOYhf6/vOE85qA9/jXnMQ/tlq85jwVoP1/HeSwCr67j
PFwb91PHebiBF9dxHu6N54k8PNG+vI7zWIH2eXWchzfax9ZxHj5o71DHeawG
/13LeaxF/5BazmMD2ifVch5+4OpXnMdmsPUrzsMfvLKG89gOjnrJeewC57/g
PPaAn1ZzHgHgZtWcx4HG9+U55xEEHv6M8zgEnlLFeYSAPZ5yHmHggErOIxyc
+oTziAA/esx5RIItHnMe0WDvR5yHGnylgvOIAY+u4DziwGnlnEci+KdyziMZ
XPaQ89CBtzzkPNLAgx5yHhngdNxXmeBeDziPc2D/+5xHFvjhv5xHNnjcv5xH
Dnh7GeeRi7zL3nAe+czZ4SbwB/pHWMAfzLVbhsEfzN12j4I/mKu8xsMfzB00
jvAH84aI9fAHs9PQ/ezzMoltt64JZZ/flzh7/ZwE9nm5xPY9Yg3s80cSNz+n
+h/7vFJiM9Ocl+zzKmL/txVdminYH8TKsD0juyvYH8SZA+Z9tVKwP4izr539
ZqKC/UFctXaP7WIF+0Ow/xMfbdu1CvYHtftZDmx7QMH+EOwzaKyxkUrB/hDs
8u0PzeQZCukcjSxtjX585pwxNVfB/hB8pVtn33clCvaH4DXXFnoE31GwPwRn
RhgM7qUK9ofgC1HbfUaUKtgfgo8ure/57I6C/SF4+k/Di/reVrA/BPeY4DGp
+00F+0NwSXb5iJfXFewPwbMOj1yy86qC/SE4O+FWt9b5CvaHYJ+7b1P35CjY
H4KVsZMGm11QsD9o/bvLWsvTFOwPwcFF6yZZaRXsD8H+vbN+KdmmYH8Ql51Y
PCDMwP6g8UzmZlxOMLA/BBvfTvbYkm5gfwh2dBm3qeN5A/tDcKuUwNY7sw3s
D8G9DDaXfrhkYH/Q/LdsVm3LNbA/aLzYrOAt+QZ+oQXv7Oo2oneBQYrDVvDb
da5miwoN7A/BczdEPLC9amB/CD7wMm5g3lUD+0PwgOMZwa+uGtgflM/PSScM
Vw3sD+JVL9LGXjWwPwSbLzn60bXQwP4QXPby3hRZgYH9QeedFdL9Rr6B/SHY
RlUwr3+egf1B5/X5ls+4ywb2B+139KpevXMM7A/BceqaERqDgf0h+NiCcl3O
OQP7g/IzuxiszDCwP2h/HaxGOOgM7A/BRrWd9p3Rch4raD0h7/WOoZyHN7X/
uH1W82lcHz7EVfPdW4ZxfaymfCa+DPkjhutjreDaR6ntD+q4PjYI7nagIvBs
BteHH+V9MKc25ZxCymMztT8ZfM7LwPXhL3hBZcuDtRe5PrYLrn/9581ml7k+
dgn+5ZfPa1/kcn3sEWxaZZ4Wm8/1ESB4g4PXyxEFXB8HBFtZtu5yoJDrI4jO
66XdoZSrXB+HBE8tNoxVFXF9hAiu0m9avLCY6yOMzm934KWKYq6PcMq/2OHw
iGtcHxFUP4+tlk+7xvURKfjhz5mOI69xfUTT/BaHE6qKuT7Ugtul1Nh5FXN9
xBCPf2h3sYjrI06w14n0/s+v8n2VKPj246UnnxXyfZVM++u6721OAeeho/cr
dIfjxiucRxqdn9XbWcb5nEcG7a9g6eX9uZxHJp3nouPBry5xHucELynNL1Tk
cB5ZlP+IzxH+2ZxHNuXdfO9OryzOI4fOw+Z6XcFZziNXsO2MDw39TnMe+YI9
//RvsTmV8ygUrItwWp53kvMoovo8nFWaGcN5XKfxn152vBjFedyQ6qH7imOH
OY/b9P5fCiq028B5lBJv8fnr2Tquj3t03iPbzU8P5vooo/W0+6/yynGuj/s0
X4xNyJtoro9yej8XNw3+quX6eETjnXxxZns810clvZ+rFszemMT1UUX5fVlx
9UEy10c13T9tps+dr+P6qKH71Hfe3U86vq9qaf+lg6fMTuH76g2tp2f/xx4p
fF+9o/pMGqYalcL3VT09PzLqZbaO76uPdH/U/ljXTsf3VQPNn75s27hkvq+M
vhX7Sbth9CKR76umgn1GV10fHc/3VQvBVheU4ZYxfF+1pHbnhuUGFd9XbQQb
yQt9+kfyfdVOsDK+6NTUo3xfdRScXeM72vwA31cm1D/uxEGTdXxfmRKnd2zX
Yjn8Idh25m/FTnvhD+I2epO+ofAH8aj7zTtEwh+0vqdzjX3V8Idgl8Am5Zdi
4Q/BD9OjTr5LhD8EG19c9PLLKfhDcH2gX1V1CtfHYOq/W1V8Po3rYxjt51Px
NK8Mrg8rwTbxFsafTnN9WNP+vg7auiST62OUYH/XkmMxZ7k+bATPHT/2RvY5
ro9xxHcb4nTnuT5ktP+HpRlrLnB92FIeVpbZ7VEfE2i9V7cf9Mvi+rCj9fww
u+R8FtfHRMF3e7m+v5HF9TGZ8tmSGZmVxfUxldormmT4Z3F9OND6XDTbemZx
fTgJ9txhvfzQBa6PWcQ9IhMenec85tD6go5vNj3PecwTXDXcvcf35ziPBbR/
z/CS3mc5j0WCu/lZJn46w3m4Ci55HdD88mnOw02wufefzzZmcB7uggc4LNCY
p3MenjT+xkP551M5jxWCWw3vOHJ6CufhTfn3qMnOPAV/CHZ84vWmJAn+EFy7
q9eN6nj4g7jbwWMmsfAHnWfJitRfNfAHvT9bA68dioY/aD+FHna1J+APOq8Q
1/iGY/AHtTcs+3V2CPxB7Fe56GsQ/EH9H4x42mov/EHntybq29v+8Ae1b63Q
3l0Df1B7/5nBnm7wB7FRgONTE/iDOKDJ6r0L2edhxC063ApYzvdVOI0Xl9J2
qS/fVxHU/nvF7qzVfF9FUnvG/H7z1vB9FU3tg17tsF/N95Wa+PiyulAfvq9i
iOdq7LSefF/FEduWfXKez/dVIrF5z82XzeEP4oY449uu8AexaWHG+lXwB83v
aB9lvBn+oPysXy2avBP+oPaxSdt9A+APat9a4bAuGP6g8c5ekd05An/QeQ86
VT41DP4gfrU95PZx+IP69+r51C0S/qD83e3t/lPCH8TjK00vqOAP6j/+7I51
GviD7g9dRo9vY+APqrdhia0vx8If1N+lYptjPPxB9Tp60pj8BK6Pe/Q+3ZoU
8G0S10cZvW8v+rRYdpLr4z7N/8zrQFAy10c53TdHZzmEneL6eET3Q2rkcoWO
66OSxh9c4aPScX1UCda52Tu91eH7Q/CV+8MLRqI+aug8Bs7Xu6Xg+4P69/5B
vi0F3x+Cj8028juYgu8PWk9CasHeFHx/0H0YMStmdQq+P6j+UuYlifpjf0i+
+BrWIwXfH9+J9atcFHd1Cul1birYSLUzdK8O3x+CrfJuaYbo8P0hWJmRZLL/
FL4/BAdHT38Wl4zvD8E639aTMk4qgiV/CHapS72UmoTvD8G2xR716kR8fwj2
cS08tj8B/qD5xh/5zSse/qDnT54ptI+DP2j+TR7a/rHwh2DHO8tvfdXCHzT/
zrytDzTwB+0v4k3CZTX8Qf37jlyVqoI/iMec/CshGv4QXPL2vu0pJfxB8/0d
6bszCv4QnP0xyKPwBPxB3HD/d+sI+IP2d6bzx4vH4Q/iRzXrN4TDH9Q/vG34
3GPwB7Hv1TNuYfAHnb9Rdd7xo5zHBFr/3gnTvoTCH8Rn3b0DQ+EP4nuWDyaH
wh803tNiI+tQ+IPGa+J8yS6U83Cg9WgOFW0LhT+I89LcnoTCH9J6Du3wPgp/
0PlPPv2yRxj8Idj/S5P2VWHwh2DzMV6Wt47BH/R8zuqh98LhD3o+J3vQh+Pw
B61nzJbHAyPgD+LYd3V/nIA/6Pne/zTPjoQ/aL5PKxd0QB7e9H5s++a3bCX8
Qfuv/CBfEw1/0H7sp6waoII/KF/FqJn/qOAPet6yy+z9aviDnh+Q82G0Bv4g
9jV7UKaBP2j9HrvSNmk5j+30vrZzHtMpBv6g9S4e7RoVA3/QeseYDrGIhT8E
G3s4p4XHwh803tmpihZxnEcQvW/2ywYuiYM/qL9Dxn8ZcfAHjdcx2/5jHL4/
qP+fHcqtUB/htN6GiyfmxeP7g8Y/fWv3mnh8f1A9XL5ybls8vj/offa0Wi+Y
/UH7cfDsIfqzPyjPM4mm8+Px/UHnWdL7o3U8vj/o/J56rmwaD3/Q83WdxubF
wR80/sW3/fzj4A96fshk4+Fx8Afl7eH06h58nknrW9Q/dlMs/CG4VrNgrFks
/EHrWfU57WQM/EH9VV3MbGM4jxxaT6Lpvuta+IPOZ8/mHxdq4Q86n9gQ+XMN
/EHnM+eO93oN/EHzJc1+2ELDeVyn/VhtWH5UDX8QdxqaPFANf9Dzdtf3Z6vg
D3q/VsxxWKCCP6i/5SVVQzT8Qefh5jZVGw1/EI9wdJgVDX9Q3lf6LmwTDX/Q
+tf8cT1fCX8Qhw5ZdFAJf9B+m3WZ4qyEP+j92BxXPBz1USPd109bmaA+amm+
/ladXkfBH8RT03ffioI/iPcNHZMXBX/QeBc3XiiIgj+o/XZD1L9R8Afd97c7
/2WkhD++F1xc9aC7Ev4Q7FJoZz1OCX8Idlx1oKurEv4QrDt2pXkgfN7me/r7
QLKnqGf2h2Dzol9PflDCH4Jtp20aah0Nf9B8yhn2q6LhDxovpoVTejT8QfMv
NYmuj4Y/BPt0jd4tV8Ef1H6kl/MuFfxB41uu2Fikgj9ovVFzbDqr4Q/iufe/
zm30h+DsliU2J9Twx/d03rdnPFDDHzTfrrDCPhr4Q7Bx6adezhr4g/b30927
RzTwB61/5ejwKxr4g8Y/nNryPw38Qetzu1ZgqYU/aPzmr45P0cIfdH7KoKl/
aOEPmq/NKN0+3FcTaP0djiYrUR92go2mx/2UivqYSOPl9nDRa+EP4oQLHXO1
8Idg5Y+JXnla+IPm6/Db4Rwt/EF5jOyWdFYLf9B+AvU1iVr4g9Y/bLo6XAt/
0P51lzvt0MIf1F+zfJ+nFv6g8xy51mMyfO5K8xWf+magFv6g9tCVac3x90R3
Oq9SxY1/NfAHrbf0wvV0DfxB8/8+zzgAeXjTep9rvy5EHj60nsygEcORx2p6
3tnUojnyWCv4YWieaaka/iC+NWNNQqM/qH9TmXaLGv6g8ZLi02eq4Q/i8deL
xP3B/qD1vC9XN1HDH7T+rC9hwk/sD1pfh8zKMyr4g9rlW6eE4ffdA5TfuuAZ
fir4g87v9NJNi1Xwh+CSB4/PT1TBHzTfVfOfrXFfhdH7MNPdwgL3VTid7+Gb
S0xRHxF0vjdedWmD+oik9+FGsHUz1Ec0jafXZ3zFfaWm/mYWwYLZH/T+zfsl
oSl+v4qj+ZZUPGmlgj/o+ZnbLDqp4A8a3+yYVR8V/CHYP7dbxRAV/CHlkfhV
Bp9n0H7tls10gs8z6fmA5Ch3FfxB7aFD4jar4A/Kq+DokKMq+IPOx/i36lMq
+IOeP3JDWaiCP2h94Zq2lcgjn87ni/cTkRf7g+6P6h21vdXwB+XV1/vpWDX8
QeMHbgqc3egPak96p/Vp9AetJ+TX+gA1/EHzTdrvoFHDH8QJzmsvqOEPOl/N
3+NvqeEPah+Yv7YKfy8pp/3enNH0M+6rRzRfZXRuew38Qe/LuR+ieqM+qqg9
6MPqwaiPano/h7QfNwb1UUPrWzS0whb1UUu80NHdHvXxhvr3GJg7DfXxjvKx
8PrqiPuqnvL2W9FnBr7PP9L5Bs4Z4oTfrxpoPcvfjp2O36+MBojzXHHEeZJG
8X+RNmOA
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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
u0c8/OEk+FnHsDHxyv8DJYRbFw==
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {8.958203125000002, 0}, 
     PlotRange -> {{9.005, 12.}, {-0.23494499171727057`, 0.4076759734400923}},
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {8.958203125000002, 0}, BaseStyle -> {FontSize -> 15}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{9.005, 12.}, {-0.23494499171727057`, 0.4076759734400923}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"GAPDH\"", "\"PGK\"", "\"PGM\"", "\"ENO\"", "\"PYK\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.18857142857142858`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.18857142857142858`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.18857142857142858`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.18857142857142858`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.18857142857142858`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "7"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.769040530645697*^9, 3.769040719932077*^9, 
  3.7690411542723417`*^9, 3.769041242596836*^9, 3.7690858023764477`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1:eJxd1X9MVfcZx/FbpyFx/oitmXEaWifnHBsbZzVuxnl/jIzgKKmhYUEXxops
jMqKNM6NsJHcmBFaQ4asbpSGEBkLZWMhZMyGsekInSNhrIyVFc2MKbFjrHSE
1dEQE5N97/OgT77v+4cn71z8es55qZ9dp8489801sVjshPslc31reU9py5rP
pGLyufz7xoWioex11sdm67f2Z1mvn+muja+3/suE+2ywbhl1B262fm4ou3Fh
i/XW/nx3orUct8369Xb32W5dmjlwp/XjcoPWmdvL32X9c3fczG7ryswntH5S
DrT+0J3WuNdabm+f9UvuuO791gflY/2xe32jh6wzj1t02Pr7mQc+Yh2XF2gt
l5S1eORay+PmWYtHvrUcV2AtHoXW4nHcWjyKrMWj2Fo8SqzF46S1vL5Sa/Eo
s5bbK7cWjwpr8ai0Fo8qa/GothaPGmvxqLUWjrPW4nHOWh63zlo86q3luAZr
uaStxeO8tXg0WotHk7V4XLAWj2ZreX0t1uLRai23d8laPNqsxaPdWjw6rMWj
01o8uqzFo9taOHqsxaPXWjz6rMWj31o8BqzFY9BaPK5Yi8eQtXgMW4vHVWu5
jFiLx6i1eFy3Fo8xa/EYtxaPCWvxmLQWjylr8Zi2Fo8Za/G4aS0et6zF47a1
eMxai8cda/GYsxaPeWvxWLAWj0Vr8ViyFo+71uKxbC0eK9bicc9aPO5b63X3
w9b9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9
sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sNb9sJZLCh658MiDRz48CuBRCI/j
8CiCRzE8SuBxEh6l8CiDRzk8KuBRCY8qeFTDowYetfA4C49z8KiDRz08GuCR
hsd5eDTCowkeF+DRDI8WeLTC4xI82uDRDo8OeHTCowse3fDogUcvPPrg0f+g
YzHdjwc9cFT340FPH9X9eNAfHtX9WO30J+K6H6v9/I647sdqrxyIy3VktZ8q
iOt+rPaaU3HdD+30n+riuh/aI1mt+s9tXLu28o247of2iS0jcd0P7f9tfDeu
+6H9sy8uxnU/pFPl19YmdD+k0zde3JnQ/ZD+60/rDiZ0P6R/9UJvQUL3Q/rV
L8dPJXQ/pHcc/aguofuR6cuL6za2JnQ/Mr3/O/PPvJHQ/cj0sQMfTf4hofuR
6dd2/PM3f0/ofmT65aa3XvtPQvfDdfrl+mvB2qTuh+uR7x76R8mOpO6H6/c2
PPvjFw4kdT9cdxx9s67oWFL3w/VTp5++3F6W1P1wnSrOezXvpaQ65qRi365+
54NN6aTuR05q5PMnPh2vb0rqfuSkUn9+rOdfx5qTuh/u++x3P/do24+Suh+u
N53p+/orLUndD3feK5ezvjfXktT9yEm996lHvvCLtReTuh/u+5ql3Cc+eTGp
+5GTSv9k4cgPN15M6n7kpJ7P/kZR5aaLSd2PzM8/euO3rnU/3PefffLNG651
P1x//MvH33et++HOe/GZE/OudT/c978+MP9v17of7rz3c3/wgWvdj5zUE7/b
MZhp3Y+c1OUzZ8Yyrfvhfv6/K29nWvfDvY9rf5zKtO6H6+q3/5Zp3Q/35z/2
9DuZ1v1w72f4K9K6H+77r1ZIJ+QFuvurrpIWjpS7n2dPS+t+uN//SLW07oe7
vy9p6364/pq27oe7329p6364809r636486q1dT8e+K96FLvnWW3dD3e/q637
Ya37Ya37Ya37Ya37Ya37Ya37Ya37Ya37Ya37Ya37Ya37Ya37Ya37YS0eDdb6
/5q17oe17oe17oe17oe17oe17oe17oe17oe17gc82uHRAY9OeHTBoxsePfDo
hUcfPPrhMQCPQXhcgccQPIbhcRUeI/AYhcd1eIzBYxweE/CYhMcUPKbhMQOP
m/C4BY/b8JiFxx14zMFjHh4L8FiExxI87sJjGR4r8LgHj/vwiAW+x5rA91gX
+B5Zge+xPvA9NgS+x+bA99gS+B5bA99jW+B7bA98j52B75Ed+B67At9jd+B7
hIHvsSfwPfYGvse+wPfYH/geBwPf41DgexwOfI8jge8RD3yPFDxy4ZEHj3x4
FMCjEB7H4VEEj2J4lMDjJDxK4VEGj3J4VMCjEh5V8KiGRw08auFxFh7n4FEH
j3p4NMAjDY/z8GiERxM8LsCjGR4t8GiFxyV4tMGjHR4d8OiERxc8uuHRA49e
ePTBox8eA/AYhMcVeAzBYxgeV+ExAo9ReFyHxxg8xuExAY9JeEzBYxoeM/C4
CY9b8LgNj1l43IHHHDzm4bEAj0V4LMHjLjyW4bECj3vwuA+PWPiw5a/zmtD3
WBf6Hlmh77E+9D02WF+U/Qh9jy2h77E19D22hb7H9tD32Bn6Htmh77Er9D12
h75HGPoee0LfY2/oe+wLfY/9oe9xMPQ9DoW+x+HQ9zgS+h7x0PdIwSMXHnnw
yIdHATwK4XEcHkXwKIZHCTxOwqMUHmXwKIdHBTwq4VEFj2p41MCjFh5n4XEO
HnXwqIdHAzzS8DgPj0Z4NMHjAjya4dECj1Z4XIJHGzza4dEBj054dMGjGx49
8OiFRx88+uExAI9BeFyBxxA8huFxFR4j8BiFx3V4jMFjHB4T8JiExxQ8puEx
A4+b8LgFj9vwmIXHHXjMwWMeHgvwWITHEjzuwmMZHivwuAeP+/CIRdiPyPdY
F/keWZHvsT7yPTZEvsfmyPfYEvkeWyPfY1vke2yPfI+dke+RHfkeuyLfY3fk
e4SR77En8j32Rr7Hvsj32B/5Hgcj3+NQ5HscjnyPI5HvEY98jxQ8cuGRB498
eBTAoxAex+FRBI9ieJTA4yQ8SuFRBo9yeFTAoxIeVfCohkcNPGrhcRYe5+BR
B496eDTAIw2P8/BohEcTPC7AoxkeLfBohccleLTBox0eHfDohEcXPLrh0QOP
Xnj0waMfHgPwGITHFXgMwWMYHlfhMQKPUXhch8cYPMbhMQGPSXhMwWMaHjPw
uAmPW/C4DY9ZeNyBxxw85uGxAI9FeCzB4y48luGxAo978LgPj9ieh/1/HODy
5A==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1:eJxFmHtcTPn/x1OIsIp0GRRyW0Rf4es2My3rslaiTWRDRFpZsonk1lqxwpZd
K2xairavVlphk53RTjPTSFephLWltFa5lFty+70/5/06j19/fL/7fJyZz/mc
8zyfz/OMvkvXeC83NzMzm0//I/4/9/lg/1jzfh70n2ZxfVy00Q1zspzagR/2
0U6vibRNt2TuM9xJa1WZHKq0Ynbz6KktLKC/zswZdo7aWB0N2JW55Hd7rXeW
U3SDDfOTCjutbfo0GhHjv+6hlYazx3GXHtojh+nPkTlgtq3WXwzYi/lYVHet
szRB8LluWjG9aX1x/kYb7QkartKFOXSwjTZI/A1ktg621n4oDchcPbertpFG
ix7KbFbbRStNbzhzzobO2rU0XLIbjnfvpHWX/jC/cx21L+j26UYzeyzsoBWX
O2cs7ldnS+0mccHjMV9dO61SuoE4vrWtVhrXA8c9LLSSj0k43tGcfUxhjqow
Yx/TwL7vNdJwM3B+q7caycdMzDe/VSP58MLnD7RoJB9zwMEvNJIPH/D0ZxrJ
xzzwyGaN5MMP4w96opFunz/G/6RRI/lYBF5wXyNNbwl4c51G8hGI8TKqNZKP
IBx/XKWRfASDE69pJB8h4GqjRvKxGhz1m0byEQqef0Ip6QgDn9UpJR/h4PYl
SulyI8AHKpSSj0hwp7+U0nBbML+zNUo+D46X1CklH9vBdf8oJR/R+Py/D5SS
j13y8YesNwa88olS8rEXfKtJKd2+WHx/2lOl5GM/c076M6U0vQNgmxdKyUc8
eM1LpeTjML5/pUUp+UjA+M6tSslHIo6HvlZKPo7j+9o3SslHMrOH1TulpCMF
POe9UvKRynxshplK8pHGHNBgppJ8pDP32dNGJfnIwPk/NFdJPjJxPqO5SvJx
Hp8PtFBJPrLw+fcWKslHNs5/pK1KuoEanH9UO5X0uRyMV9ROJfnQ4fqC26sk
Hwbm6jaWKslHHr7/k6VK8pGPz4/qoJJ8FOD8RR1Uko9ifH9FR5XkoxTzMbdS
ST6u43iClUryUYnrGdtJJfmowvnKOqkkH7dxv0I7qyQfd/D9Ll1Uko8aXM+v
XVSSj1rwzA9Uko96fP7hByrJx32MH9eVfTQwuyms2ccjzPdLa/bxBOPlWLOP
p8wlPWzYx3PML8SGfbTgenQ27KMV53fsxj7e4n6FdWMfZi7Mhd3Yhzmzx+Du
7KMd8+zo7uzDkjmqtjv7sMLxybbsozOOn7BlH12Z+1j2YB82LphvD/Zhyxxa
2oN92OPz4+zYhyPzkyQ79tEL8/vAnn04MedssmcffZmtG+zZhwuOf+7APgbi
enMd2MdgzKeXI/sYis9/4cg+hmN+aY7sww3nv+vIPtwx364K9jEa8x2pYB9j
mTNmKdjHeIy/VME+lMwloQr24YH5b1Swj0nMcZsV7GMKzk/M/WB2o89zP3C+
MAX7mIn5falgH17wFaRgH3NwPEDBPnxw/s8V7GMexp+vYB9+mC8x94O52l/B
Phb9//jcD3w/XME+AjG/GAX7CMLxRAX7CMb9Pq1gHyEYL0vBPlbj+5cV7CMU
91unYB9huD+58BGO+ebARwSu7xJ8RIIz4WMLricVPqIwfgJ8bIe/WPiIBkfB
xy48X2vhIwbzCYCPvfDpBR+xuF4VfOzH+nGFjwP4fm/4iMf3u8DHYZzvvSP7
SMDxJkf2kYjrv+fIPo7D921H9pGM+Zc5so8U5mMXHdlHKj6/G+sjDTwF6yMd
96/JAf3A+eMc0A/cv4EO6AfOl2WPfuD7nvboB44326Ef8J9vh37geRlsj37g
/jU7oB/Mqa54381jXhg+m9938yWOulKwlN93C5gPrfmS33eLJc7x6rqW33dL
+Xi6XyC/715nntdlOb/vVkrcp69vGr/vVkkc3HFyNr/v3pa4uqb1J37fvcOc
l3Uc/ZD4xrncG+iHxD7j+p3l9916wceG175qq+Z+CLb+PWBjXzX3Q7BH4oiP
/qvmfgj2D0/uMlvN/RAco1gcHaTmfhB7LLdsctmq5n4QV/eu2PDhATX3Qxx/
9dHmVafU3A/i1sBt20fnqLkfxGp3i2N+pWrJh1l/DzOvTb84Lv9Lzf3o7xF1
Ur8gzb1Wzf0g9vIY+7LHPTX3g7i3ymJV+D0194P4WZH1APU9NfeDxrvjHnG0
tE7N/SAesWzssRl1au4Hfd46/sPmzFo194P4q+9q06xr1dwP+vyZM3ZRS++q
uR/E18w23T1Vo+Z+0Odf1JlNbKhWcz/oeMHjjk4DqtXcD+JXGWN8z91Rcz+I
90XsUDn8peZ+ELtYfbNn4y32MZh4avX6gltV7GMoceg3X++ZdIN9DBfje7t4
/FbBPtyIe7z6ymNoOftwJ16RcCAjs4x9jCbuFFX9jec19jGWOHX515Nfl7CP
8cTHLJy7bCtW8wZD/PHI2hljC9mHB3HW81F/DrjKPiYRj6+5P3DGFfYxhbjX
7o82/ZLHPqYR39jRo4PayD5mEI8d4xRkY2AfM4knLtZ966RnH17Em0v75S3P
ZR9zxHhJ+pp7OvbhQxx83bLnUR37mEfc8vXU8bt17MOP2D/85+O/6NiHP7GD
6eas5zr2sUiMv9B79Jpc9rGEuNvc1g42evYRSFxXPlN/Q88+gogHWzwc8aeB
fQQTj7RYdNNoZB8hxC8yTt+4l8c+VhN3PhM/QXGFfYQS6/etsw/IZx9hxJNC
w/dkXmUf4cRBTdp860L2EUHcf2S987oi9hFJ3CHR73EVfGwhTn+4bvHPJewj
ivhm2qDDXqXsYzuxY+QG6zel7COaOLf56Ljka+xjF3FUvxFpk8vYRwzx35cL
Ot8uYx97ib2/6OMccp19xIr1V5F96fF19rGf+JTr7BvB5ezjAHH1mu92lJez
j3ji5gfmT0ZVsI/DxPlb85ftrGAfCcThRY2zrlSwj0TiozunjXtbwT6OE//8
aH9h30r2kUzcuDCwakwl+0gh7t708JOJlewjlbiLdYLryEr2kUZ83Lv5gkMl
+0gnNjuZNeYJ1kcGcaTFHeeLFewjkzjCf2+7dRXs4zyx2+bGg30r2EeW2C8u
BiXpytlHNnHipDHW88vZh4bY5+Ww6rvX2UcOsV/LiCHLrrMPHfHV4jD7v8rY
h4E4sPP3d2eVsY88MZ9tE8qyr7GPfOLfXteN7XeNfRQQF27P+mJnKfsoFvON
idLeL2EfpeJ5uerw3YwS9nGdeNgRf68Fxeyjknj62IxTLkXso4p4+MDrJ58W
sI/bxL69rx0puMo+7hDPUv8vOyOffdQQxz31tU66wj5qiSt6x69PMrGPerFe
Cqccz8xDP8T555g/r8D6aCC+u87uTBcj+kH8x9wBZfMN6IfYP18scbuoRz/E
87R+otcIPfpBbLSZvvlSLvohnt/FJ8sW5qIf4vl694eXXS77eEuc7dw5tU6H
fgzwMLtt2jTDpEM/iO9c7rQyR4d+EPcqqFheoEM/iD/eMGRxgw79IF5W5tra
Mxf9IPaZuaw/nZ/7QXyo5Z+Dp7Ff2QwQ6ze+pJMe/SC+/0PhmvV69IN4+PiU
+w169IP4xpndmSsN6AfxA+dSdZMB/SB2GpTydIsR/SC280/+qGse+kFse2jt
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

         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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
t2vE75sm/x8iTOPX
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {8.958203125000002, 0}, 
     PlotRange -> {{9.005, 12.}, {-0.2833876972855462, 0.6705837310154692}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {8.958203125000002, 0}, BaseStyle -> {FontSize -> 15}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{9.005, 12.}, {-0.2833876972855462, 0.6705837310154692}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"PDC\"", "\"SUC\"", "\"ADH\"", "\"ATP\"", "\"AK\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.18857142857142858`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.18857142857142858`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.18857142857142858`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.18857142857142858`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.18857142857142858`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "7"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.769040530645697*^9, 3.769040719932077*^9, 
  3.7690411542723417`*^9, 3.769041242596836*^9, 3.769085802627039*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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
tyJx
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], FontSize -> 15], 
        PointBox[CompressedData["
1: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
         
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {8.958203125000002, 0}, 
     PlotRange -> {{9.005, 12.}, {-1.9187101553290518`, 0.6769184228833467}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {8.958203125000002, 0}, BaseStyle -> {FontSize -> 15}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{9.005, 12.}, {-1.9187101553290518`, 0.6769184228833467}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"PGI\"", "\"PFK\"", "\"GAPDH\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23571428571428577`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23571428571428577`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23571428571428577`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontSize -> 15], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "7"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.769040530645697*^9, 3.769040719932077*^9, 
  3.7690411542723417`*^9, 3.769041242596836*^9, 3.769085802737185*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Analyze", " ", "the", " ", "phase", " ", "diagram", " ", "to", " ", 
    "step", " ", 
    RowBox[{"perturbation", ":", " ", 
     RowBox[{
      RowBox[{"adaptation", " ", "error", " ", 
       RowBox[{"etc", ".", " ", "It"}], " ", "is", " ", "very", " ", "slow"}],
       "..."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "To", " ", "plot", " ", "the", " ", "phase", " ", "diagram", " ", "for", 
     " ", "the", " ", "model", " ", "without", " ", "GLYO"}], ",", " ", 
    RowBox[{"i", ".", "e", "."}], ",", " ", "SUCC", ",", " ", "flux", ",", 
    " ", 
    RowBox[{
    "use", " ", "the", " ", "model", " ", "glycolysisACEremoveGLYCO"}]}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ComputePhaseDiagram", ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"t0", "=", "8"}], ";", "\[IndentingNewLine]", 
     RowBox[{"maxTime", "=", 
      RowBox[{"t0", "+", "5"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"hill", "=", "200"}], ";", "\[IndentingNewLine]", 
     RowBox[{"s1", "=", "40"}], ";", 
     RowBox[{"s2", "=", "47"}], ";", "\[IndentingNewLine]", 
     RowBox[{"glcoArray", "=", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"0.2", " ", "#1"}], " ", "+", "2.3"}], "&"}], ",", "s1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"aceAmpArray", "=", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"0.02", "#1"}], "+", "0.023"}], " ", "&"}], ",", "s2"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"s1", "=", "20"}], ";", 
       RowBox[{"s2", "=", "38"}], ";", "\[IndentingNewLine]", 
       RowBox[{"glcoArray", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"0.2", " ", "#1"}], " ", "+", "1.8"}], "&"}], ",", "s1"}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"aceAmpArray", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"0.02", "#1"}], "+", "0.04"}], " ", "&"}], ",", "s2"}], 
         "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"resultAdaptation", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"0", " ", "x"}], "+", 
         RowBox[{"0", " ", "y"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"s2", " ", "s1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "6"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "<", 
         RowBox[{"s1", "+", "1"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "<", 
           RowBox[{"s2", "+", "1"}]}], ",", 
          RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"glco0", "=", 
            RowBox[{"glcoArray", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"aceAmp0", "=", 
            RowBox[{"aceAmpArray", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ace", "[", "t_", "]"}], ":=", 
            RowBox[{"aceAmp0", "*", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"0.02", "*", 
                RowBox[{
                 RowBox[{"t", "^", "hill"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"t0", "^", "hill"}], "+", 
                   RowBox[{"t", "^", "hill"}]}], ")"}]}]}]}], ")"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"out", "=", 
            RowBox[{"glycolysisACE", "[", 
             RowBox[{"ace", ",", "maxTime", ",", "glco0"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"outPYR", "=", 
            RowBox[{"AnalyzeAdaptation", "[", 
             RowBox[{"pyr", ",", "t0", ",", "2"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"outATP", "=", 
            RowBox[{"AnalyzeAdaptation", "[", 
             RowBox[{"atp", ",", "t0", ",", "2"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"resultAdaptation", "[", 
             RowBox[{"[", 
              RowBox[{"s", ",", "1"}], "]"}], "]"}], "=", "glco0"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"resultAdaptation", "[", 
             RowBox[{"[", 
              RowBox[{"s", ",", "2"}], "]"}], "]"}], "=", "aceAmp0"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"resultAdaptation", "[", 
             RowBox[{"[", 
              RowBox[{"s", ",", "3"}], "]"}], "]"}], "=", 
            RowBox[{"outATP", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", 
           RowBox[{"(*", " ", 
            RowBox[{"adaptation", " ", "error", " ", "of", " ", "ATP"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"resultAdaptation", "[", 
             RowBox[{"[", 
              RowBox[{"s", ",", "4"}], "]"}], "]"}], "=", 
            RowBox[{"outATP", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", 
           RowBox[{"(*", " ", 
            RowBox[{"oscillation", " ", "index", " ", "of", " ", "ATP"}], " ",
             "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"resultAdaptation", "[", 
             RowBox[{"[", 
              RowBox[{"s", ",", "5"}], "]"}], "]"}], "=", 
            RowBox[{"outPYR", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", 
           RowBox[{"(*", " ", 
            RowBox[{"adaptation", " ", "error", " ", "of", " ", "PYR"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"resultAdaptation", "[", 
             RowBox[{"[", 
              RowBox[{"s", ",", "6"}], "]"}], "]"}], "=", 
            RowBox[{"outPYR", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", 
           RowBox[{"(*", " ", 
            RowBox[{"oscillation", " ", "index", " ", "of", " ", "PYR"}], " ",
             "*)"}], "\[IndentingNewLine]", 
           RowBox[{"s", "++"}], ";"}]}], "]"}]}], "]"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Plot", " ", "the", " ", "phase", " ", "diagram", " ", "to", " ", 
        "step", " ", "perturbation"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ListContourPlot", "[", 
       RowBox[{
        RowBox[{"resultAdaptation", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<adaptation error of ATP\>\""}], 
        ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Cluco\>\"", ",", "\"\<ACE0\>\""}], "}"}]}], ",", 
        RowBox[{"Contours", "\[Rule]", "10"}], ",", 
        RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}]}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"ListContourPlot", "[", 
       RowBox[{
        RowBox[{"resultAdaptation", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<oscillation index of ATP\>\""}], 
        ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Cluco\>\"", ",", "\"\<ACE0\>\""}], "}"}]}], ",", 
        RowBox[{"Contours", "\[Rule]", "5"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}]}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"ListContourPlot", "[", 
       RowBox[{
        RowBox[{"resultAdaptation", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<adaptation error of PYR\>\""}], 
        ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Cluco\>\"", ",", "\"\<ACE0\>\""}], "}"}]}], ",", 
        RowBox[{"Contours", "\[Rule]", "3"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}]}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"ListContourPlot", "[", 
       RowBox[{
        RowBox[{"resultAdaptation", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<oscillation index of PYR\>\""}], 
        ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Cluco\>\"", ",", "\"\<ACE0\>\""}], "}"}]}], ",", 
        RowBox[{"Contours", "\[Rule]", "5"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}]}], "]"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Compute", " ", "the", " ", "phase", " ", "diagraph", " ", "of", " ", 
        "phase", " ", "shift", " ", "under", " ", "periodic", " ", 
        "perturbation"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"w0", "=", "20"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"t0", "=", "5"}], ";", "\[IndentingNewLine]", 
     RowBox[{"maxTime", "=", 
      RowBox[{"t0", "+", 
       RowBox[{"10", " ", 
        RowBox[{"Pi", "/", "w0"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"hill", "=", "200"}], ";", "\[IndentingNewLine]", 
     RowBox[{"s1", "=", "40"}], ";", 
     RowBox[{"s2", "=", "47"}], ";", "\[IndentingNewLine]", 
     RowBox[{"glcoArray", "=", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"0.2", " ", "#1"}], " ", "+", "2.3"}], "&"}], ",", "s1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"aceAmpArray", "=", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"0.02", "#1"}], "+", "0.023"}], " ", "&"}], ",", "s2"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"resultPYRphase", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"0", " ", "x"}], "+", 
         RowBox[{"0", " ", "y"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"s2", " ", "s1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "4"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<", 
        RowBox[{"s1", "+", "1"}]}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "<", 
          RowBox[{"s2", "+", "1"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"glco0", "=", 
           RowBox[{"glcoArray", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aceAmp0", "=", 
           RowBox[{"aceAmpArray", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
             RowBox[{"ace", "[", "t_", "]"}], ":=", 
             RowBox[{"0.18", "*", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"0.1", "*", 
                 RowBox[{
                  RowBox[{"t", "^", "hill"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"t0", "^", "hill"}], "+", 
                    RowBox[{"t", "^", "hill"}]}], ")"}]}]}]}], ")"}]}]}], 
            ";"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ace", "[", "t_", "]"}], ":=", 
           RowBox[{"aceAmp0", "*", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"0.02", "*", 
               RowBox[{"Sin", "[", 
                RowBox[{"w0", " ", "t"}], "]"}]}]}], ")"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"output", "=", 
           RowBox[{"glycolysisACE", "[", 
            RowBox[{"ace", ",", "maxTime", ",", "glco0"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"out2", "=", 
           RowBox[{"detectPhaseShift2", "[", 
            RowBox[{"ace", ",", "pyr", ",", "t0", ",", "w0"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"resultPYRphase", "[", 
            RowBox[{"[", 
             RowBox[{"s", ",", "1"}], "]"}], "]"}], "=", "glco0"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"resultPYRphase", "[", 
            RowBox[{"[", 
             RowBox[{"s", ",", "2"}], "]"}], "]"}], "=", "aceAmp0"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"resultPYRphase", "[", 
            RowBox[{"[", 
             RowBox[{"s", ",", "3"}], "]"}], "]"}], "=", 
           RowBox[{"out2", "[", 
            RowBox[{"[", "7", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"resultPYRphase", "[", 
            RowBox[{"[", 
             RowBox[{"s", ",", "4"}], "]"}], "]"}], "=", 
           RowBox[{"out2", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"s", "++"}], ";"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"resultAdaptation", ",", "resultPYRphase"}], "}"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7690822102798147`*^9, 3.769082240418235*^9}, {
  3.76908227068827*^9, 3.769082276645599*^9}, {3.769082311812469*^9, 
  3.769082314810402*^9}, {3.769088009571735*^9, 3.7690880563387613`*^9}, {
  3.769091139078525*^9, 3.7690911467313957`*^9}, {3.769091205841179*^9, 
  3.7690912519285316`*^9}, {3.769091287147265*^9, 3.769091297083272*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Export", " ", "and", " ", "importing", " ", "data", " ", "for", " ", 
    "plotting", " ", "the", " ", "phase", " ", "diagram"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"$Path", ",", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"Directory", "[", "]"}], "}"}], "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"file", "=", "\"\<glycoACEpert_Phase_diagram.dat\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"check", " ", "file", " ", "existendce"}], ",", " ", 
     RowBox[{"if", " ", "exist"}], ",", " ", 
     RowBox[{"import", ";", " ", "otherwise"}], ",", " ", 
     RowBox[{"compute", " ", "it"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"If", " ", "[", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "file", "]"}], ",", 
     RowBox[{"Get", "[", "file", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"resultAdaptation", ",", "resultPYRphase"}], "}"}], "=", 
       "ComputePhaseDiagram"}], ";", "\[IndentingNewLine]", " ", 
      RowBox[{"Save", "[", 
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{"Directory", "[", "]"}], ",", "\"\</\>\"", ",", "file"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"resultAdaptation", ",", "resultPYRphase"}], "}"}]}], 
       "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.76909059989779*^9, 3.769090608280661*^9}, {
  3.7690907473536386`*^9, 3.7690907489009666`*^9}, {3.769090788790518*^9, 
  3.769090858738242*^9}, {3.769090912060354*^9, 3.769090938379386*^9}, {
  3.7690909858681307`*^9, 3.769091104332871*^9}, {3.769091269267076*^9, 
  3.769091272684148*^9}, {3.7690913095831347`*^9, 3.769091370850465*^9}, {
  3.769091436370892*^9, 3.7690914365164948`*^9}, {3.769091472930644*^9, 
  3.769091473418352*^9}, {3.7690915270719147`*^9, 3.769091530340983*^9}, {
  3.76909164395297*^9, 3.7690916605008707`*^9}, {3.7690917242697983`*^9, 
  3.769091724529303*^9}, {3.769093099558049*^9, 3.769093099680339*^9}}],

Cell[BoxData["\<\"/Users/shouwenwang/Dropbox (HMS)/Projects in PhD/collective \
oscillations/code_for_collective_oscillations/my_code_for_glycolysis/Final \
model for glycolysis\"\>"], "Output",
 CellChangeTimes->{
  3.769090610915184*^9, {3.7690908079765*^9, 3.7690908592227707`*^9}, 
   3.769090904742607*^9, {3.7690910973712597`*^9, 3.7690911049721203`*^9}, 
   3.769091328290759*^9, 3.7690913716312637`*^9, 3.7690915033199053`*^9, {
   3.769091700502928*^9, 3.769091725242272*^9}, 3.7694332579970837`*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2.5`", ",", "0.043`", ",", 
             RowBox[{"-", "0.3637396979992881`"}], ",", 
             "0.01635924033230366`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.5`", ",", "0.063`", ",", 
             RowBox[{"-", "0.13543551563787304`"}], ",", 
             "0.013338865168867516`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "2.5`", ",", "0.08299999999999999`", ",", "0.04662097266342815`", 
             ",", "0.011115812468774605`"}], "}"}], ",", 
           TemplateBox[{"1875"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"10.3`", ",", "0.9430000000000001`", ",", 
             RowBox[{"-", "2.891767732300414`"}], ",", 
             "0.032271994081593126`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"10.3`", ",", "0.9630000000000001`", ",", 
             RowBox[{"-", "2.864062789624539`"}], ",", 
             "0.03067967828862768`"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 515, 19096452151270201016, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 515, 19096452151270201016, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 515, 19096452151270201016, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[515]]], "Output",
 CellChangeTimes->{
  3.769090610915184*^9, {3.7690908079765*^9, 3.7690908592227707`*^9}, 
   3.769090904742607*^9, {3.7690910973712597`*^9, 3.7690911049721203`*^9}, 
   3.769091328290759*^9, 3.7690913716312637`*^9, 3.7690915033199053`*^9, {
   3.769091700502928*^9, 3.769091725242272*^9}, 3.769433258063766*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**"}], "*", " ", "Plot", " ", "the", " ", "phase", 
    " ", "diagram", " ", "combining", " ", "both", " ", "adaptation", " ", 
    "error", " ", "and", " ", "phase", " ", "shift"}], " ", "********)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PhaseDiagram", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", " ", "x"}], "+", 
        RowBox[{"0", " ", "y"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"Length", "[", "resultPYRphase", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"errorR", "=", "0.5"}], ";", 
    RowBox[{"osciR", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"color", "=", 
    RowBox[{
     RowBox[{"ColorData", "[", 
      RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "4", ",", "6", ",", "8"}], "}"}], "]"}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "<", 
       RowBox[{
        RowBox[{"Length", "[", "resultAdaptation", "]"}], "+", "1"}]}], ",", 
      RowBox[{"j", "++"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"PhaseDiagram", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "1"}], "]"}], "]"}], "=", 
        RowBox[{"resultAdaptation", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PhaseDiagram", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "2"}], "]"}], "]"}], "=", 
        RowBox[{"resultAdaptation", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "2"}], "]"}], "]"}]}], ";", 
       RowBox[{"temp", "=", 
        RowBox[{"color", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"(*", "nothing", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"resultAdaptation", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "3"}], "]"}], "]"}], "<", "errorR"}], " ", "&&",
           " ", 
          RowBox[{
           RowBox[{"resultAdaptation", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "4"}], "]"}], "]"}], "<", "osciR"}]}], " ", 
         ",", 
         RowBox[{"temp", "=", 
          RowBox[{"color", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"only", " ", "adaptation"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"resultPYRphase", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "3"}], "]"}], "]"}], ">", "0"}], " ", "&&", 
          " ", 
          RowBox[{
           RowBox[{"resultAdaptation", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "4"}], "]"}], "]"}], "<", "osciR"}]}], " ", 
         ",", 
         RowBox[{"temp", "=", 
          RowBox[{"color", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"only", " ", "phase", " ", "lead"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"resultPYRphase", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "3"}], "]"}], "]"}], ">", "0"}], " ", "&&", 
          " ", 
          RowBox[{
           RowBox[{"resultAdaptation", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "3"}], "]"}], "]"}], "<", "errorR"}], " ", "&&",
           " ", 
          RowBox[{
           RowBox[{"resultAdaptation", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "4"}], "]"}], "]"}], "<", "osciR"}]}], " ", 
         ",", 
         RowBox[{"temp", "=", 
          RowBox[{"color", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"hase", " ", "lead"}], " ", "+", " ", "adaptation"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"**", "**", "**", "**", "**", "**", "**", "**"}], "*", " ", 
         "change", " ", "the", " ", "lower", " ", "back", " ", "regime", " ", 
         "to", " ", 
         RowBox[{"blue", " ", "**", "**", "**", "**", "**", "**"}]}], 
        "*****)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"PhaseDiagram", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], ">=", "0.05"}], " ", "&&",
           " ", 
          RowBox[{
           RowBox[{"PhaseDiagram", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], "<", "0.16"}]}], ",", 
         RowBox[{"temp", "=", 
          RowBox[{"color", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"**", "**", "**", "**", "**", "**", "**", "**"}], "*", " ", 
          "change", " ", "the", " ", "lower", " ", "back", " ", "around", " ",
           "ACE"}], "=", 
         RowBox[{"0.2", " ", "regime", " ", "to", " ", 
          RowBox[{"white", "**", "**", "**", "**", "**", "**"}]}]}], 
        "*****)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"PhaseDiagram", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], ">=", "0.16"}], " ", "&&",
           " ", 
          RowBox[{
           RowBox[{"PhaseDiagram", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}], "<", "0.19"}]}], ",", 
         RowBox[{"temp", "=", "White"}]}], "]"}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"**", "**", "**", "**", "**", "**", "**", "**"}], "*", " ", 
         "change", " ", "the", " ", "lower", " ", "back", " ", "regime", " ", 
         "to", " ", 
         RowBox[{"blue", " ", "**", "**", "**", "**", "**", "**"}]}], 
        "*****)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"resultAdaptation", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "4"}], "]"}], "]"}], ">", "osciR"}], ",", 
         RowBox[{"temp", "=", "White"}]}], "]"}], ";", " ", 
       RowBox[{"(*", " ", "oscillation", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PhaseDiagram", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "3"}], "]"}], "]"}], "=", "temp"}]}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", 
     RowBox[{"PhaseDiagram", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"c", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"PhaseDiagram", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"colorfunc", "=", 
     RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}]}], ";"}], "\n", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "Large", "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"c", ",", "h"}], "}"}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.4", ",", "10.2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.025", ",", "0.95"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.769089722754457*^9, 3.769089757932344*^9}, {
  3.769433331918004*^9, 3.769433354916602*^9}, {3.769433385265442*^9, 
  3.769433508882188*^9}, {3.769433549458066*^9, 3.7694336775887003`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0., 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0., 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6640522875816994, 0.24052287581699347`, 0.018300653594771243`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3607843137254902, 0.4758169934640523, 0.018300653594771243`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5411764705882353, 0.7137254901960784, 0.027450980392156862`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.005228758169934641, 0.33986928104575165`, 0.6196078431372549],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3137254901960784, 0.17516339869281047`, 0.3895424836601308],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.47058823529411764, 0.2627450980392157, 0.5843137254901961]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.47058823529411764`, 0.2627450980392157, 0.5843137254901961],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.76908237399592*^9, 3.769086080288127*^9, 3.7690897663016157`*^9, 
   3.769090355602582*^9, 3.7690913832155533`*^9, 3.7690917024522133`*^9, 
   3.769093093151017*^9, {3.769433250488159*^9, 3.7694332598782043`*^9}, {
   3.769433478469967*^9, 3.769433510040572*^9}, {3.7694335507640676`*^9, 
   3.7694335658896427`*^9}, {3.769433647077138*^9, 3.769433678250102*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{2.5, 0.063}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{2.5, 0.08299999999999999}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{2.5, 0.10300000000000001`}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{2.5, 0.123}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{2.5, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{2.5, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{2.5, 0.183}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.20299999999999999`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.223}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.243}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.263}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.28300000000000003`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.30300000000000005`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.323}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.343}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.36300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.383}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.403}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.42300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.443}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.463}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.48300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.503}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.523}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.543}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.5630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.5, 0.663}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{2.5, 0.683}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.5, 0.7030000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.5, 0.7230000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{2.5, 0.743}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{2.5, 0.763}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{2.5, 0.783}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{2.5, 0.803}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.5, 0.8230000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.5, 0.8430000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{2.5, 0.863}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{2.5, 0.883}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{2.5, 0.903}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{2.5, 0.923}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.5, 0.9430000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.5, 0.9630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.063}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.08299999999999999}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.10300000000000001`}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.123}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{2.6999999999999997`, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{2.6999999999999997`, 0.183}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.20299999999999999`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.223}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.243}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.263}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.28300000000000003`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.30300000000000005`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.323}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.343}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.36300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.383}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.403}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.42300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.443}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.463}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.48300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.503}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.523}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.543}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.5630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.6999999999999997`, 0.7230000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.743}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.763}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.783}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.803}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.8230000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.8430000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.863}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.883}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.903}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.923}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.9430000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.6999999999999997`, 0.9630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{2.9, 0.063}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{2.9, 0.08299999999999999}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{2.9, 0.10300000000000001`}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{2.9, 0.123}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{2.9, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{2.9, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{2.9, 0.183}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.20299999999999999`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.223}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.243}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.263}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.28300000000000003`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.30300000000000005`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.323}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.343}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.36300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.383}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.403}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.42300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.443}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.463}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.48300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.503}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.523}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.543}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.5630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{2.9, 0.783}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{2.9, 0.803}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.9, 0.8230000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.9, 0.8430000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{2.9, 0.863}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{2.9, 0.883}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{2.9, 0.903}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{2.9, 0.923}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.9, 0.9430000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{2.9, 0.9630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.063}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.08299999999999999}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], 
    PointBox[{3.0999999999999996`, 0.10300000000000001`}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.123}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.0999999999999996`, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.0999999999999996`, 0.183}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], 
    PointBox[{3.0999999999999996`, 0.20299999999999999`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.223}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.243}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.263}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], 
    PointBox[{3.0999999999999996`, 0.28300000000000003`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], 
    PointBox[{3.0999999999999996`, 0.30300000000000005`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.323}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.343}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], 
    PointBox[{3.0999999999999996`, 0.36300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.383}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.403}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], 
    PointBox[{3.0999999999999996`, 0.42300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.443}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.463}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], 
    PointBox[{3.0999999999999996`, 0.48300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.503}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.523}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.543}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.5630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.0999999999999996`, 0.8230000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{3.0999999999999996`, 0.8430000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{3.0999999999999996`, 0.863}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{3.0999999999999996`, 0.883}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{3.0999999999999996`, 0.903}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{3.0999999999999996`, 0.923}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{3.0999999999999996`, 0.9430000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{3.0999999999999996`, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.3, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.3, 0.063}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.3, 0.08299999999999999}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.3, 0.10300000000000001`}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.3, 0.123}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.3, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.3, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.3, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.3, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.3, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.3, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.3, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.3, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.3, 0.30300000000000005`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.323}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.343}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.36300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.383}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.403}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.42300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.443}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.463}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.48300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.503}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.523}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.543}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.5630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.3, 0.883}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{3.3, 0.903}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{3.3, 0.923}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{3.3, 0.9430000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{3.3, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.5, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.5, 0.063}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.5, 0.08299999999999999}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.5, 0.10300000000000001`}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.5, 0.123}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.5, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.5, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.5, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.5, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.5, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.5, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.5, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.5, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.5, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.5, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.5, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.5, 0.36300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.383}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.403}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.42300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.443}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.463}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.48300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.503}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.523}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.543}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.5630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.5, 0.903}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], PointBox[{3.5, 0.923}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{3.5, 0.9430000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{3.5, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.7, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.7, 0.063}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.7, 0.08299999999999999}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.7, 0.10300000000000001`}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.7, 0.123}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.7, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.7, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.7, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.7, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.7, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.7, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.7, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.7, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.7, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.7, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.7, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.7, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.7, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.7, 0.403}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.42300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.443}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.463}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.48300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.503}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.523}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.543}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.5630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.7, 0.9430000000000001}]}, 
   {RGBColor[0., 0., 0.], PointSize[Large], 
    PointBox[{3.7, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.9, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.9, 0.063}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.9, 0.08299999999999999}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.9, 0.10300000000000001`}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{3.9, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{3.9, 0.443}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.463}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.48300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.503}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.523}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.543}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.5630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{3.9, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.1, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.1, 0.063}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.1, 0.08299999999999999}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.1, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.1, 0.463}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.48300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.503}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.523}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.543}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.5630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.1, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.3, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.3, 0.063}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.3, 0.08299999999999999}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.3, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.3, 0.48300000000000004`}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.503}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.523}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.543}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.5630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.3, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.5, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.5, 0.063}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.5, 0.08299999999999999}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.5, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.5, 0.523}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.543}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.5630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.5, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.7, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.7, 0.063}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.7, 0.08299999999999999}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.7, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.7, 0.523}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.543}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.5630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.7, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.9, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.9, 0.063}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{4.9, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{4.9, 0.543}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.5630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{4.9, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{5.1, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{5.1, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.1, 0.5630000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.1, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{5.3, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{5.3, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.3, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.3, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{5.5, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{5.5, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.5, 0.5830000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.5, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{5.7, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{5.7, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.7, 0.603}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.7, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{5.9, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{5.9, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{5.9, 0.603}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{5.9, 0.623}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{5.9, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.1, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.1, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.1, 0.623}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.1, 0.643}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.1, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.3, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.3, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.3, 0.623}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.3, 0.643}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.3, 0.663}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.3, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.3, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.3, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.3, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.3, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.3, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.3, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.3, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.3, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.3, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.3, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.3, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.3, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.3, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.3, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.5, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.5, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.5, 0.643}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.5, 0.663}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.5, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.5, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.5, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.5, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.5, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.5, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.5, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.5, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.5, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.5, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.5, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.5, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.5, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.5, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.5, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.7, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.7, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.7, 0.643}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.7, 0.663}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.7, 0.683}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.7, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.7, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.7, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.7, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.7, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.7, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.7, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.7, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.7, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.7, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.7, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.7, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.7, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.7, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.9, 0.043}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.9, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{6.9, 0.643}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.9, 0.663}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.9, 0.683}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{6.9, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.9, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.9, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.9, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.9, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.9, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.9, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.9, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.9, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.9, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.9, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.9, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.9, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{6.9, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{7.1000000000000005`, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{7.1000000000000005`, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{7.1000000000000005`, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{7.1000000000000005`, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{7.1000000000000005`, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{7.1000000000000005`, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{7.1000000000000005`, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{7.1000000000000005`, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{7.1000000000000005`, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{7.1000000000000005`, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.1000000000000005`, 0.663}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.683}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.7030000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.1000000000000005`, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.3, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.3, 0.663}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.3, 0.683}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.3, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.3, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.3, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.3, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.3, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.3, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.3, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.3, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.3, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.3, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.3, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.3, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.3, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.3, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.5, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.5, 0.663}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.5, 0.683}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.5, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.5, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.5, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.5, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.5, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.5, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.5, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.5, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.5, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.5, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.5, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.5, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.5, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.5, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.7, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.7, 0.663}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.7, 0.683}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.7, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.7, 0.7230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.7, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.7, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.7, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.7, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.7, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.7, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.7, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.7, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.7, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.7, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.7, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.7, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.9, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{7.9, 0.663}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.9, 0.683}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.9, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.9, 0.7230000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{7.9, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.9, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.9, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.9, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.9, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.9, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.9, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.9, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.9, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.9, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.9, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{7.9, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.100000000000001, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{8.100000000000001, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{8.100000000000001, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{8.100000000000001, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{8.100000000000001, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{8.100000000000001, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{8.100000000000001, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{8.100000000000001, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{8.100000000000001, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{8.100000000000001, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{8.100000000000001, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.663}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.100000000000001, 0.683}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.100000000000001, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.100000000000001, 0.7230000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.100000000000001, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.100000000000001, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.100000000000001, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.100000000000001, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.100000000000001, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.100000000000001, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.100000000000001, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.100000000000001, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.100000000000001, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.100000000000001, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.100000000000001, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.100000000000001, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.3, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.663}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.3, 0.683}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.3, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.3, 0.7230000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.3, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.3, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.3, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.3, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.3, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.3, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.3, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.3, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.3, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.3, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.3, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.3, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.5, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.663}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.5, 0.683}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.5, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.5, 0.7230000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.5, 0.743}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.5, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.5, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.5, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.5, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.5, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.5, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.5, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.5, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.5, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.5, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.5, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.7, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.663}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.7, 0.683}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.7, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.7, 0.7230000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.7, 0.743}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.7, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.7, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.7, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.7, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.7, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.7, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.7, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.7, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.7, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.7, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.7, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.9, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.663}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{8.9, 0.683}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.9, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.9, 0.7230000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.9, 0.743}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{8.9, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.9, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.9, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.9, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.9, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.9, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.9, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.9, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.9, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.9, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{8.9, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.100000000000001, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{9.100000000000001, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{9.100000000000001, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{9.100000000000001, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{9.100000000000001, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{9.100000000000001, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{9.100000000000001, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{9.100000000000001, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{9.100000000000001, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{9.100000000000001, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{9.100000000000001, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.663}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.100000000000001, 0.683}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{9.100000000000001, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.100000000000001, 0.7230000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.100000000000001, 0.743}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.100000000000001, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.100000000000001, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.100000000000001, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.100000000000001, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.100000000000001, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.100000000000001, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.100000000000001, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.100000000000001, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.100000000000001, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.100000000000001, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.100000000000001, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.3, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.663}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.683}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.3, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.3, 0.7230000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.3, 0.743}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.3, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.3, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.3, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.3, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.3, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.3, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.3, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.3, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.3, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.3, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.3, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.5, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.663}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.683}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.5, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.5, 0.7230000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.5, 0.743}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.5, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.5, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.5, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.5, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.5, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.5, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.5, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.5, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.5, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.5, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.5, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.7, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.663}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.683}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.7, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.7, 0.7230000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.7, 0.743}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.7, 0.763}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.7, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.7, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.7, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.7, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.7, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.7, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.7, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.7, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.7, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.7, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.9, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.663}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.683}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{9.9, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.9, 0.7230000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.9, 0.743}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.9, 0.763}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{9.9, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.9, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.9, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.9, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.9, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.9, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.9, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.9, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.9, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{9.9, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{10.100000000000001`, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{10.100000000000001`, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{10.100000000000001`, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{10.100000000000001`, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{10.100000000000001`, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{10.100000000000001`, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{10.100000000000001`, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{10.100000000000001`, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{10.100000000000001`, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{10.100000000000001`, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{10.100000000000001`, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.663}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.100000000000001`, 0.683}]}, 
   {GrayLevel[1], PointSize[Large], 
    PointBox[{10.100000000000001`, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{10.100000000000001`, 0.7230000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{10.100000000000001`, 0.743}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{10.100000000000001`, 0.763}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{10.100000000000001`, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.100000000000001`, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.100000000000001`, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.100000000000001`, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.100000000000001`, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.100000000000001`, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.100000000000001`, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.100000000000001`, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.100000000000001`, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.100000000000001`, 0.9630000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{10.3, 0.043}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.063}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.08299999999999999}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.10300000000000001`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.123}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.143}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.163}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.183}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.20299999999999999`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.223}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.243}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.263}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.28300000000000003`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.30300000000000005`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.323}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.343}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.36300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.383}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.403}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.42300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.443}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.463}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.48300000000000004`}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.503}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.523}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.543}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.5630000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.5830000000000001}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.603}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.623}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.643}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.663}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.683}]}, 
   {GrayLevel[1], PointSize[Large], PointBox[{10.3, 0.7030000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{10.3, 0.7230000000000001}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{10.3, 0.743}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{10.3, 0.763}]}, 
   {RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
    PointSize[Large], PointBox[{10.3, 0.783}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.3, 0.803}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.3, 0.8230000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.3, 0.8430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.3, 0.863}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.3, 0.883}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.3, 0.903}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.3, 0.923}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.3, 0.9430000000000001}]}, 
   {RGBColor[0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
    PointSize[Large], PointBox[{10.3, 0.9630000000000001}]}},
  AspectRatio->1,
  BaseStyle->{FontSize -> 20},
  Frame->True,
  PlotRange->{{2.4, 10.2}, {0.025, 0.95}}]], "Output",
 CellChangeTimes->{
  3.76908237399592*^9, 3.769086080288127*^9, 3.7690897663016157`*^9, 
   3.769090355602582*^9, 3.7690913832155533`*^9, 3.7690917024522133`*^9, 
   3.769093093151017*^9, {3.769433250488159*^9, 3.7694332598782043`*^9}, {
   3.769433478469967*^9, 3.769433510040572*^9}, {3.7694335507640676`*^9, 
   3.7694335658896427`*^9}, {3.769433647077138*^9, 
   3.769433678587617*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
PbxQmzZtvJdUpzfipNn88hpO2sJX/OWXX+S0KcBmzZ3HBt0VYlufj2dbnotn
+17CJrd5xN5utI+uOLok3PZR7KPr30Z3lzhgxd1Gtyb/aod3iqpfPKC30Y2R
u+zykXV0l/2S0Eg4KUX9adGihfGSN910k3d4qHpJnNCLa40bN5YvGUsHB+Gg
RhyVmJmZGSvfE3vkrap8A2N14rBXMGPeO2LnzWv4lDwgHhanyRg7b0L8bhHG
Eo+ycN+a9qadkNUrSkc7UNUer+mqMUJc/zqcYyPes5wYmg5Y4CUfeugheo1P
P/3UezV1qG6HDh1Cl8lrOE0N1ziIlOVKiY1I+7WlPadoWqh3wp58wxvSvn70
cLuW88Gb31+GD15g1/D3S8V5FKYc021UU93GjsW0ATIfB3Ybo5ujDest/epG
nb377rvvem+JcyjVkec0InPr8ydj6LQtSGvXri1r5NUq9Lv5LPz5ffydLmPh
Bjey8LiWjJ1LUxA4vHkmC392rxC/fxMLj/+UsfTTCkCHN05n4U/v0eIJn3Hx
Ga/2hqlcfLfosIbFWHhiK8Yyzpqqxv9+OLtMniDuqVOc6oQzXPPmzQsjoWwV
Tk/GEXdMWilmVOfaV76stBer1/IhdFgcj/RmQXHQyLdTtN7/7QAL93xdym4l
ve/ZixPczvSszMJ1CooDTDbN0PVO/MTC3fmIrVOAhT++HT2WjY3EyZplypSh
o8+PHTtmHmWLA2hxrmhWVpZ6R5wpimPA586d652RizM81ZHHr732mvdNuSVZ
Pn4IYx9X0merVJfqcH6v3HIKs2M/kmK1i3Blu7AvPThZR1gJIc+NAjDWi/oz
7wd11bC4KhISZcjYqBKiE8pG6gT8hg8fTq/Qtm1bBX4++OADOkCWD1nPQHL7
QoeT46BBHFKI41NRDQfPTps2TY1yOk6hzm2M1Yox7ERuehWWJE3MiGATk5Yg
rE+VkF2V21ttYt7zmxgc1HAy6nwly08nkOEENChfzF+ASSjX0aNHK2gAxAAM
WrBgQe+g+quuuoqUFVCu95oRN2q3DMwlWJj4HFuY4HdUk5SbQ8LkOGLuxIkT
lwVc5v+vMOXMeVzhvnaDvfMzWYlraC7S8+C4MceI1JNGpF8tvxF5ryjtCk1V
e1bOiREJdGWkNejfLtgajPhAa/IfVgjd55YZ1QRSbi2W+a0FrME3zZhiOnDm
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
A9ikteJsbupdk9aq6aO1kAyUeMw5cCZeU17qzD4nxR1iRWv1cmmtWL3W3t0n
h2QmreXsJhqraa2vsqO1nrMJphi9SLmrS2vFCMrrjNw60qW1YuQepolK5AT/
DVqrnZ/Wai5pLeJnHL/3Q0lrYUu9ai6tVcmgtR7y01q3SVrroQBa6zaBWy5m
ClNpVOUjlH1yB0s/l85uGZiKERQSvmA8jaa7hsAXDIP2YhUHJLuM2L1DU9j5
i+HQyOiDLZDGivvraKy8/8NorJP/VTQWUlDAPMA/N6rigze4jqUkpbCrv04B
raVHGtddYL3OZIYBFtmV3XwM2LXdk9jp89mONKi1N25xaCy5WEjRWMMDaCy5
KceIIBrrZr0RMo6UdGksuerOOmzJIL8x1ZFZ5HJRJo3VPzKN5R4tUE1qCY/G
qhZMY6WpDQJtLgqaIF3RWJWtqoqqQp5Pz8p+0ogDWU1jveTjm/isEDTWS34a
C1QVRoSVPiSbbXW/QWM962uWqzNoPclw2VVbPyyO5MHwh09tV2Vcq2Sez2QP
jEiDUdSD7YtE9sQ3qewiB4pgwO4flmIxYFz8r9Gp7EIWizrYwHbNZWsnj2Ds
s9uC0oI8pIr9ajFXzCLVjBVGyCxqWMwv9zY/u1psA/C+k11Eq4xkZhDxYTdG
XmFEmUXX2yuM8uh9z/Cj5CIv+SgkyuTTm58hsaiemXwkk35WDNegXHFibtLP
ylGiDTAWbvIRVIq5xAjshJt8JPgs0QYYineclU6AnWsnaL5LcWKqDAUo81LA
kn6KD3OTfjh2pB8tc7rcloOr2jBVPye2bvKVyU+BV/opPsyUA8ZvmqnbQLwZ
MW8VYKUyl9Gaffxm/nie5QUf1oZb3vap9Hf+Tkls0f5MDwNO38PLdBDYj49g
+rtAp0S25ECmwoCBO87lofBA3XrvsYl9OnNAV0OnFJlpQzB4KhsJ7pqZNnRs
r+B1KN3oVnvZEuwveB21pMlctqQ2cFYpRebubaCG1RIqLGnaZPBPR+R5ZJDB
Md5sLE3C3ihdpYzShoylSUi7U5tdYDeCbXN1PTB+alc7OPrb59lLr9Ruzm7a
EGaLOqH883uRFWAvvVKpSEgp2rnY4PM26c0ukEKzc4mWmWlKwCffL7W5PpWm
hJVEu5bbXJ9KU0JU84cVBte3TqcpAQ/tXuXVW8ix+n+GHGZl2uxgLw47wpb9
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
UJlgapsTeerNh4WRf9igkQhfA0FD0Brh1Kz9ydmy1euy/R/P549OVEmgKvkk
0KkvcaJn30fzSaDTbRIIXkOcBDr9ZZ8E2rvrb0wClddJIAqk79E5NxUBQ5h2
7xxPZYQWj1+Wb8wqPRJNXZRd/PpyOm/s+kh+6kWv8dQZSzeSSKlWbTDmS17n
wN/h9hfds2dPaoLQoEGDsObtD05PbfXf9BSlp3bc8vTULv9Z6SkqOMBUNoVT
YcPugqS4efFxZuvGfbP5xauy7R9a8m+dnirv0lN4TF2ygSIb5paqM9dHPLM0
m7jYmYJNC1F9PCYs2kBnomgqxHzGG1NRx/xU0PV4/LhgAzkcbqrXAdK/czTn
XLFiBY4L8e8cibNq1aoVTpwhOZZKnOFmZk4SYeKsdJQ4uyFMnJX2ibMXGoXL
SuJsVaHE2cEqcVY/nThbVkLijD+vuE20lIRQ4qxOgcTZCp4KDa1CibMrEomz
Y3ziLOr+pDVYgjbRkjg7wSbOLsovi3ukJM64xVMwFckxSpwluj8ZH8ElznT3
J0mcnW4TZ6fnE2f368TZKXHiDH+Nprb7a36q8cDoNGleNO3iUc6t04XZ6nUb
sqOfz+fcNpM4u+T1FZQcO+JZnXMrZ5NjbKv+TD4fd3lf/kKXG/uhTy+Jl73y
jRWUOLO1icHUWm/yVKhmHhRhKsalrjdgBeklHfhEfips7Epsou0mStdd+/ZK
WnW/mHCBbSDL/CxYaT0YJfpl/ur1g8hc6kh22UvI5qHX5AEHHGB/5xWzrl2Z
xaMHIvYIhOXKZaykzezxOttn9Wj2cPp49ADln8v4lfW6NjNtui/O54mmTVhu
Y/N55XDsdLEoKrnRKb9I0gZwf5zuq1M+OHWmU35b+a7ZCMTH6T5K5/VW6bwv
oz7jUi5jJZonfUFnn8COQIqTaK7E0jo65efSdbZcJpXuQzxYJG1IVidK99Xb
jhIx7nWmUn6cruM1Uuk+JHtGv6NKcobbvl8qnYfymu8G8/YGNcqg3EZSdcP9
SR9BnjjlB3/I/H1aI5XuM6/bvH6/BmLi1C5Gj9mZPgc83pB03t1LXbpvxweL
s5EqndfvJ5vOU2N2eqg4+9Sm8yjdl07Xkb13It33Z07Vudf5qqT8onTdV7/w
Gj0S6b5Kxln/Zo5f4+Xv8im/3cyYb+dy7PfFhH2PR5Zk38318ePnR6/Jytwd
jtnTnDe+n8drPDP615wd0c8f58saW5H+ajwGJ6GxCzZItGAzqUe0Objiiitc
6rFv374+dYWGELh51rdlSLrUaN5UTktK6lFLX8+dzHppknrU6UXYpHwJaQot
fY1NTmSQUJs+WskLUVryIlWGpEqNcDwRGSTkVXSpkS5tsunFsLTpfG/7QZUa
QUNMypcovajKiQA2SPkSypDGfhimLCUtiRuqLidCWtKlHpFe/FilJVVpU1xq
hCJEST3iGDZhpEpZfu3Ll9pzetGXNqm0JMpMJ37qU48oKMRzlF48g9KLLvWI
tKSUL93zN6RF/TydljSvybw2Pw+7mfR1Rwnrz9/6NOH0LLvgmSlZtfbfZDVf
mpF9PtenLN+bZmxPs+3Kl2dkX873KUtIl0vqUdKLOi15jE4vqtTjEKQl7TxJ
L8o8pCWPsqnH83otM78WP+/dyWuzI59h2wW9l2XjFmxw896ZtNacGNh2obGN
X7jBzRs0cW12+NP893DMN6cGNw8xxOqwmQPKJX2WZ5MW+XlvjV+bHfoU2y4z
5//Ji8VWRBEG8+8gvSnPLVfpTf2cjJstz6314+Q5KEO6ccv8c2VK2DE4NTpi
xAgSQjvqqKNcarR169a+0bEuyNqWRfiQS/h1uU9uqtwnnInelDl1sz9XuU9K
rN4ZFIN9rnKfSI1SrZjPnGrVJ3gyVCvmU6OU+7TJzWZ/kcxpqPpUPawVU6lR
XXBFtWId2denR5T3JD0rFIuFqVEE/yWt6bKra+0Kcdqziq0Yi1Kjw6XgqoJO
n9o1NqI1qU9rurqx9d4+TIqtbGqUU6thWnOYSmtizDuP+DVQkGW8SoquSOr0
nSi9ijFDnmTBqTB9ateQtGdVtosw1cYwrYl1aX2XPn3KC2DBjgQFXp/Yh0Xp
VfOa8f7cGF88xmvgPb1lvqYWlbON5jOn9CqnTv1njs92gPmqm+9jxtj06oe+
nSBq9O8ZwUVdqcIxl/bsGqVOM198hg5ad3/MlV0yxqZP6YHcaPuPfG4U6dWX
o/QqEqRtP1qV7d0lyJ/qBGmb4Zw/hbm6MasUJxKkd1J6lV/B4ZTidLWKgCfv
oPSqMZsd7gizm732oxNjw1kO2VckSGE+0pzrXv/JzcZRDnmN3YwHVP5efmm9
f3QvDVHhFsZcqROb8dJeG+sWx5Gt2buhua9fHMeypoNXZrt24szv4ebM2G+c
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
e96ikIqBaWQCGzLsXxeog39NKRnjYBIgE6qeHnaog6SQCmysglRAmPzKCJkg
7MJ2f/sU3V+RgisbIhVv3uPOR4WQiQFWyBi18Clk4q0H2J6qg2cR45IFhKme
3goZY1O/ImHXQsbYtJNIBcc0CDNLIRWqCQhtmDkcopRrAqLr4CPkwq8x8KEC
SAXHI2gzTNldPKIs3ZTUGP6GyrtevlCfJ3NtRVzc4STKcNukL7m2hTZwgWCl
z2zNAy5ic5HkxxinBhdVZqvg7ypcSY9rlCrhE2MEm7o5QUvgBCvEBSgC7Ekp
omKQJSpufN+TCs6uKumxBvaWFFHx3hReo8ng/Bpbmf8Ohd0MaPROwm6JC/kb
1w/Kj4HbOtwSFdcMzNuJuBCiwuw99RUxUUaICjNm5Ix19DfqDkjYLXHhiQrz
bsOUwq677qpSCmWh4O6Iissuu0zSmxUrVsymTp+ZZU/U9vFo4Sh23XKOYnfm
KDoX4ihseSKOhQU4iocKcBRLC3MUzSxHcX8hjsJ2iE9wFC0sRwHTlTFHsb/n
KNqfGgIPRdwmC1k9QixKh8tSb7/FfJQLYIiiiKM4Ps1RFIupBI7i6DRHUcwB
gy3hKIq3jKP4K79XThCHU9tpjqJqzFEg40HpLE4QlwpsKD7ANwNPUi9b09rw
wFx4iWpZxKfvP4sD6F3zCAYye3gU4ih6FeYozv6NHEWn/NQLFEex88M5jqJG
P3MaLMBR1LQcxQ4P5WGIGpqjeDDHUdTdco7i2hI4ivqao9i6ZI6iyHEUJ5xw
Av40Pffd9z9m2X3/hSf+z+GJXf5p8MReWw5PVLbwxG6bgSd2+QPhCdqgzT1u
07U74tsIN29kvPHNXKNtavPGAwxig+1h15t3dmu1bFrxOvOrKP5nwRPl0vCE
4ir+SHjix38PeGJGCp447LDDAk9HwxNNmzYVT2fvvffO5i00HkCPGz0TIchE
Vd8XmLmI4M4mkuAvNkkgEwdbZOKGAshEMS/79DWFkYlr8sgEde8tGZkA9/BE
3Tz3cLtGJq7MIxPHsOY3mwojE/D4oqmCTASyTb8BmYAe+Lq1Fpm4IIdM3L05
ZGI974APlIBM/E8emUD4G4GBQsjEBSUgExd4ZKJdApm4xCITJ+andtbIxPHB
VJzNul3BeyfyJzVLhTbzjdA3g7yLXlZseOBLR6w2XDZ7ok62bO2mrNrTS3PI
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
3UwMH9//AjlA90w=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Compute", " ", "the", " ", "resposen", " ", "to", " ", "periodic", " ", 
    "perturbation"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"t0", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w0", "=", "21"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxTime", "=", 
     RowBox[{"t0", "+", 
      RowBox[{"4", " ", 
       RowBox[{"Pi", "/", "w0"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"glco0", "=", "10"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"glcoArray", "[", 
      RowBox[{"[", "j", "]"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"aceAmp0", "=", "0.05"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"aceAmpArray", "[", 
      RowBox[{"[", "k", "]"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"ace", "[", "t_", "]"}], ":=", 
      RowBox[{"0.18", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"0.1", "*", 
          RowBox[{
           RowBox[{"t", "^", "hill"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"t0", "^", "hill"}], "+", 
             RowBox[{"t", "^", "hill"}]}], ")"}]}]}]}], ")"}]}]}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ace", "[", "t_", "]"}], ":=", 
     RowBox[{"aceAmp0", "*", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"0.02", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{"w0", " ", "t"}], "]"}]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"output", "=", 
     RowBox[{"glycolysisACE", "[", 
      RowBox[{"ace", ",", "maxTime", ",", "glco0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"out2", "=", 
     RowBox[{"detectPhaseShift2", "[", 
      RowBox[{"ace", ",", "pyr", ",", "t0", ",", "w0"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Time0", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"0.01", "  ", "#1"}], " ", "+", "t0", "-", "2"}], "&"}], ",",
        "100"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ace1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ace", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"amp1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"amp", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"atp1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"atp", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bpg1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"bpg", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f16p1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"f16p", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f6p1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"f6p", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g3p1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"g3p", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g6p1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"g6p", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"glci1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"glci", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nadh1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"nadh", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2g1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"p2g", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3g1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"p3g", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pep1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"pep", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pyr1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"pyr", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trio1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"trio", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"adp1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"adp", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nad1", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"nad", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Time0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"glci", "[", "t", "]"}], "-", "glci1"}], ")"}], "/", 
        "glci1"}], ",", "  ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g6p", "[", "t", "]"}], "-", "g6p1"}], ")"}], "/", "g6p1"}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"f6p", "[", "t", "]"}], "-", "f6p1"}], ")"}], "/", "f6p1"}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"atp", "[", "t", "]"}], "-", "atp1"}], ")"}], "/", "atp1"}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"f16p", "[", "t", "]"}], "-", "f16p1"}], ")"}], "/", 
        "f16p1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "t0", ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Delta]GLCi\>\"", ",", "\"\<\[Delta]G6P\>\"", ",", 
        "\"\<\[Delta]F6P\>\"", ",", "\"\<\[Delta]ATP\>\"", ",", 
        "\"\<\[Delta]F16P\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Lighter", "[", "Black", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Orange", ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"10", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"trio", "[", "t", "]"}], "-", "trio1"}], ")"}], "/", 
         "trio1"}]}], ",", 
       RowBox[{"10", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nad", "[", "t", "]"}], "-", "nad1"}], ")"}], "/", 
         "nad1"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"adp", "[", "t", "]"}], "-", "adp1"}], ")"}], "/", "adp1"}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bpg", "[", "t", "]"}], "-", "bpg1"}], ")"}], "/", "bpg1"}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p3g", "[", "t", "]"}], "-", "p3g1"}], ")"}], "/", 
        "p3g1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "t0", ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Lighter", "[", "Black", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Orange", ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<10 \[Delta]TRIO\>\"", ",", "\"\<10 \[Delta]NAD\>\"", ",", 
        "\"\<\[Delta]ADP\>\"", ",", "\"\<\[Delta]BPG\>\"", ",", 
        "\"\<\[Delta]P3G\>\""}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"trio", "[", "t", "]"}], "-", "trio1"}], ")"}], "/", 
         "trio1"}], ",", "  ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nad", "[", "t", "]"}], "-", "nad1"}], ")"}], "/", 
         "nad1"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"bpg", "[", "t", "]"}], "-", "bpg1"}], ")"}], "/", 
         "bpg1"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"adp", "[", "t", "]"}], "-", "adp1"}], ")"}], "/", 
         "adp1"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"p3g", "[", "t", "]"}], "-", "p3g1"}], ")"}], "/", 
         "p3g1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "t0", ",", 
        RowBox[{"t0", "+", 
         RowBox[{"4", " ", 
          RowBox[{"Pi", "/", "w0"}]}]}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<TRIO\>\"", ",", "\"\<NAD\>\"", ",", "\"\<BPG\>\"", ",", 
         "\"\<ADP\>\"", ",", "\"\<ATP\>\"", ",", "\"\<P3G\>\""}], "}"}]}]}], 
     "]"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bpg", "[", "t", "]"}], "-", "bpg1"}], ")"}], "/", "bpg1"}],
        ",", "  ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p3g", "[", "t", "]"}], "-", "p3g1"}], ")"}], "/", "p3g1"}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p2g", "[", "t", "]"}], "-", "p2g1"}], ")"}], "/", "p2g1"}],
        ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"pep", "[", "t", "]"}], "-", "pep1"}], ")"}], "/", "pep1"}],
        ",", 
       RowBox[{"5", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pyr", "[", "t", "]"}], "-", "pyr1"}], ")"}], "/", 
         "pyr1"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "t0", ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Lighter", "[", "Black", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Orange", ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Delta]BPG\>\"", ",", "\"\<\[Delta]P3G\>\"", ",", 
        "\"\<\[Delta]P2G\>\"", ",", "\"\<\[Delta]PEP\>\"", ",", 
        "\"\<5 \[Delta]PYR\>\""}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ace", "[", "t", "]"}], "-", "ace1"}], ")"}], "/", "ace1"}],
        ",", "  ", 
       RowBox[{"5", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"pyr", "[", "t", "]"}], "-", "pyr1"}], ")"}], "/", 
         "pyr1"}]}], ",", 
       RowBox[{"5", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nad", "[", "t", "]"}], "-", "nad1"}], ")"}], "/", 
         "nad1"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"atp", "[", "t", "]"}], "-", "atp1"}], ")"}], "/", 
        "atp1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "t0", ",", "maxTime"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Delta]ACE\>\"", ",", "\"\<5 \[Delta]PYR\>\"", ",", 
        "\"\<5 \[Delta]NAD\>\"", ",", "\"\<\[Delta]ATP\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Lighter", "[", "Black", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Orange", ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.769082326368487*^9, 3.769082364642827*^9}, {
  3.769087834665144*^9, 3.7690878353677464`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
5ek408zG/wNkzBTz
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        LineBox[CompressedData["
1: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
4LtZxlMLRpnoP2gtU+Y=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1:eJwV2nc4Vl8cAHC7kkik0DCukcrMiDg3KlKJElJGWYmMopKRVUYZZRXJ3ut6
35uVHLRUGigyG0bKiFJk/r6/f3g+z31e997zXed4XvHT7kcc2FhYWArhx/+/
fw+dgZ8EGZRoY7+nlYHWf47lXQ++46a/1aCLgXQ6qzYognXO54trfmWgyFfL
d9qCxaevXRqeZCAJKt+zHmyzNavx3GomMvYZ/hrISpBIqypawJCJLp5fPXkH
bPPSGf01ZqJ7LhpLFNiQ/UXKM3MmGrYKF/0Cblhc1FB0YKKrurKmu9kI0u7t
AQXpq0xUuvLMU1Z2gqxLSWMmljHRe47YNmGwKIOsMX7ARLMLlV+UwD5ySSwz
NUy0d2LZ4inwqvq1qrzPmKjnfZ5aIzh0RiXZopuJ2N683dMFnkuynPP9zESy
z6eP/AJ7JN09d3OQibyq9d0lOAjSSXWNm9dPJlp5/1teMHjgYYGeLRuNFJP4
KpLB895+iSNcNDKLVX/CAF8qrWmzW0mjzOCwz1/Bi2HzCyKCNNJ0khHW4yTI
YRu5nCyCRra2h2VOgNdGj/UlyNLo+vFLqhfAN4UkBry20ajlwHOTLPAR4vTu
fyo0OqPoFMnORZCnK1q7RHRplPX65v2NYOFBNumavTTqO8tgqINzA8WqdffT
6FjOQpcL+OnN8CI+YxrF6kr+vAb+JviB0/QojZo/GbCng/VKw1ODzGikKxK/
9T14p94W3zsnaeRfWY3Gwclm62uDbGhUZfrp6PJlEP/C84qmp2mkECPntwv8
dPe5AtqJRhs4GpqzwYa+SYl2njQyzxj6XAc26V7YlniBRrd1eP58BPN1dXwt
96bRCh/zjauWE2SZRXNmtg+N9gj5K8mAzWtV8n19aRTIzNy7G/zGP+aplj+N
/o6NnfMGH7sfoH8pkEZKNwSCY8DdCBf9CqKRq+zOxAJw82MjGfMQGuU/tS58
DLZ/xV6THUqj/tOhdb3g7GnarvsajTaxFLZOg/u+axBz12lkmfp2iH8FQarp
Oc6xh9MoQfPP7FZwS7bA9z/gdx0ifPvAfWXrxt5F0GilNylpC07i3L8sIZJG
+9Y4ql8BC+kHqOveoFFw2Y0D8eCMtdH+H8GPDpbblIL3rjncaX6TRjPf2y80
gff3JRnWg3eEzYd9BfeIoBb+KBq5ExL35sGPejNdD4ILG/QpIW6C/PAiZ4MH
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
Wyb/4QK0yXHFZdYogsyLOmNzw6MAjaUwb6uCWbKM2lVgv39j2fKm1P9d4mBq
ql6InvdRym7RBLljynlnsWYRQlFsy/liIf53x0cCt5UgnpFRSxlw+8tD87kG
JajLoKMEgW/0FdQy7EvQRY7iox5gofe9j6/cK0GlvsfSWsDusp1bXnCXog1n
89XibxFkHU9/x+6vpWh2n5GDcBzMpwfxg1+0KdSUrVGlBI4lFzcrGlIokU1y
pSFYQrxRwd2MQsp109QV8IpEOAy4UchZNWO+G1yrOv8v7z6FPkpOxd2Ph/1C
5PO6yDkKPWBJbpRMJEhuYfEQtYJydNl1V4oWmE3uzhtjZjna9bHvwlGwjnXf
N8tH5ehJmaRUCPg9u7SZTks5em9dEvYVzCv4+As5U45+19YfzEiCfmIixJTT
Y6AKWTupanD4sqygXQcZ6Eo85+I7sO7VCy7axxiIzdWwjOUOrN9BDhceJwZa
I/qe3xZ8NHpwdV8EAyn5fGvfdBfyRTu/TL+ZgaYGIsrUwKfYHjbue89AVcbb
wo3AJeNZx3f0MBAp67kzALz2w4axrhEGMu6YTekFT7kkZJtyM5G7Ku+pe8kw
P1bo+P7WYyLlDGonDd5KenS0GzLRX56ja5rBNHu1er4JEwUMJD2eA2u//Tsk
aMNE0XHi0idSCNK/ZUlxrQ8TlUzuGBG+R5DWkbacRQVMdJ31wwsV8IrOnEPf
ypjIlt87/xB4l/WykVUVTLRG6YFDEDh1Rx63SCMTXfZQ/TwMvqkmQGzvZCKT
wA91bKkEec3y94mHfUwkF+udugE8tIyFVhlgot6yB5bGYFpWpvDrOBPp/lT9
UAneme3wR4OdRqJLH5gt4Mtqdt7rltNoivfi7RFw2rTX5088NMqTrzi8+T78
vcAbJ+WFaMTjpvbyOvhSV4VngwyNBv3b89PBCylPq8e30qgu6mJYDTjy3MHn
nIo08iyp2DMOTvD8Kj6pTqP2UTV8LA3iYcJvU7uPRmXz7anu4KVvDSfVDWkU
znPJLwLMPiG3mHKIRlrbKnc+AqvTZiISpjQS3GW+vgM8abYxSs+cRuMHpv9O
gIO+/4w3sqRRuos6TaQT5GiOiKW4LY2u+Hbc1gEb0Vlrvp+m0dEblzwtwK+u
JJslO9CIq6hS/iZ4ekb5UvVZGrn8UC/4DQ5Qre34foFGe2Y7wlZlEOTqIJv8
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
8wbp/7+P+h8okNif
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {10., 0}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{10, 10 + Rational[4, 21] Pi}, {-0.10035856655306, 
        0.12376191410721842`}}, {{10, 10.59839860068377}, {-0.10035856655306, 
        0.12376191410721842`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Delta]GLCi\"", "\"\[Delta]G6P\"", "\"\[Delta]F6P\"", 
       "\"\[Delta]ATP\"", "\"\[Delta]F16P\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1/3, 1/3, 1/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.769082402396652*^9, 3.769086383202409*^9, 
  3.769087836659279*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJwV2Hc81l0UAHBkpchKUiSeJ1sSInF/ysyIqFBJkxRJKlkJSTJLZGQ+9jN+
Qgm5spLZQklSSbaQEZX3vP/o8/0Q9557zrnnPptPXNh/moONja0cvvz/78yg
K3ylENxsiWavGzKQeH+sgDj4hU3mA+7CDKT/oXyjGrheOElbPjoDRbTw6jiD
27nMn6odzEAyZP7FGnCqe2ddcXM6sr429DWIHX5epoVUY0tDzFWuDewrKMQu
mtLtT/uSkauaS8QKbgrx+uYOnBx5F+243n4vfDWFELH/cdWJrotSb4VxpAtT
iCjWAApdFYdD+Xd/ThCnED/ZFz98ZWbg4vRH9SS4tyBG6/SrDNy3TbawGbxR
yZrr7VQG1j7IefkfOC3lqoKnRiYeS2vkO7OeQgTdIUoKyzOxnZq5lqYEhdCq
5POcrsrCVFu7qLcbKITbP/fuEyU0vP97vdc4uOLn0LWJ1zQcdFXTnmcjhRDb
LUw99pOGe1LEZHXB4WGLryeUc3D0wPvyLLC1/ahKLS0Hz10+OnBRkkIsvBup
E4jJxY0PzugKbqIQrj/JyT8W+bjH/fwZefCby9lnuM7k4/HdXnEEuLV6+vRU
YD4WHQ/44Ql+Hzt+4RKZj48b3L/3GpxHP/R5g3AB/jNcN3pXmkKMHWmR/dpR
gNV1N6eulaEQdl+dxU5rFGFjQbkXKuCJ8k+v0s2KsMN35WkjcOMVxS0VTkU4
KEbb9Ar4BrlHOSq8CLd92/erC+zWfu11QU8Rdo0MtHggSyEUvi0N5/rQcdqn
j38kqBTCSaqo8F8yA784+FlFEzw805V3msHAPzu+Ou0DC6bWc2ZjBjaoHa4J
Aec4b/PK+MbAA7nzoWPgpYBTCtkKTKzkKcJfvYVC3Jb/GFnMYGK7YTH99+CX
w8nBXs+Y2P+ExIVpcFxtkT1vGxO3221+vUUO8mHN/f2PRpnYS2fr/RjwM227
HX+3sHA5h7nkcXkKsX57e8WR+yz8xc/Kyg9svGfLzhNZLMw3a3P9PjhD3M9d
l8XCh3/Yf3kJLp3zLnFtYuF/LWdy1BUoRFi6lChjgYXljNy6LMBH2M4ayXGQ
2LranccF3DgjkfaFh8SZpPfZlP+98iePiAiJDe8Hq3AqwvrZcwVd5UnsLhDm
JAVu+7Of/aYKiRNu3Y7RBrff2H/8jjqJf1yLnToPTsybOGy3i8QRTmllnWD7
ls2lXVYkLunOHJwEGwUPJ+rbkrjXOmcdnxKc/zOr+phDJFbdQ7+mD07elfht
/BiJX8tV6OWBxx69aXlwgcQ/mZd/1YDP3p3w1blEYgGtbUU94GNdPsr1V0hs
YZgvLqAM9dPtHJMYQOJzLSc75MBKlRx6/UGwnv2bwgzAG/alfBcOJXGTc8KM
Nzjjjba0VgSs/4dNYTR48ccN5pYoEnNf4D+eD77520yNPZbEewJC2z+CpY58
5va+T+LqJK+C3Srw+81wh3U6iT9JqzofAR/SG22PzSTxn7xhsSvgBLcNlRXZ
JN752Dm0ALwB/znamkdiB72NunVgVX5XsdICEvvUd0/1gsO/muObRSQue2N1
TFCVQvRfnPo+yCTxOwc+MUWwoa376Sskiaf7G1r3gKv5ut5PFpNYyPVGyFGw
axGvgW0JidUmd+28Cp4x/ZqWUUrifVcWfsaCmfNopruMxB5/S/IKwY+a/+n/
fkziqNALTvXg0s6lYM5yEtNXKa3tA0cVMfBvcMvdwZZ5sIG8xdz7pyQeWZ8V
LLSVQpwx2qGYVUFi3syjOkpg3rx+pwOVJJaTX//TEKzx62niNNiY9S7XCazw
RuP9tSoSn9KKPerzvwdrZUfBIc/MRe+CUXdngPEzEmcZ8rQUgYX2fh6+A37e
UnujASzy3fpcJbh/f6D2Z/BNy1SuTvDyB53JBfAHhe1V78FSx2dzhNUoxGOp
W3cbwXpD5BFlsOLblZFp4CMXzosYg73GlOnOYN85ueZj4NdrTsytBicFfAu6
Bi7/JuGRDesr50zfcQ/srd0kRgF33XGcoIMjs5dmomF/s8JiOY3gVoe/fAMQ
D9Hk14f7wSaeecdlwds3RwkvgnN/v/1rAfHbn2/6UmQbnP/Ko9+dIb4Xt3IG
qYClH22UOvaExLGPsZYJeIF3nGEC58PS8xt3BjtJ5ydLwPm112vRfMFbV8uP
dMN5r3rLEGKCa5h9TUKQD4qOZ5tegHkiX56MZpHY9Avl+hfwvztffGYZJA6b
TBkTVacQ3YhdIaSQxHeejg0pg7Ozp82b8+Hvh+h9NwQbDL9u+pdL4pR1nz95
g48Prfq2FfI548vWnkiwYrnsHWXI99yioC4aWFVVN1sM6oFEMh3vwHZ2X/RK
kiGfV15qGQOby9HbTj8gccXbuhec2ylE1eDED64EEte7nK7RAJOedl0CcST+
EJNfHA/OSRq2NQwjcZ/DbwYdLP/02c+TISQekN1bWA++aL1ocRHqe+LJaNYv
cLMK1emAL4k5+lXj7TQoRLxLXcYedxIrq5VdEdWkED0DkSl4H4m3LXJdUgaf
0N1PVpuTWKv+4AVD8M7z6zjoJiQm7BdcvP//+TdLATaIxAeCdB3egeU+5dQ0
Qf8LfPVcN14L5ovJsvEL0D9DkoW16WApbP3xIPTX8FMnNerBRH6KssMiC99b
4FT5Bcbr53aYfWfhfGlTKbsdkC8ik7MxT1n4tWc7m6g2hTj1RCv65WEWHuvb
uEIVvMbgiOIFKxbmtjzHZQquXxL4NE6w8C4FXj5/8L6Zf/NXqCyc+8VAZADs
nay3uXKMiX33l1FLdaDfuA9rUryZmKKRutdOF+IrxKto5cLA+lkjFh5goWq8
wfoAAzsI6uwLB1/RebGouoeBo8c6bavAa+QD+EKloAfQ1hyl7KIQVk9va8S8
peP2tSEXfoHDbSzemuyg46vzZ+Pj9SnEH4+icxqDhdgn37KXDjaKVzwT+xrs
sI3SAH4zcjnndVUh9q1cKJkFO68NP8t5rxAHXr/19iCiEBzrVB6o6hfiMJ4c
4fUEhfBd9e9QcUwBvr+uP/ahAYUoujBRZyadj0t2HIzKNaQQDyzvyZb/o+HC
uSnHajCDa/nQtwEaziiLku8CR0yz+/xppuHo7Q11XEYUYlb5D9fvBBp226qx
eApMO6otIK1KwzJywi6yxhTi/HGRJj2HbHxXrJ3IMIF+6Wep8DA7E1+cNfqV
tBfuKxn0xmVTKo4oT+sRsKEQWR3C59j33sI6mqZb1h6iEFuoXQ/UDTzR7ieO
U6lHKYSudwwf5UI8an/sqch9CtYrd0Kfzy8TPbIZEZUCm3ZanFWPz0SJYyeX
NcEvzLfT9zIykbPMoXenwQvNvVrmnzPRdJReYAM4Xt7zfsTuLCR2mu9N6Gn4
/wm0lb+4stExEdq1FS5QfyFHjrEH0ZAhU/LUBvApN4Y4fyINyZslWm0H28fP
jXAzaWg6MEL2JLicXSut/iMNhY54ttWCB8N3PDijlYPyn+ttDnaF++a7dcuO
oRz080J3E5sbhVi9acXuAr08NMK0eioBHsvcsX+DXR4aGG8o0ADbaw1tu+KW
h96fK41wBft3H9ceTMhDNS5xFq/AZVYihxgTeSjmmPmr9HNw3ycKhb9Mykeq
+3C3vjvkx5qsvqZPBUg+WqvJHhy5PnVJc6oAybQxyr3A0RPEz9uchUjMPDUp
F9w4+kR2ULEQ/TO+dljAg0L0VfHyeVwpRG362z9/AvubSBqweIvQedW8QX9P
qN+0utMJ6+nIgizZeB/80nHHEEuejpTVa/YzwMW7Qtge7aCjcc0P1Z/AzRky
Ly8coCMPvVWJ+hfhvFdOPHgVQ0eeFhdM2Lxg3i7WCJRiYyDrdr8AcbCi22hm
FT8DqVmHl6iBRTXmqnZvYKAp28xNx8Hu90pLuLUYyOvw2/nn4OTgyLTzbgx0
2W1HfsglCvFLnWaS385AB8f29KWAfS05bj/vYSAtD2vRUrDHWV+12kEGmrt4
NmgA/FWTFnPtHwP5XEuxN/KmEPx/rTKwMhP5hi/z8lyG+z3qU1pmKBM58q1G
m8BBpx6aq8Qw0c5I8cs7wLnFOj3pSUy0FLPtiws44BYRqMNkIv/Ek0+bwM/Z
1vLpdzFRYO6LsxFXKMRa9RUBNzezkHfr6xwaWMrmvslOJRZym/74pRqs5/eY
57UGCx3Q/+kwA9Z+9sCIZsJCyl3ie49chf6TFVTbf46FZP7IhF0B/65WNaR5
s9A6GZXaWPBAsM1lswAW4vAw2NkArtNfX6cdzUIfuNwUVX1gnvJsUSpkslC7
kvcZU/C+Mtc9vo9ZqN4mMOsEOLLOv1mpmoXIh3clEsHp/zh4t7exUJhmJR/b
NQoR7HXE5fUwC2mcXj36Gnz1XOStbAESKd4RkxsDN/JsM7svRCLpYumT3L4U
4vTv/PCroiRa9Vfj405w7tAqb34JEn2NP9qSDRbZ5Z4ZSCHR+woXnmqwcpvf
3MwWErX3X9zzHvy0aR/LQYFET5XDKlf7UYhVPAZoToVEsfXMosvgkS9FAZe0
SBQ2Uv4jBhyZ4J94TptE/oJ1soXgn+7Lf2x3ksjlSHdKHzjOmS9zVo9ER4K/
dC+AOcZu9zARifbnj4qI+EM++hQesDcgkf6v5TsmYLNLz7j9DUmkIcHXdBws
b5O3Y86IRAqEKKc/+LTA5gxnExKJRsr7k+AZnhJ+7r0k4nukXt4M7i+p5Tcw
JxHb+12/BsD1kja65y1INCprc359AOQb/wfRe1Yk6jokorodLLV2g3nEPhLV
3umctABbFjnu8LImERMnFp8Ba6/V6t5rQ6LkGYdLQeAac1t50f2wf7mNmsng
zg/18u3gi4f75krA6+72dfnYwn5jMsrbwCyjGTVROxKZ1p3w/QG+++KAZgZY
Y56yiz0Q4jlk/3XjATg/pR9/JcDC/vu0IsCrjxVgDXDr/sitQ+D5u+duWIEF
iROtWgfhPBtV9riCOddSVl0Bty9OcgaDM2mUkRxwheqjxhSwN37s0gjOPeEd
Xgbm11EJ7gbfTdDa2wG+/7VnxwdwYPPCqmGwa7TwrRaw27+KNo7rFOKbgJwH
E3xAPSBmI1hV89zoDTBxBtlogfXfbftrBFZOZhexBr9/1pa5COsVb697dxYs
UxfXnQ7m5AhLCAEzn7xK1QT/1DS1fwjOPv9pshLi0XuWT+IJ2D/VrEMd3PSw
9eMrcL0RZWcyxLPkdfTDEfA2bd+t0xDvNC6bY5xBFCLfwJ65ExyhI7JZCty/
raXsEpzXicxEmg249l+W4xM4X6tOhzPnwCuvbZ57Due/c+VG+ZtgYVFXsWeW
JBK6mFFU/v/3fwR9CYX8+UM74f4GvFB5PsIG8mvoPWXrGNhkzLZUwIxENUTB
o003YJ5KMrnlaEwiuvc5bx0wvcRddRjy90G+ipYtWOJk7X7XPSS6IPjoaRhY
Biuu0SZIJNVfUTMOth6Y3yWpA/krGhDMEwz1OfO6dOsOEs2ZIMPNYHl7U5q6
JonaWHUv7MAuFTuHV26Derve2l4Jbhu9zfVPjkSuJdGxnWDbZ8ka8VQS2f2w
3j8J3i5Q8EFClkRK+zo7ZULgfV43EfpbkkQ9Un29t8Fit70c/wjD+u9rDmSC
lzj/+pkKQj6sjhp9Ck7V4BW7xQ/T8aLu4jB4ZPfCo488kB+dSev2hlKIub/j
0g3zLLR058B+vpsUgrpL+Ux7LfQ7DoaDDNhXrXC0rJKFMq5xHt8Jtrtucz64
lIUMXUouuIF9zJgnmnNYKHK3UFQz2Hl/+i6xWyy08Xfri4gw6Acir0LTDFlo
4gKlIwtcwdeg06XLQjWDfl0V4Iyxs8vT6ix06p3i9xGwu7xZw0dpFmKwwjnM
b8G8cIPrqtsSE+mfMdRbFQ710lq2L7CIiY69rXx05zbEa4Xwhbh5BjKeEKzJ
Adc++bLz7AgDqa4804bBIQctGjd/YqC/+oJDM+Cv0bkqmrUMlFJ4SvJIBLxP
fI9UfI9goO4b/OHKd2C+/BGw30uMgfapHTvaFgnxuvHd+bQYHWmZl7r9AKvE
09mcuehI6sxKH/YoqLcD/yi7fhWh8ZSSu5rgO7FfNya9LkJ3eHibHoJnE4TL
BiOK0Is+Ut0jGvrTSa2v3fOFCEVx8K6JpRBJ44ID1pUFaPXomKMceO/NY+0T
eQWox7SbgcDaX4tVLsUXoCucdFtPcPlW5LHVvQAx/Q6kvwb3/eQdvSJZgDa6
5WvFx1GIjcVe2/Zey0eLxlan19+jEIXTX5YspfJQGVtyrWwC7Edq7QpXaRry
Ob8rRRf8PWsu2Y+Hhna977tkC750OoR2bSIb1bNkqSHgpyZBZppV2eidE+PW
V7BWj/pN+sFsNFNVY5GZCPE2s1XIv5WFtl370SWVBO9JW+Rv2ZOBGFMao+tT
IT9dptznIpMR25D2vbgsuM9ixhcuVQaj4cSojOR86I+hYtvjzl7HypbmKlQW
zBv2N+/fcUjG8zZan/TB1gZLDxLTk3Htwc1R9mDjqACpsO/J2N55fuwOWHFp
dp73Ygq+eSmbPg3W8OrtSwpLxX1JS0o1JNwvT1ze3S5KwzGDRYqHH1GIWyU9
2n3nM7HjaEKPN1gwR96DFpWJt/y8ERENvqIXvvsAMxNX/T408hx8r+Hl/OXJ
TDy0mrNQvoRCKExf+szwzMLE9iMKc+C/XdL1zR7ZePr6avm4Mrg/DMOtnO1z
MO1FpGQBeHq2oH29dw4+sIZf5DlYi5C0r4zJweVp/P9+gqUccmbKGnNw4DOB
d9aPYd5v+2V0c3suXrkkGCT4BNZv5yt8njcPS19Z+z6mnEL0Xj7qdSQtH795
dr8tD6yt6Nfx6nE+DuESq8Ng+k6VevmOfDwYL8acBJ/lLvkRvJyP6SXrQvc9
pRDLs1+ZvU4FeMfUerU1FRTiy8srEqvEC7HVeanw6Ero73gDM+BSEV5rnxqS
D95rHZwweLsI9+6RuF4LdnRpL1bIKMJuG8SuzIF1xg7M6rUW4ZvN/KecqmAe
6fb/lCxDx1Xyf5HqM+gf58pW8jXRcYion64p2LMgksndS8d72X5rnQCXH2KL
/jhJx93dv1QSwLE3bt7iX8fA02FjG/6BWW7BajEnGVjh+8f5tmoKMV/LLvDz
FwP/fOUw8wMs48Pz8wQ3Ez+u6p5gx/A+UFh7mL6OiQ3j337XBHP0CXjW6jCx
856Wtw/B/t9+rPntx8QJmRUs9xroV1kf5v0WmPholHbRLbBTx6EsCx4Wplx7
nJsJTrPJ85pey8KPrB897ASfc3c1eKbOwm3LBXf0nsP8lqZZY+nGwpxOSS78
tfD+bhC8bf6ahYsj6flUcMaVX4NJvSzsVImH9cC+i3Yran+w8FPxwXMe4PkP
F1D6Xxb2eKvu2QFOTio80yhC4g0cxsU/wLUvj/95K07iJjWH6WXwDJYxb5ck
sUz0dW+1Opgvy3M5bsuRuNu01ScO3D4zf1xsJ4lDr35+WgAOO69velufxOq5
04vPwWnS9g1Du0kcuWJ9wDQ4cXrYy92cxET16Ru29XD/3yinRB0m8fiYT+05
cORdHatTx0icvCFyRSgYlThPy50k8azPo5ul4N1OP7O93UhcuH359toGeA//
QQGyPiQ+dEK4RQXcqbDR0smPxJxx1NXG4KLeXRE3A0l8bMI8+gpYTyjFKCmU
xKslj3VEg1u3BtXcvEXiCnMvwTzwWsHfmU4RJBYteHC3G7zOejauM4bEz7uL
3k6Cd1lKP7x0l8Qe3FiUt5FCRJmo8v6LJ/HLk98TtMEufYlz3UkkDpRST0kC
E2W+/9KzSKxkadRbDFahfO7PoJH4vZ+9ZDP4TA8pFZ1L4u0fAtMXwY4m4yyV
QhL389ztF34B9RDPxtVfROJorZzNSuBntm/KAxkkHrrXkn0Y/M+eg7hBkvh+
bd/AJXDH9pVrvxeTePfUFDUSLM/cZKFZQuLJTVwuNLCsiMTgxVISp1qJ51eB
8+mt35LLSGwWoDT8DpzxYpUx+ZjEc0X6iuPgg4wi/kdPSEzrsTnH1QTvq4Ig
3YxyEtusPE2XBL/lOfbK9ymJfxmpXdIE885+FtavIPGD4CUdS7BEYs7NCbAu
bmQ7DfYxnVaKrCRx31LcC39w089XvOuqSHxD+2h0PNjUx2JTDJhyWf4AHbyi
8YLXL/CL4pkN9eD050ZcJs9I7DZR/fUj2MH2Q08YmF8pomAG3H1Cc64ETLoc
8Fz1EuLVfcqxHWxHk94hCyaTvPi6wPP9o393gg/Gnl3ZAk6WfFK/HzyebefI
AOs7Bt9xA1+v1GcLAH9JsNwfDC6uVv+nAw59K74+GVx3X/fQAKxPTnDgczHY
Qf6UgD+42YKV+xIs7vRkCzvY47av+xfwKiki+xLsX6jRSOM3mM9m5a23EJ9S
DqElwWa4z/okO6XB9qj3uTz4Qd7x2MMQ3yW/vHACTBuTKw+B+KeVe+2zB1+y
Nt+XBOdjMKsn5gnmGK9wTIXzG9i28tMtcEXf6c+RcL5KReluT8AaKoquWpAP
7T/ctnWAD9dsvvL/5+teFK2FQbDXWiGhBMin8oetN8VaIB8u3mOnQ74d7km0
UAVvYHEe30An8T+xkyLG4H0bFI/7QL4axf7OuAwuHLM8tAT5PNRa7xIF7ghX
PLQ5B+p/ZaxqDvhyzdVVmtkkfhO8peodmGHan0NNJ/FlPBU8Bqbb3EnleEhi
8T9VZpytFEL9mceptmSo38u23dvBYvc+ByknkHjMJWj6LjhH5kKKUCSJY2jm
TwvBrdRvzUdvQ//5IhZUC+7SjfubGEbia44M/mnwlcupN7uCSMxt2SNv0wb9
3Ki61d+bxNLqGsfWtMP92zR53tse6lP4r5IC2LbOXtbajsRxMw0Lu8HUxgzt
ddYk5ig7dPcKWMJNutDFhMTfd/g1fAI/znnwVFgT+pNerRK9g0K0XOyUS1lN
4hNSdxYawE/rmK+28UC/XbZt+Aze2bcqopQd4lPz3UnkFYUoKfF59GeMhS/s
WXnXF7xynM/drJqFNcysF0xfUwjNiHtF0Q4sPKawvuEEeFKn4qSZBQvn8H2N
8wc7Xm3pgUEGi7VeUiLBX5yNveNlWfi3VaLTujdQ/zotjrqjTFxt11f/Hey4
K0Ik/BITmzmfjwt+B/OOpCzHsCsDD4U0ZyeDg+Lu7za2Z+BbefKPH4F/ZV32
v2nCwA0TAz1fwWGUSZNCKgMbBByl7OmkEFtUP6rE9tOxTrLVkxVdcP8m+Gd+
taZjhXdqn0K74fxFvzQf21iEm+ajJ1PBQ0+nTdR4i7DLhnH2MvBygJvB4Ewh
zjlRsOU7WPSXv/iKlkK8eWqzp9F7ChEa4PaMw6cQrxcQWcH9gUKUFvm3aLQV
4JWms/K3eihET+wkQ/t0Pq5eY2OQCa6L4F+5ZJ6PvbrpDpXgYyd90rPU83HP
mVMRk+A091NbspbzMP3m29FDH6G+LwUouDzIw9Z1xUz5Xni/tkR8VmrIxQn6
HhrNnyB+GlwlFatzsKzmD8T/Be73k+ytn45k4rcfFaooP2Aef3hIypR5D3Oz
eeZKjsN8fzH9W+YDT3xPYZPggxkKsWjs1MwSuo0er970Ofs37D/LLOPQ+hRk
T9qLVoNrjpYb6B1IQYu2d83egzf97pReEZeC9FO4SlcvQv0ml7Sr8qaiRoWx
8MuL/9enkAvbbCrqMn6qbrIE73lnhz3Hm9LQbJBt2MgfCnH36kejM4qZSGP2
lso2Nioht88yTjWAhlpzrw3tBZdxeQYt3aehU/bnsk+B63kMH5cwaSi+0mr9
A/BvtlMF3z/T0K8ba7mWwXsfJBdbGuSgUoHs3lZ2KvHE+NANKbZcpCFffcd1
BZWook81GbnnodYPLONgcOhQb6l9SB46dSeTPRX81nJtqV1SHoqfCL3aAd79
5lsBT0Me+lVqflKLk0qMH9+eeWhDPio1+LCTk4tKRPQ9OxZXl480Dv8aTuem
EvfWXfm3zF6IHu3zG3kCzlFTXdMhUoi2GXKMdoDbQ+UDwqmFSFVFcGwZLBrW
tafCtBDJLStNHOOhEhI5FYR4dCGSyD45vYkX9t9WLlkqWoSWR94spq+kEput
Unskhego8LPD0hNw95Zf4rLSdPTnbf9SB9iSau0otJWOFqom/iyDT+3Z8yzf
go6mo/mWj/FRCT7GkcHnYXQ0oL57hfQqKtGo77Hi/hwdNfsWr8pYTSWOnDaM
D6hnICcRLeEKsMLeJrb41ww0XVQh/g5cn+bDHd3HQOs/1VF5+alEmHpgqfIC
A7miLuQJNtm16C+iyETcnEuXCAEqMZWW3h4QzkTJqdd9HcGNKWkrXt5jIlVN
zhve4FMXTVXn05jowBn+6Pz/rV+g+6eUiWhNm/IF11CJl39FZfI/M9HuKMPe
fjCLXmR7fSsLdVFffl0Eb810uT6rzUJu1ZbDooLw9zKWBKx2s1Dc5ME5U/Cg
hatWrh0L9ducFSwG2ydcY01dZSHvkXGxFnBNmssK3yAW4g3xkvwOzp8VvzIQ
zkJbS/0U1wtRiYTxgKRjSSwUKBZteAMcGnuYc6KchYRZwuYpYPeHHr5hNSyU
a5JoUwb+WVr2hq2Jhdp8MpyGwR1OD1aldMH7/+MjHxthKhGuUdF8apqFKtO7
6ZtFqMSP9iR/WWESaflNLeiAj7qvEm0TJRF5cJXRfvDZKlfHs+tIRONHn4LB
a5Wqhq9tJFGkXy7/ANj4fFrLIpVE3IdqHP6An5cb3dORJ1GQek+OqCiVyFMN
nXVTJJH3ML++EXjCJvV6jiqJjhy67JELtkkWOnlNi0Rd6jEV1eBY4QPlFtok
shYo4O4GW3Q0xQvvJJFhQ28az1oqMaki1XtZj0TVGXMjm8CXOyX3iCASafsL
7tAGP/XDCtkEiVS2G3a4gu+8pngk7yFRvoDThhvgfbe4m9iNSCQzctUlCVxg
0ph02JhEYplFyy/BcrMbHg6akijWv8H8Kzh4qKN53f+fh9p/TlwEB8w8dNU1
J9E/ARE1JTEqUe1QP+ZgSSKfEWX/PeBdlTs77KxINN1g3HQY/JLgkdi9j0Tn
M51FvcEuo9otm61JNOjv6xwJfoT7+mfAzvbxdBrYp4bHodyGRD3bmQtV4KnJ
2m0X9pPIbk2TYSf4uOGQq7gtiTpGvsSOgy+WhP4pAe9tXOrlWkclZH6jUQM7
EtVnrlWQAvsX122vBesHbL2sBZa99vSdxgESldubPbcCj440tyaB1TVO8ruA
fbMzJabA9DUBDtfBXuhH1c6DJNoympCTCN7jaPTo/89HMxrJKRZ4Nub0bxpY
IqtZrwkc7z8V2wCODxi43Q9+XnX36nuwgMO/zgXwxOh00SdwuIa4jJA49MPc
SuVOMIeguocCOCU8YaEa7D9qXmEAVlNVEUgBzzWe5nYEh2xXOH8WfDHr+n4v
MKeGhpAieCwgKS3i/9/XMr/UC+s/41AykgUeTpRUCgb3a7RpVYKdt+97uB7s
KPgj+C24WJZqkw3xeTfK1jEK7lX+abgJbPVCYgPneuh/kmVXoyC+TVkaLhvB
TRopQ+NwHrsDrUo0wJ3MlwkE+JGL9E0LcODzQevbcH4yNtMHT4Ed8buOejhf
DkrC4j1wTfK0uCjkgxe/a2sROJwr4osc5MvXOZ20OnDSlefnVCGf6l5+MpgB
77n1+bkI5JtGCUtklQT051KVyGkzqMfUG99lwPs4RkXrIV9DL1Bv7wcPSQY7
Ichnw7Xur4rB7itbKxOgHkr/6We9BKst7Tq5CuqFMiTo/QW84Y1YnRfUE2dl
6TqhDVB/z+4z1kO9NTj/cfIEj4yul2tSh/6wt10tHMy2dyT2jRqJcrdncGSA
xS7+Ke6Aeg7jNsztANee/SSeBfVuTL8zrrqRSpzWPeCVt5lEj+8fxcbgQJH5
aJNNkE/Xt8Y5gc8feOncA/2Ee/9bjWiw9Zk5mffQb17MS/iPg3Nfmkpo8EN9
fxmz5JKkEiRf14ezfFDPzdWbJMGWUk8t7/JAPj08UWcBXvjMZ1fJTiLTPYV8
dHA83aTl4wgLlSv799aBLewtc7wGWEhezIr5EfxeX25i4hMLrRyeslklRSU8
l891JL5ioeZonSQ3sPTxF98LS1nIvKdJTmETxEvqC2c39O9XLg+Wd4NFZFLd
RS+w0MFZl+4j4AzToxnqZ1johCDPrViw43MhdyHo/z7GRoPz4ICyzd/sVVmI
9ug5rVEa6nHXK0LoExMpEnH+/eBMg9zDR94wEavN2W4R3Dw5cjr8BRNVDC2v
UN0M63m05BxSzESvpPRP3gfrPll3hCuUif5GVGw+JUMlBiTO0nbJMlGweMTv
AHD8qFvOAzEm4s11eJ0IvpkU+a5zJROJPl8IagG7FnG0zkwykOK8Vr+6LJVg
jso/qK5goIMnS9LYKdDf1516F7+XgVi69A3pVNiPmb7leVs6klgtpPMEHOuj
SxExpKOw3ssHO8DaXoy6dA06cgpAcctgruhN3m5r6UgAv+F23gL3kcgdw8bO
IuSx+/eUtByVyA7ZPZVqU4SUzYybsuRhvzLXE+c0C9GD9UXfK8A790ZLn5Qt
RJwja1a8Bcd2uu99LFiIeiM+6K1QoBLyhz+nCo4WoDut50tOgt34slIS0grQ
yL57aRRFmMf0ojSm2QpQwcF+71wl2M8r0TPKJXlo4RVyfg52uijltpich0zN
0817wV7nJ84VBuehQeQkI6xMJfjLUuikTR6SUejtCAD/Ntjz59BELkpe6lY8
oEIlzmSoq2ySyUWRGR39K7ZSiW8M63Vs3jT0UWJrqxS4wpfnrKo9DSnej36i
Ay6xXpwhdtFQ023L6AvgzNVtSISThrguteh+BK8s29bhcTcbBRq9SHikRiVm
IgqDxAqzUBveEtwG9vL+1XIvMgtt3BnmPgQe0+Jqm/PIQhWqRoZS2+C+ihA7
4bE9C82vq5u6DbZ/Eei1pTITGd+V+UQDHzZ0Re9SM1HC6uAmDKZP1kW5BsL8
y26QPgveMXp1rZFBJgrxy4gQVKcSN1Jjw6NkMtGb2eXLSuBdtgM/qlZkos2e
x44bg+X5lWzeDmQgz5Fqi+Pgmichfa8aMtB/2CoUUQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        LineBox[CompressedData["
1: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
81Q=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1:eJwV2Xc8lV8YAHAiP4SUhhEpr4wKSVTGeUNDpESRsioSEgoNlZUVklmRLXuv
i+se7tuQKJWQjDKyCWUVfk//8Pl+7jrnPM9znnPu3XL+6knrFSwsLHnw59//
6R+28JcgN3JOrmDdxcSC38L4BMEhy+cD1+xjYo0vtE0KYONG1038B5g46C3n
PktwkQObWusJJt5akOFcA9Z8tUMm+CoTn7g52OPJSpABH3Yv+mcysZsL/+Rj
8DVJtmvXC5g4zn7vcgFY8sNFY/1yJh40CxD5Du4NIg7Xv2Die5rSRgdWEOSO
Ibfa711MnLfK9iUrG0GmsjY4+6+mcDN72Cch8G0njvJD6ym8sFj+fRc4P2V2
YEqYwgd//rdkBf5Y9uTnmm0U7mhOV2aClRU2tVxWpfCKd++128HbrPSKHpIU
ln49e3IKvHuD3YHkgxS+XnH46lZ2gixw4DoXcpzCq+IH0r3Bj5q3vbp1nsIK
MavLnoJPUbleKy9R+HSYyosisIJKY42HPYWTvf2/9YD/zKaUKVyn8P5LUkJa
KwlScchoIdeXwpaWx6XOguO4tPXiAijsd8Z9zzXwLm3bP27BFP6g+9ogBex3
Usx8MoLCtgqXgtg4CPJ9V1/efBKFUxqD40XB/Vah38LSKNxlV1SkAt76eN97
/kwKn0pbbLcHvyuMbq7Pp3CYpsTEffCWmh997MUUbug+wpYI7oouS5Uqo7Cm
cOT2ZrD91JptUnQK3ymvQOP/nKz6nQ1TmGbUbcj5H0GedNqC3tRSWP6hrIca
WIBu1sL7msKb2GsbUsEBdkjobhOFjZN+fGOAC87/DEv4SOFwDZ7fbWALouVR
ZjOFuW4ai/JyEuSSuuVW9zYKa2+4s0sK/HFWLmd/O4U9i5MPHvj3+O2M0h9f
KTwzNnbFFcx7WurQXBeFdz0Q8H4IDrN2aTD7RmEH6X3RmWCfoumm7O8Uznhp
nkWBG4T0DXt6KNx73pfRCR5yJwxZ+ygsxpL1cRY8kSnUxNlPYdNn73+s4SLI
x8FNb+bAUft/L2wHh/0dQR9+ULipVXj1ITCjhU8xfADywZWUsARzzX1NUB2k
8KG1Niq3wMtqMwGNYO/8B7qR4OfeLGOHhyhcrVdokQfOSHv2Ngs8N9RyrQ7c
5e1EzICV/P/694DFZ0VmZYYpfJXYGvcXbDNzXvMQOKv2cMEGboIc2aK9Uhfc
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
C9coll1M/D+zWIzp
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1: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
82kB4CfszQKCd0h88hm99h44P9qwgPM2iV1/H/r8Gnz0Ldo2Hgf9JOz5pu/g
sF7XV5djSBzc3q3HZE0jJLaOl2yMgnoWY7FdD44cSUx7HU7i5JfHHpiCHT1S
RZODSFzRxSNWDC5bulfjD/Vdv0lLswM8rjMxHQz133LG2WoULDxJCXldIHH/
UuXdTTY0wuEvL22DK4mX6O6CkWC3zVsq/aG/sF9IVk4De+en3B6yhvMse2NW
AWZWM3FWPULijaab4ybB7m1cXA8OkFjPu4Pb5ig8v+bqSD/ob7url+Q9wJJr
GP760P9MueRNboA/m3gGTKtC/j0KjqwBp2REZ4krkvgquYNN/hiN8Drc0e8P
/bV6XcLyAlja3UYqFPp1g33thrXHaQSbwr8E7lEGpp5P7NwOzhU5vu3qNwb+
pLfHzxHc9uVss3wfA686PTfbDBb66fUzvpaBDYqP/n5wAvp73W7+nDgGJvhR
QhH4MGsol1gUA+udltahwN3ey0wXghlYR2QslMUW9svfal+/ejKw6uUAUVfw
vn3+6SPWDEzXSEUadnDfs7eznN7AwLS40K9m4BeJcjqP1zKw1A+XKFfwcICx
VwMvA2+8p/zuIThTMqVzYKker5utPcVqD/PYCOFIG6jHHMXfbnSA/a2FBiQT
6zE7f5PKKDg2tX6rYlw9Zj39qofVgUZEOUtFS4fX41UilyU1wYXp8WHvPerx
gjdH4SPwq5lnOU6m9XhUXaH/7EnYp+a0ts+v1OG2ogvy7E5Q71UlcSxH6nDe
oRHhjWCR7V/5vE3q8L0xxxU1sHTAhvkeVIftpaw6ncFzzJdjXOXr8NQN3UAG
OGV7/kLLci1e58z1NtQZ6keuUjLkSS22E3riw3Ia8n91s97fLzV416sNTuJg
769UuVNPDZbde890B1j12zXxuqYaPBUYLe0IVkAvqw++rsGhIxdaa8HMureT
nwXU4MwaXclgFxoRuqapUk6oBk+69zQwuUI/kje4xaFSjUdemZauB6tRHIMq
UtX46zgjSxXMLx9naSJYjXvPFkS7gF3DdvBe+4px9elb+ynw1ABzb/xJjOPs
9lEpZ2nEzJ/qwiyrKrztIO7ROw/nH+9lUUWvwOe2PfvufwHmtz3fDKsPF+P9
ufkSd8F+VIZKpGIxVlSpPvwSvLD/eIISezEeV3tfNQBexxz9Qaq0CLvpct/T
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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0]], 
        LineBox[CompressedData["
1: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
ECxRYlTtc55CHqO1+0+A9Yxa3Ss9KfQfua2Klw==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {10., 0}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{10, 10 + Rational[4, 21] Pi}, {-0.17716060188771346`, 
        0.25878610245994416`}}, {{
        10, 10.59839860068377}, {-0.17716060188771346`, 
        0.25878610245994416`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"10 \[Delta]TRIO\"", "\"10 \[Delta]NAD\"", "\"\[Delta]ADP\"", 
       "\"\[Delta]BPG\"", "\"\[Delta]P3G\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1/3, 1/3, 1/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.769082402396652*^9, 3.769086383202409*^9, 
  3.769087837156695*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
82kB4CfszQKCd0h88hm99h44P9qwgPM2iV1/H/r8Gnz0Ldo2Hgf9JOz5pu/g
sF7XV5djSBzc3q3HZE0jJLaOl2yMgnoWY7FdD44cSUx7HU7i5JfHHpiCHT1S
RZODSFzRxSNWDC5bulfjD/Vdv0lLswM8rjMxHQz133LG2WoULDxJCXldIHH/
UuXdTTY0wuEvL22DK4mX6O6CkWC3zVsq/aG/sF9IVk4De+en3B6yhvMse2NW
AWZWM3FWPULijaab4ybB7m1cXA8OkFjPu4Pb5ig8v+bqSD/ob7url+Q9wJJr
GP760P9MueRNboA/m3gGTKtC/j0KjqwBp2REZ4krkvgquYNN/hiN8Drc0e8P
/bV6XcLyAlja3UYqFPp1g33thrXHaQSbwr8E7lEGpp5P7NwOzhU5vu3qNwb+
pLfHzxHc9uVss3wfA686PTfbDBb66fUzvpaBDYqP/n5wAvp73W7+nDgGJvhR
QhH4MGsol1gUA+udltahwN3ey0wXghlYR2QslMUW9svfal+/ejKw6uUAUVfw
vn3+6SPWDEzXSEUadnDfs7eznN7AwLS40K9m4BeJcjqP1zKw1A+XKFfwcICx
VwMvA2+8p/zuIThTMqVzYKker5utPcVqD/PYCOFIG6jHHMXfbnSA/a2FBiQT
6zE7f5PKKDg2tX6rYlw9Zj39qofVgUZEOUtFS4fX41UilyU1wYXp8WHvPerx
gjdH4SPwq5lnOU6m9XhUXaH/7EnYp+a0ts+v1OG2ogvy7E5Q71UlcSxH6nDe
oRHhjWCR7V/5vE3q8L0xxxU1sHTAhvkeVIftpaw6ncFzzJdjXOXr8NQN3UAG
OGV7/kLLci1e58z1NtQZ6keuUjLkSS22E3riw3Ia8n91s97fLzV416sNTuJg
769UuVNPDZbde890B1j12zXxuqYaPBUYLe0IVkAvqw++rsGhIxdaa8HMureT
nwXU4MwaXclgFxoRuqapUk6oBk+69zQwuUI/kje4xaFSjUdemZauB6tRHIMq
UtX46zgjSxXMLx9naSJYjXvPFkS7gF3DdvBe+4px9elb+ynw1ABzb/xJjOPs
9lEpZ2nEzJ/qwiyrKrztIO7ROw/nH+9lUUWvwOe2PfvufwHmtz3fDKsPF+P9
ufkSd8F+VIZKpGIxVlSpPvwSvLD/eIISezEeV3tfNQBexxz9Qaq0CLvpct/T
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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        LineBox[CompressedData["
1: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
ECxRYlTtc55CHqO1+0+A9Yxa3Ss9KfQfua2Klw==
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0]], 
        LineBox[CompressedData["
1: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
wc/1w1HAWK31YTCzPFOp1zEM/Q9SrSwJ
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {10., 0}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{10, 10 + Rational[4, 21] Pi}, {-0.17716060188771346`, 
        0.25878610245994416`}}, {{
        10, 10.59839860068377}, {-0.17716060188771346`, 
        0.25878610245994416`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Delta]BPG\"", "\"\[Delta]P3G\"", "\"\[Delta]P2G\"", 
       "\"\[Delta]PEP\"", "\"5 \[Delta]PYR\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1/3, 1/3, 1/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.769082402396652*^9, 3.769086383202409*^9, 
  3.769087837438183*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        LineBox[CompressedData["
1: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
wc/1w1HAWK31YTCzPFOp1zEM/Q9SrSwJ
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1: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
fzXKyDQ=
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1:eJwV2nc4Vl8cAHC7kkik0DCukcrMiDg3KlKJElJGWYmMopKRVUYZZRXJ3ut6
35uVHLRUGigyG0bKiFJk/r6/f3g+z31e997zXed4XvHT7kcc2FhYWArhx/+/
fw+dgZ8EGZRoY7+nlYHWf47lXQ++46a/1aCLgXQ6qzYognXO54trfmWgyFfL
d9qCxaevXRqeZCAJKt+zHmyzNavx3GomMvYZ/hrISpBIqypawJCJLp5fPXkH
bPPSGf01ZqJ7LhpLFNiQ/UXKM3MmGrYKF/0Cblhc1FB0YKKrurKmu9kI0u7t
AQXpq0xUuvLMU1Z2gqxLSWMmljHRe47YNmGwKIOsMX7ARLMLlV+UwD5ySSwz
NUy0d2LZ4inwqvq1qrzPmKjnfZ5aIzh0RiXZopuJ2N683dMFnkuynPP9zESy
z6eP/AJ7JN09d3OQibyq9d0lOAjSSXWNm9dPJlp5/1teMHjgYYGeLRuNFJP4
KpLB895+iSNcNDKLVX/CAF8qrWmzW0mjzOCwz1/Bi2HzCyKCNNJ0khHW4yTI
YRu5nCyCRra2h2VOgNdGj/UlyNLo+vFLqhfAN4UkBry20ajlwHOTLPAR4vTu
fyo0OqPoFMnORZCnK1q7RHRplPX65v2NYOFBNumavTTqO8tgqINzA8WqdffT
6FjOQpcL+OnN8CI+YxrF6kr+vAb+JviB0/QojZo/GbCng/VKw1ODzGikKxK/
9T14p94W3zsnaeRfWY3Gwclm62uDbGhUZfrp6PJlEP/C84qmp2mkECPntwv8
dPe5AtqJRhs4GpqzwYa+SYl2njQyzxj6XAc26V7YlniBRrd1eP58BPN1dXwt
96bRCh/zjauWE2SZRXNmtg+N9gj5K8mAzWtV8n19aRTIzNy7G/zGP+aplj+N
/o6NnfMGH7sfoH8pkEZKNwSCY8DdCBf9CqKRq+zOxAJw82MjGfMQGuU/tS58
DLZ/xV6THUqj/tOhdb3g7GnarvsajTaxFLZOg/u+axBz12lkmfp2iH8FQarp
Oc6xh9MoQfPP7FZwS7bA9z/gdx0ifPvAfWXrxt5F0GilNylpC07i3L8sIZJG
+9Y4ql8BC+kHqOveoFFw2Y0D8eCMtdH+H8GPDpbblIL3rjncaX6TRjPf2y80
gff3JRnWg3eEzYd9BfeIoBb+KBq5ExL35sGPejNdD4ILG/QpIW6C/PAiZ4MH
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
Wyb/4QK0yXHFZdYogsyLOmNzw6MAjaUwb6uCWbKM2lVgv39j2fKm1P9d4mBq
ql6InvdRym7RBLljynlnsWYRQlFsy/liIf53x0cCt5UgnpFRSxlw+8tD87kG
JajLoKMEgW/0FdQy7EvQRY7iox5gofe9j6/cK0GlvsfSWsDusp1bXnCXog1n
89XibxFkHU9/x+6vpWh2n5GDcBzMpwfxg1+0KdSUrVGlBI4lFzcrGlIokU1y
pSFYQrxRwd2MQsp109QV8IpEOAy4UchZNWO+G1yrOv8v7z6FPkpOxd2Ph/1C
5PO6yDkKPWBJbpRMJEhuYfEQtYJydNl1V4oWmE3uzhtjZjna9bHvwlGwjnXf
N8tH5ehJmaRUCPg9u7SZTks5em9dEvYVzCv4+As5U45+19YfzEiCfmIixJTT
Y6AKWTupanD4sqygXQcZ6Eo85+I7sO7VCy7axxiIzdWwjOUOrN9BDhceJwZa
I/qe3xZ8NHpwdV8EAyn5fGvfdBfyRTu/TL+ZgaYGIsrUwKfYHjbue89AVcbb
wo3AJeNZx3f0MBAp67kzALz2w4axrhEGMu6YTekFT7kkZJtyM5G7Ku+pe8kw
P1bo+P7WYyLlDGonDd5KenS0GzLRX56ja5rBNHu1er4JEwUMJD2eA2u//Tsk
aMNE0XHi0idSCNK/ZUlxrQ8TlUzuGBG+R5DWkbacRQVMdJ31wwsV8IrOnEPf
ypjIlt87/xB4l/WykVUVTLRG6YFDEDh1Rx63SCMTXfZQ/TwMvqkmQGzvZCKT
wA91bKkEec3y94mHfUwkF+udugE8tIyFVhlgot6yB5bGYFpWpvDrOBPp/lT9
UAneme3wR4OdRqJLH5gt4Mtqdt7rltNoivfi7RFw2rTX5088NMqTrzi8+T78
vcAbJ+WFaMTjpvbyOvhSV4VngwyNBv3b89PBCylPq8e30qgu6mJYDTjy3MHn
nIo08iyp2DMOTvD8Kj6pTqP2UTV8LA3iYcJvU7uPRmXz7anu4KVvDSfVDWkU
znPJLwLMPiG3mHKIRlrbKnc+AqvTZiISpjQS3GW+vgM8abYxSs+cRuMHpv9O
gIO+/4w3sqRRuos6TaQT5GiOiKW4LY2u+Hbc1gEb0Vlrvp+m0dEblzwtwK+u
JJslO9CIq6hS/iZ4ekb5UvVZGrn8UC/4DQ5Qre34foFGe2Y7wlZlEOTqIJv8
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
8wbp/7+P+h8okNif
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {10., 0}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotRange -> 
     NCache[{{10, 10 + Rational[4, 21] Pi}, {-0.06651875041961268, 
        0.08028393315194098}}, {{
        10, 10.59839860068377}, {-0.06651875041961268, 0.08028393315194098}}],
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Delta]ACE\"", "\"5 \[Delta]PYR\"", "\"5 \[Delta]NAD\"", 
       "\"\[Delta]ATP\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 15, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1/3, 1/3, 1/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.769082402396652*^9, 3.769086383202409*^9, 
  3.769087837981081*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Compute", " ", "the", " ", "phase", " ", "shift", " ", "at", " ", 
    "different", " ", "frequencies"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"w0", "=", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"0.1", " ", 
        RowBox[{"1.5", "^", "#1"}]}], " ", "&"}], ",", "runN"}], "]"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"t0", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w1", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.2", ",", "0.3", ",", "0.4", ",", "0.6", ",", "0.8", ",", "1.2", ",", 
       "1.6", ",", "2.5", ",", "3.2", ",", "4.5", ",", "6.4", ",", "8", ",", 
       "10", ",", "13", ",", "15", ",", "17", ",", "18", ",", "20", ",", "22",
        ",", "23", ",", "25", ",", "27", ",", "29", ",", "32", ",", "35", ",",
        "37", ",", "42", ",", "48", ",", "55", ",", "63", ",", "82", ",", 
       "106", ",", "138", ",", "179", ",", "233", ",", "303", ",", "394", ",",
        "512", ",", "665", ",", "865", ",", "1125", ",", "1462", ",", "1900", 
       ",", "3000", ",", "4000", ",", "5000", ",", "6000", ",", "8000", ",", 
       "10000", ",", "15000", ",", "20000", ",", "30000", ",", "50000", ",", 
       "100000"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"w0", "=", 
      RowBox[{"w1", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "runN"}], "]"}], "]"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w0", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.2`", ",", "0.7`", ",", "1.2`", ",", "1.7`", ",", "2.2`", ",", "2.7`",
        ",", "3.2`", ",", "3.7`", ",", "4.2`", ",", "4.7`", ",", "5.2`", ",", 
       "5.7`", ",", "6.2`", ",", "6.7`", ",", "7.2`", ",", "7.7`", ",", 
       "8.2`", ",", "8.7`", ",", "9.2`", ",", "9.7`", ",", "10.2`", ",", 
       "10.7`", ",", "11.2`", ",", "11.7`", ",", "12.2`", ",", "12.7`", ",", 
       "13.2`", ",", "13.7`", ",", "14.2`", ",", "14.7`", ",", "15.2`", ",", 
       "15.7`", ",", "16.2`", ",", "16.7`", ",", "17.2`", ",", "17.7`", ",", 
       "18.2`", ",", "18.7`", ",", "19.2`", ",", "19.7`", ",", "20.2`", ",", 
       "20.7`", ",", "21.2`", ",", "21.7`", ",", "22.2`", ",", "22.7`", ",", 
       "23.2`", ",", "23.7`", ",", "24.2`", ",", "24.7`", ",", "25.2`", ",", 
       "25.7`", ",", "26.2`", ",", "26.7`", ",", "27.2`", ",", "27.7`", ",", 
       "28.2`", ",", "28.7`", ",", "29.2`", ",", "29.7`", ",", "30.2`", ",", 
       "30.7`", ",", "31.2`", ",", "31.7`", ",", "32.2`", ",", "32.7`", ",", 
       "33.2`", ",", "33.7`", ",", "34.2`", ",", "34.7`", ",", "35.2`", ",", 
       "35.7`", ",", "36.2`", ",", "36.7`", ",", "37.2`", ",", "37.7`", ",", 
       "38.2`", ",", "38.7`", ",", "39.2`", ",", "39.7`"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NSpecies", "=", "16"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"runN", "=", 
     RowBox[{"Length", "[", "w0", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"0", " ", "x"}], "+", 
        RowBox[{"0", "y"}], "+", 
        RowBox[{"0", "z"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "runN"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "NSpecies"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"output", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"0", " ", "x"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "NSpecies"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", "runN"}], ",", " ", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"maxTime", "=", 
        RowBox[{"t0", "+", 
         RowBox[{"10", " ", 
          RowBox[{"Pi", "/", 
           RowBox[{"w0", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"hill", "=", "50"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ace", "[", "t_", "]"}], ":=", 
        RowBox[{"aceAmp0", "*", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"0.02", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"w0", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", "t"}], "]"}]}]}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"out1", "=", 
        RowBox[{"glycolysisACE", "[", 
         RowBox[{"ace", ",", "maxTime", ",", "glco0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"nadh", "[", "t", "]"}], "-", "nadh1"}], ")"}], ",", 
            "  ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"atp", "[", "t", "]"}], "-", "atp1"}], ")"}], ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ace", "[", "t", "]"}], "-", "ace1"}], ")"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "5", ",", 
            RowBox[{"5", "+", 
             RowBox[{"10", "/", "w0"}]}]}], "}"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<NADH\>\"", ",", "\"\<ATP\>\"", ",", "\"\<ACE\>\""}], 
            "}"}]}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "amp", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "atp", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "bpg", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "f16p", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "f6p", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "6", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "g3p", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "7", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "g6p", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "8", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "glci", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "9", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "nadh", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "10", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "p2g", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "11", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "p3g", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "12", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "pep", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "13", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "pyr", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "14", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "trio", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "15", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "adp", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"output", "[", 
         RowBox[{"[", "16", "]"}], "]"}], "=", 
        RowBox[{"detectPhaseShift2", "[", 
         RowBox[{"ace", ",", "nad", ",", "t0", ",", 
          RowBox[{"w0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "<", 
          RowBox[{"NSpecies", "+", "1"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], "=", 
           RowBox[{"output", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "2"}], "]"}], "]"}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"output", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "4"}], "]"}], "]"}], "/", 
            RowBox[{"output", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "3"}], "]"}], "]"}]}]}], ";", "   ", 
          RowBox[{"(*", 
           RowBox[{"response", " ", "amplitude"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", "3"}], "]"}], "]"}], "=", 
           RowBox[{"output", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "7"}], "]"}], "]"}]}]}]}], "]"}]}]}], "]"}], 
    ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"phase", " ", "shift"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.769082565094455*^9, 3.769082576125135*^9}, {
  3.7690879386491756`*^9, 3.7690879394381437`*^9}, {3.769088311607766*^9, 
  3.769088333980978*^9}, {3.769088466563463*^9, 3.769088488542348*^9}, {
  3.7690886033704348`*^9, 3.7690886395736723`*^9}, {3.7690888065108347`*^9, 
  3.769088807338516*^9}, {3.7690891391832333`*^9, 3.769089150728601*^9}, {
  3.7690892027106047`*^9, 3.7690892080280037`*^9}, {3.769089330456109*^9, 
  3.7690893539624767`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "%%%%%%%%%%%%%%%%%%%%", " ", "PLOT", " ", "FIGURES", " ", "for", " ", 
    "phase", " ", "shift", " ", "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ty", "=", "3"}], ";", 
    RowBox[{"(*", 
     RowBox[{"phase", " ", "shift"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"bg", "=", "1"}], ";", 
    RowBox[{"ed", "=", 
     RowBox[{"Length", "[", "w0", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "1", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "2", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "3", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "4", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "5", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "6", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "7", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "8", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "9", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "10", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "11", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "12", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "13", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "14", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "15", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"w0", "[", 
           RowBox[{"[", 
            RowBox[{"bg", ";;", "ed"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"bg", ";;", "ed"}], ",", "16", ",", "ty"}], "]"}], 
           "]"}]}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Omega]\>\"", ",", 
        "\"\<\[CapitalDelta]\[Phi]: reference:ACE\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<AMP\>\"", ",", "\"\<ATP\>\"", ",", "\"\<BPG\>\"", ",", 
        "\"\<F16P\>\"", ",", "\"\<F6P\>\"", ",", "\"\<G3P\>\"", ",", 
        "\"\<G6P\>\"", ",", "\"\<GLCi\>\"", ",", "\"\<NADH\>\"", ",", 
        "\"\<P2G\>\"", ",", "\"\<P3G\>\"", ",", "\"\<PEP\>\"", ",", 
        "\"\<PYR\>\"", ",", "\"\<TRIO\>\"", ",", "\"\<ADP\>\"", ",", 
        "\"\<NAD\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Thick", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "8", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "7", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "5", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "4", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "14", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "40"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Lighter", "[", "Black", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Orange", ",", 
        RowBox[{"Darker", "[", "Red", "]"}], ",", "Cyan", ",", "Brown", ",", 
        "Red"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<GLCi\>\"", ",", "\"\<G6P\>\"", ",", "\"\<F6P\>\"", ",", 
          "\"\<ATP\>\"", ",", "\"\<F16P\>\"", ",", "\"\<TRIO\>\""}], "}"}], 
        ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "7"}], ",", 
        RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "14", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "16", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "9", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "40"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<TRIO\>\"", ",", "\"\<NAD\>\"", ",", "\"\<NADH\>\"", ",", 
          "\"\<ATP\>\"", ",", "\"\<BPG\>\""}], "}"}], ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "7"}], ",", 
        RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Lighter", "[", "Black", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Orange", ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "11", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "10", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "12", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "13", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "40"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<BPG\>\"", ",", "\"\<P3G\>\"", ",", "\"\<P2G\>\"", ",", 
          "\"\<PEP\>\"", ",", "\"\<PYR\>\""}], "}"}], ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "7"}], ",", 
        RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Lighter", "[", "Black", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Orange", ",", 
        RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"result", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1", ",", "ty"}], "]"}], "]"}], ",", 
             RowBox[{"2", " ", "Pi"}]}], "]"}], "-", "Pi"}]}], "}"}], "]"}], 
       ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"result", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2", ",", "ty"}], "]"}], "]"}], "+", 
              "Pi"}], ",", 
             RowBox[{"2", "Pi"}]}], "]"}], "-", "Pi"}]}], "}"}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"result", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "15", ",", "ty"}], "]"}], "]"}], ",", 
             RowBox[{"2", " ", "Pi"}]}], "]"}], "-", "Pi"}]}], "}"}], "]"}], 
       ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"result", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "8", ",", "ty"}], "]"}], "]"}], ",", 
             RowBox[{"2", " ", "Pi"}]}], "]"}], "-", "Pi"}]}], "}"}], "]"}], 
       ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"result", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3", ",", "ty"}], "]"}], "]"}], "+", 
              "Pi"}], ",", 
             RowBox[{"2", " ", "Pi"}]}], "]"}], "-", "Pi"}]}], "}"}], "]"}], 
       ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"result", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "12", ",", "ty"}], "]"}], "]"}], "+", 
              "Pi"}], ",", 
             RowBox[{"2", " ", "Pi"}]}], "]"}], "-", "Pi"}]}], "}"}], "]"}]}],
       "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "40"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\[Pi]+AMP\>\"", ",", "\"\<ATP\>\"", ",", "\"\<\[Pi]+ADP\>\"", 
          ",", "\"\<\[Pi]+GLCi\>\"", ",", "\"\<BPG\>\"", ",", "\"\<PEP\>\""}],
          "}"}], ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "7"}], ",", 
        RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Lighter", "[", "Black", "]"}], ",", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Orange", ",", 
        RowBox[{"Darker", "[", "Red", "]"}], ",", "Cyan"}], "}"}]}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"w0", ",", 
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "16", ",", "ty"}], "]"}], "]"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"w0", ",", 
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "3", ",", "ty"}], "]"}], "]"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"w0", ",", 
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2", ",", "ty"}], "]"}], "]"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"w0", ",", 
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "13", ",", "ty"}], "]"}], "]"}]}], "}"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<NAD\>\"", ",", "\"\<BPG\>\"", ",", "\"\<ATP\>\"", ",", 
         "\"\<PYR\>\""}], "}"}]}], ",", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7690893612918797`*^9, 3.769089366585284*^9}, {
  3.769089469734659*^9, 3.7690894705872602`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw103tMU3cYxvG2QBFvGII6kChgZUDBthSxXM/TFkdMmuBYNlYaoaJgEJEl
OGdijA7ciESiwUssBF0sDjfcYO0gQpZYQFFS5DY3QubAyxAkVmgBL9TRDfp7
36Q5+eSb54+Tk4bkFmfkCXg83q7/f4vPasPidXOdmTZLi7enJX/pnnOFVfc8
v63nWeRLN8OJK7vWV5WTnVzdX5qSMhvP4t7zkbGwqbHvEJ/ZC7tnpcUaG9kH
RR/97T2aI2BehbH2C1fi7wgsD3oWbw0Wqr9RWgM8mP1wfvmc05FL9oc+77NP
v/qOvA61R+yViQ/JHyA0bm/VCZ4ncyB6x4+19onIQbhocE5eTyVvhCig22zL
pvcNRuw/a0NaDpNDoK3YD1c5ORRtlzt2B58nb4be9/ga/1qyCLKEnAadibwF
gf82lDV1kcPQs8M14Romf4jWuXu/NL0kh0O66oBRwvNijsD6vLZJ8zpyJDQ7
o7xWyshivB9M/dWVTo6C+GPjEdOX5GiIV07x9fXkrXgkuFGT84wsQd8lxNfF
CNn3lGLfalO94SqzWYrM0a/ThsXerMvAN22w5zqYzTJMHWjQ6CaWsR6DM7Zl
4Qd7vOHuMWjWV9YohEK35XKs0ARuKZ33YF0OpzQv2DHAZz0WbeljC5tLXJy7
x8J6uDFJdNfptnwbmowRGsnjt6xvw/cj3UOGjtesxyEm9HJahXKO9TiUxvYX
FEXPsr4dV3Uvas7tm2F9O9o1T63RPQ7WFZhVVUi8dMxmBbpV76t7+dTjUXHp
9dTnbXbW41EQ1W+qLmeWJ2C52XVSkkk9AY0//Hx0j4J6IpIn7UdDg6gnwuPm
ydX3PagnwVJ41jrzZpr1JKQZ63ZljTHLk7HhUItf+Sj1ZLwU+ZzWDVFPQYHg
eWdpP/UU+Pa/KNk/QJ3Dn347x95aqXMYnBiczu+b5pb+jwGASnYi6Fkvsxao
bAg0RgwwG4Ccm/PKx38wDwPZqUOR/CHaK/GFZ+e15hHaK2G6JRHnP6G9Ej82
X2zVjtNeCUXmT+E3XtFehduptdoyB+1VOPuwY/jWPO1VONWpSfmEb2d7FYoe
Jb2zCJkD1Ci8YBXpfZm1avw+XjwSuZbZoIbwqd7vtyDaq5GY3ZilDrNz/wGf
/DYQ
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw903tMU2ccxvGikQBe4pwoIja2KBOoXGwpN8t52uqmwThdMMhgikVl1kjx
GrVFu3RmCAWcRJNueIlNILgVXatuU8QlBUUUL7EiMIUixarFGySCY84B/b2+
ycnJJ988f5y8OQKV5qsNY3g83orhZ+T9k2nkXOfWS0q3f652cRtHzxNOl1+7
yzrwmhOPnn6u+Nf1ZZWJb8hD3A8Vuxp/0bzmvHsf9NyqSmh59JI8DgfH7AzZ
4u4l+4OfJnQen+0hT4TUXpp+5vAzrvnmyJmMpouzUv/mnpKnoHalIcbKd5On
4nTHpr7JoifkafBNVtdos3vIQTCKfE/62VzkYGQX6IqL5jKHYHGwdMnL6m4y
H4NZdfL7i7rpe2djguXTu46+x2QBPHfmOe0WZiH828+dEh5iDkXJt6lHH+1l
ngNNusW4NpR5LgLrosydTV3kMASHllsrtMyfQW+SObWxzPPgqmnzTehxksPx
Lv+xYXcJcwQyZh4wD4YxR0LjqG6XZ3WSRdho47VbJR3k+ai4PfbLFstDchRC
yhov33S0k6MR1iAo6c1upfuMQfAkxd2lHxxe22Iw1r8hu8N8h3osCi51hu93
11OPxT/hiwwVAWbqCxCQEvE+bIn9ircvgPHBVf0nzQ+8Fovhl+n5MXeKi7oY
8ZmDbbHWXuoSXNuqKTtT2EddgqWqUr/UuLfU43C29XhuUdA76nEYSLK0xEuG
qEuxdchQvdz2L3Up0tTiuG0N76nHQ5+q8Ms0/kc9HsLn9TkO4QfqCTj284zV
gYfJtgS8+b3AvekZ64mobNqs2jed95e3J0JTlqh9FU0WJ8Fx8Q+l7AvWk5Bb
q/KcX8V6MnZEZx14rmI9Gd8LZq6IzGN9IWR53wREbmd9IdTH6szlWtZl6JpV
c+RQAesyBFY7f7usZz0FVbqDUTCwnoIT19Lfur5jnUOjMUN14WPnMN597ui0
4T76P84A8n1enNXoyRlAkmmcNmcf2QREnjAXC7TkNmCgcKdv1R62l6O/aW33
0x1sL4dPx3175Ta2l+NSa1FmfR7by5GzRdcoVbO9Anxd8iRVLtsrcC9IXr5G
xfYKDFy4IYpYw/YKKD3n9xq/Znsl8lYHcmmr2F6JvnWm/sKVbK/E1T1dJY5l
bK8E/097s2j4vv4HQjw16w==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw90wlMk3ccxvFyeRAQQZAbV67RolIoRynH+5SyDRWFNDpG6Iai84iKTCeI
DDYlaCMuHssGryEgEUGHUQKoQzaOmCGCqINErVyiiNG2jEGaKCBuwO+/f/Lm
zSffPMn75s0rTNun+tpUIBAk/nfN3s/xs+cuV2ZVONkof85tnzsj3MnyrQMB
YWOcdO5McN8n+Q192cg8xZmJvVR/2Ixx83sTFDu9VhREj5It4H7f8faSFD15
MdKP50B2/g3ZGrodbrZql9dc173ZsxRm/v37nbteke1waGLT7p01I2R7ZO5o
rU1rfUlejlKZ9kHcu2GyE86JXD0aEphdYPDRTWxre0F2Q8mS6vLhBGYPjOrb
wY+x9/0Ip0RysUMVsxCWljkFtRnMnijJtxi+sJfZC+pcHxf1YWZvFFereIEX
sw96foP08u0hsi+GfjR1/DaL+WOEvrlu6Ahh9sMi27W77YzPyCL0+n8+uKua
WYxrV0fV2ZuY/WFiUZIw3j9IXonkTvuu3MEB8ioEyXLP3tD0k1eja6z15pGR
XnIAML5g5nS9lr6nBIqoZ6tbLj2ad50ENh0D7zSd3dQDkdtk8fSlZyf1QDS9
Xeo3/msL9SD43rDd8lV3W/N8D8IBZcXGjLzH85ZKoUpdUJN34AV1KX6+x9uZ
tuqoB+NMXb7147//oR6MrSYeNsePGqmHoPJh3/oTiW+ph+DiiQp9U/Ik9VCI
bx2L5+9MUQ/FulPdvob2aephyOYOSWby3lMPw8HoeJ3GfIa6DFeCsDwjjVwn
w9SHxsqDl1gPh/WqDVYOfayHQ+u636CfZF2O8puS0sOOH6jLIeA3ZBYKydII
dH5SFsmLWI/AQwfNeN9K1iPhGl9m3eDFeiTSN2cszP9/H4Xfgw2lR21Zj8IR
522xleasR0M0urj+ByN7vmhEZDoW6wbY83EwDqeoq+6zzsHe6k/NUP1M89z/
6AzwLY+SLpaRk4HsX4pkbcfIPFBQke5uuYesBUZSm77ZtZHtFehLaZgOCGV7
BXrCvLescWd7BapOP5GkCthegWVJOT/dev6e9jEoVLV4x7WTk2PgKvwr0OUy
mY9Brz5resVJsjYGn8lLY5/uY3slerTC8KxEtleiSOkrdgtmeyWMtU7rv3Bg
eyU+XfEdn2ecbv4XaotMDg==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw902tMU3ccxvFqW4EwEVtBRLbgNsulqC2FUopwHtpBhFg1ZAj1xbK4cplb
uGQyYdpJxxbjC40jk9niNjaduqEjywkU5LIUWBwIRSNBiQyGZSidG2SyKVjc
gP7+/pOTk0++eU5ycnI27S/OylspEAj2LF5Ld5t16fRw2fEGY5nTF/nLZ5IT
yfc2VQX5QrV8HnEFu9T63QU+5Kfcpwslo3/2r4J3vwIbswUVgzuZxSgs8P0o
YUJM9sNclzKxqJp5NUrPdAS99roY/X1LJxC29WlNLhmzBDUN5fUSH+Z16NpT
IvH5W0QOxtkjZ6c7fmcOAWSa+e/HmEPRsbthdfsocxicnRrLmnHmlzA2dP7f
3MW9933D8aFJWhv3B/Mm9GZUCKv+Yn4ZzyRfzVY+9yv40hkQHTTN/Cqq264U
uheYN0N59fzdz/3FZBl6yjId84HMESjPyrbUS5gj8aC7/eY3z3sUZmZ+fJrv
xxyN0v9cUruHPV8OV5TwsI+bOQZyQ7XWf4B5C3J+3qHff5F5K04cuG1PO8i8
Db2Pi0rSY0T0PRWINandAdeEXvMKrK86GvWQI6uUaJZqLkyYV1JXYqQ8jpeX
rqAeC8cHTyz7/AXUY3HqcmVRxUkP5+0qzL5/cGjqyBOveRVE7huJRxWz1ONg
bqtySIUz1ONgzWkNjmx4QD0ehg0T0uKpe9Tjoc44MLrV9Ct1NZrT1tzoz79N
XY2JM6IBRdgt6gnQnujrk80PUE9Ab81p96Gk69Q18Kzt/Xb46jXqGozvPdds
d3dTT0T0zUvrGho7qScixWOwhL7ooK6Fo2tjZV3wT9S1MNU+nurWtVNPQoDg
F8NbGa3Uk/DdIdGjOWcL9e3o/mTfMa2QzG9HjFksu15np56M3LCOVXwemU9G
q6955y5bE/UU8HM7TO8pyXwKzIEXOgcVrHPw2PyFZTWN1DkkKf9RuR42csv/
4wag7+Rw+JtfkI3A/RfesA21ka2LTh58Wy5o8noYqDs89uyzHrZPhfP4byML
BdSNqYictMrUBrI1FbK7IbmhF9k+Fe/atsREh9hpr4PrzvHxO2vJRh0yP64v
LP6BbNUhPfwenzVGHtZBbZuarN3WTHs9tPedOePnyEY9Tn2dGXFshGzVI+/0
tN87FS2018PiGkyPuNXC/Q97ehnU
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw90wtMU2cYxnFglaWyYjO1KjQo1wqsQHsoFws9T8GpYxINXhHRqAhMNApG
XJjRuRlFw0XsGKvOKUUpiQwVREwMs4kgSoqoGLAyVwTWDSUjQnWb4jqh7+eb
nJz88s+bfF9Oju/mnSlb3VxcXJa/eybeJ/UTc4evacr7IqdzlM+cHBuf5Hg9
kJtr57nJGePbVacONgnHyG/45OG08sFtL3jnvissfLr6bvMIeQq6Vt9Y+9Y+
TBaic/Szy0u+fkYWwXihtte87k++wzwxYhywuRfFHbCRP0b6yfJ+nXWQPAP7
367/Up0/QJbA+GRh/WBsP3k23CXbz3j6PiV7oV2n3d0d2keWQpFUd/m5/jey
D7zy/3BXiZ/Qfechvv9KWO3VXrIvOEn+YmHhY7IfumbOGvq13UL2h0dLmyFP
zhwA5PjkXWrqIQfijCXtqDq6mxyEHRGNHtV9D8kyNNUskWdXd5Hnw8P8Ue7y
HQ/IwbhUFOC2Meg+OQTjsRkXq453kkMxZDu2trbCTP4EH1b2OGTqO2Q5Gv/q
kIWpW8lh0HQbWjIvmsjhgPTuTtuGq/Q9I1DK/9T8+55qpxsikLWnwixbU3/D
2RVIjzm7TFPc6nSDAtv3xh/SneqirsSml5XPwz+1Ulfie+mGfY9GbNQ5GL1e
7zUuHaHOoWwWf+S4yE49Ev4B47f6V/xDPRKHv0tZPCAZp67CvV0rM9ViB3UV
Om8t+vbeWReTs0dhlY/sq3+3uTrdEIWQ03Nb1v9H5qKRVHPb+2GOG/VoKHQv
fmkzkbkYiOyDRc2uH1CPgT0wSFISReZi8fnSbG/RZtZj4Z1RcHD0G9YXoDf/
aUGpgfUFsIwpk69fY10ND0edqaODdTWC/euKk/pYj8OJcr91qcOsx6H+aGOV
9Q3r8Qi+dq52nkBAPR5irziHyJPMadC4PyCrWMK6BsqevNCp3qzz+LHqmOFv
P9Z5zOhOqUgPFJgm/8c5gLD159uFIeRUwOrZMJYtJ+uBlWWLXJ+FkS3AD5xQ
1a5k+1qUpp7eNaRg+1oIpPqM65FsX4u5IeFSK7NFi5LCrC0a5jkJ0J8vM/So
2H4CdBqj/H3XJyCt4lyM4P1+AipXl7Q85th+IlpvFu6bys6TmoiRgtnJbew8
+kS4Td8tnhbB9hMx5dXGga3v7vc/PoUoNg==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw10wtMU1ccx/FWWl46qaDEKlIeijCZFm5BWh7313YEyIKAYQEUEouPGeYr
LE50uM2OZIT5WMbDtvIQDWaY+SDXidEFi8rKBtVgNA6zBDEqImUmCsxaqhv0
/E9yc/PJN/+bc+7NDS/dvX7rHJFIlPv/NXO3mGfWH/xc+aNzsu2+1m2z6xnf
I16UHzrsbeVm12u+6Yap5MIbKbOL/9T0Y529Xmr1zIvRKa+ZrKwiS8H5+bZ7
NZP9sF21T2ztI3+AUxumy1vF3lZ7/8yS4YUrf/W1JHIgHA3ph3N2kRfCWrDj
VcNJcjAasjO7Rm6TFyOg4nnGaSd5CdTCYptb4cMcAvt4sUSmJ4ei+PCoa1Op
DztvGA50TaiqD5LDYXmeHjhcR45AY8DCgSOnyZFQBLwcQgd5OcrFfxeO3yav
gOlxQVv/KDkKpQat8dJ78kpkHzCHdATS+47GV932vs3LyTGoGp5o4RPJH0Lb
KP08Lou8CupCydHREnIsYs+HxSq/JH8EPJW2Pqwnr0bFSEir6zfyGmz44mJs
2Ctf9j2V+Ot4p6Nd5IdZCkrYc54dGTvu6zEXh3kLJnoFpw/rcahv9r5/L5iZ
i0dC952x9Y+krMejK2bN0a5cCescNF//PJD57RzWOdy1c4/b6kWsq9AmCW2V
HHTznq5CrZA2lLvxrcdcAgy8Ubpn/hvWE6CICL7ZUjfFeiIie3pyP+ueZD0R
cYNGd28pM7cWV67utX2ST30tHM2ZQfn7qSehvzylwMtGPQlF3xiCfo2m56vx
Youo8H4js6DGjbzrh6aW/su6BsXVPX0XzcyCBlOTzYWBEWy/XDJsWfLBvBba
fzLEl1KXnlQ4WU9BdFGZLcjCLKTgn7OO2hJ/On8qjk3XnOisZBZSYdLEGCuG
qKfhh8tNyQadi/U0dOo7lt06wczxWPZwbMvVceo8jMV3/C2p0/zs/ygHHqTf
m+88xFwEnFv0JNHwO7MZUEb9qVSJ3R4PApoOf3e0mlmuRYZX1vj+ncxFWvx0
dk+21MJs1qK2pi4oxkbzWsyt/qXyvYPmdciLEl62y96xeR0yFFVRFfHMZh0C
XE8vTK9jHtThiu3j8PIyZrkewvcjAxHf0bwe+2Q7y5wmmtcjZ6Rx04LzNK/H
ma2vV/Zef8f/B2uoLF4=
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw103lMk3ccx/FyCG0YeABOEVkLchYdDwWltPB82mqnYphxCDEeaOcYO5yz
LJMENzc3keimSOYmEAUWRNB6jLYEE+SQeECxIBqfocDcnKhDwHEFNcQN+v19
k+bJK+98/njypDLDznUfOItEorX//6aeRYVT18ILm0rdtcIInzF9fXxH/IEe
w7FRXjF9I/xzW1pf3qNh8ivec/chnzLvf3nH3gnvJkR1ZtcMkmcgbltciqy4
nyyBVsjRLxKekD0hDCFw0/Y+/mbb1M1CxbFh/oH6b/Ic/Hbnc+PydX+RfdDM
tUprTz4gzwW3/4jXQa6XPA9hsvfsBZ/dJ/thtGIgd3L4d7I/pAOykszTd8kB
MHLi6LKCO/S+UtwKmQySWTrJMkS5Xm++MucWORAF9cqxnJkd5CBki3Zdzsi2
kxfBUFQ/+0VkKzkYT7+zelwqv0oOwaUUv/BBUxM5FKE2W1Z1SB05DNeCRA17
Iq3kcKjO+yRXjJjIEbDNb3+n0FZGliN/b+Jqob+0weFIvP7Re8u+unPkxXjS
U3hW+UkteQkuhi/8xt/eRH4bicG/DPVabzQ4vmcUJvQL6nKsHQ6bo2B0UWae
8r5LnYNly/iGrfoe6hxO+GqqWwwPqUcjybBxh7DvKfVoXJA/Ppz0w3PqCsw6
K9NJekepK3DG60LsmQ9fUI/BVze7f85rn6Qeg3kxSem/dokaHT0W653UlakZ
zg6bYyE96q7vPuxCfSlyKwZUNZmu1JcirTRrotpjBvVlsEvU3VV5ZPMybL4Y
Njh3gPU49B/YuCclwY16HDiL6doX35IVSrzUF3SF1rGuRJtwf8VYP+vx6Fnz
6GS7nzv1eLR8HfJlMU9WqKDpNYb99D7rKgz5Zlb9+T3raoic3sgPLGFdDbGb
V8qpy6wn4KN0wdB9m/UEWFe1jXPPWE/ENn7F/gUuYuqJkFXqtvv7khU8SiLM
x8/LWech/tQ0+LFK3Dj9f5wPhB71TDMmkzcAzq+vmzankwuBkp0RfxTtIHcB
9/g3LZ172V4Dt4VyRf4httegZuZblceL2V4Dea7YdU0V22sQvHL3yxsWttci
OeNh6u1mtteiqWus9oSd7bVoLT898c89ttciIO2Zr+ox2+tQn5XavH6Y7XXY
xUmt5a/YXgdzwHhTu5OE9jpcqQ3y8PCUNP4H14gtpg==
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw103tMU3cYxvFSLJcMhiISKkKAWgEHAzlYDreep61mgqYK3nAQyQBpokC3
ELcpCmSwiZcwFyNLvUWBZvNeqAYizDQORDdmcHM6CGComVOBcOkQhBoU+nvf
pDn55Jvnj5OTBufo03eJRSLRpve/uecpw9zdF2qb99gndy+w5M/fc8F2+nHx
FavIws2fTcgtOFHrVE+eEaRld/K5KZHFsXfCv6oPCwYKnJgliJ+K+E0zQHZH
ojbUHLJezOwJz2trDl7/SWz5o3PuFqKnx3+dz2uyNyQPa746xDsz+2DP4iFL
s57sC6W96nbJWbIfhsILGz9oIy9Fhnuntt9KXoa8rR2Z370lB2Iiq/3In970
vkEYVti8/5KRg9F/vavvixhyCHTh/6V28mQZHkXmCBeSycuRvnequF1LluNB
eF/f3WzyCvgNJm38XU8ORVBAtSirjByGFNejVR3fk8PhzxvriurIK2E81WTw
aCF/hOHi6oT9T8gRCLsVZW2fJkfC67zOvmWlhPlj1J8V39fmkaNQbt3w4mGD
hH3PaBhkqlhdgIvD5mjo1kX0HP+ZmVsF48t4WabelfVVWLtm7NLzUjfWY1A5
+yqta5sbHD0G2n7tM+1xF4c5DpFF4iFL5QLWOQQZ6w9fyRKzHgtFYG+x+1oR
67HgMx7wtj674Oirsf4zWdn09BuHzauR63u5Ne7pJOsKqIVWuTn7NesKXD2T
d/HxhgnW4xAYOOL5pvJ/1uMw2tsVmjlsY53H9hiN3nKA2cxDWcR3T8uox6M8
yutES+846/HY7tFwOeASM5cAoXXn5sZ91BOglPtnmD6lnojawVp5upJ6IlaE
mW4ekVNPQqHRXJcupZ6Ek567pCoX6skY35TjcWt2jPVkNJyfKVw0ycwp4Yy3
puwR6kps/cG08xCZE5Bbnnw07SV1AV9+MnrQPDgmzP8fpYDS65/De18x7wB+
LLlXUUPdAMgtPtJtI8zdQL7p169LyVIVrIolJ59N0F6FzUUdKc2TtFchlX/U
ssVOexW+vTk6UiEeZ3s1bDNVbUkS5h1qNHVVDCz1YDaoUXpB96JmEXO3GsdK
UptuLKG9Bn8nhvguDKC9BrOFfsHngmmvwecZ3/zyJJT2GrSF8NWS6HHhHU+t
LfA=
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw90w1MzHEcx/GrrrmTayT0YCnXJSVxdz0//D/XZa0MLSs7Iav14KkMOZs1
aR5unJAN11Ie1i0ibT2huG6JldAW1XlYFJUe1pAmd6K47/+3/fffa+//9/+4
v1tyVlyqJYfDiZ3eZvaFmpnVwhxTdS29asNH2r/Vz3RX6bKt+HxI/q3vzJmq
imGeNdnI1C++lhhmwcf/eQs8ah/qVUzxzLZGX+lF11wTmY91vxqCThvJAtQV
1QcHTvt528yaC5GzbW4CazukRIecr2ZtjwPMzUKpibwQt2KaGvWsHdCV8603
/DfZCRt2JNtqWS/GURt3xRvWLijpPtveOe3/z+uK12rd4HHWbkjPqik6YSIv
RcGE+nKQkSyED1e/JZo93h3urU+jByzp/YlwY/+mK/OsyR7w8s1/58p6GbYz
WbcKuWRPrHXRxrVYkZcjJVHvoWXP54WMvepKvgXZG80qgbhliq6/AnnG4sNn
2fvzQaVY2lQ9QV6J/EjJxLMxsi+4k/KByM888/dcBcfZp2QOr82uWoUu/UdH
54fUV+OntNSkvER9NdRumX3lSdTFkH+4P1ZmR12MXj/tufiaWeYugbEonbmT
aHaVBBf2RaVOuVGXYv6TgGGBK3UptCVcpTGeuh9SVIZgUyl1PxxZ06ASfqXu
D8uHZQPt3nR9fyQtq8jsSKD7C4C+UZvLP0g9AP5zsE90hnogxEs2lh0sph6I
9ISm8fvl1INw+dofq6ha6kEo8J5jv+cR9WCcWL+Fu66ZejCUh3flNbVSD0H2
1jrfuJfUQ9AWd/dcVAf1UFQoh73TOqmHQjh328lYA/Uw/K6JndK+pR6GRTrd
5L331MOhuD7acLGHejgcfK4L7D9SZ5Djecgmv5c6A40kecGDPvP/6Ah0d49H
v/pktgLgY1Dy4jP9r0CUMKa2sN9sA5DrMbIpc4DmZSg1+tbaDtK8DHbx5Xsr
yRoZGnvGRkO+0LwM0i9bH98mO0ZgxFnp6TFE89M2xV/KI2sikCOyTjCQDRHY
fYjj5DVM83JkcARJO8kKOf5sVueUkzVy8Op/qHrIBjlSRTohb4SHv5SYA+s=

         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw10wtMU2cYxnFADAGpODelBaOWIRdRRi+0WCjnKZ1YRDOHc4hhZhgrotkQ
whjJhCpazaYihjAoYDTiNuqQDBvnJiYgAjIQQRcKKHKpgAOqRiuXqfECfb83
OTn55Z/35Hw5OcIdqXFaJwcHh03vr5l7iWFm/uGy+hQFYaX3uV2zM8KljZaF
Zh+2cpLZsXHpDeq6038/Ib/i5jypjUueeMzZ9x0ReC9TLt5hJc/F+F7ZB23G
MbIrIvs3RV50GSXz8KbObcg//xHXdmtmFoBfkrDqu/Uj5IVQFJ7r3SUeJn+E
DUe9h66vHSIvRrt8WX2G7iGZD+f/bAsSuy1kL5y1GlzXfc68BLF+W3Ir+wfJ
S9HbUVp8TT9I510O3dj65rQoZiE2KrqHVAuZfZAlO+XEc2f+GN8mKwMcPZl9
EW8SfRgzMEBegSKvlX+UVzD7IePH+kOOucz+yHF3bonWMgdA3WFqT9rAHIjj
eSLP8GDmlagwXDKfcWEOQvFXZr/Win7yKrTx/q1M92JejWM+OxvOK/vIwdAZ
esfyvB6QP8GKJvcLbun36XuGwLNJV8Z70W23KQTaBnPznyWd1EXQCLc89v6r
g7oIIV/n2bLdG6mLUZCpqWoJqqu1dzHkraPl/Ct37JZIYL5366IHb4C6BBuN
4ktVo4+oS4Hhiur4wqfUpTg/OBycvdxGPRSazsK9cVUT1EOhf914uSZjiroM
/PDbXb+enqYuQ9Yvpt+w9X/qcojnjesCmsgmOYJ8g2tETi+ph8EiVVrnLiKb
wtBy1HzZ4sH6GhjvZrXFTLL9NWiZo5cdambPVyD67YGrXUWsK/B9TE1ZymbW
w9F+Y2pZgQfr4dg2nZ/Cb6D3lUTgQfSZ3G9S2ftHYP7J46WpQtaVOHUhMeVw
I53XpMSNzBOOV/ax80dCc/Dkp595sh6J4nODNv+aSeocAl01u920ZBOHrthY
4x6XydrZ/1EACL21gs3VE3YnAE0Py63b48kGYMrS+nqtA7kHkIpd0yp/f0H7
Kgj0+7f//AU5QYW3PtLkeGeyQQWPHzKLxdU22ldh9fOI3PoksiAK1wWWgiOL
yAnvrd1n1N98TvtRSDp4ra8jh9wThZA3Az3jMrJAjf2JX450Pn1G+2rk50wf
u1lJNqixNTX7p7rd5B414vZY+soCntW+AzPnUEM=
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw10w9Qk3Ucx3FGpocc2RFqdBpimy4NhW3g+DOezzb0pPyLHTRhYDjIvAu0
M6PrzpMSCwU18bixOBHNKBAaPh3+CVrRdd1s0IHSGBgENBhMRjQwURgF+/5+
d88997r3fZ/7/Z7nntDM3KQsXx8fn13/X3N3Q9ncMnOSwYnCnUtsXPb8GuQO
yS9v+3Klk5POLzenzdJX9vGj5Cdc7RtDe/NEo5x3XgDbFUGqwugkPw3ZAmt1
gN8I2Q91nh7tysMOcgBGyzsPGWcHuRbL3HoWgYarW9BkJwfC/3H82lVVf5GD
cOtOjn7HdwPkZWhrEQxoJvvJz+OY2Xy8fgfzCzj3ttj97S995BUotZ18LiSF
+UXMyj5Wcp4/6byr0J//UW5EI3Mo7P4LrQnFzKshGvv+rvAE80vQ5Z47klHE
LMQS60CU801mEcTRl/IWxjCvwa/mo2PNq5nXonx60VHDUmYxWmbavlnzDPPL
kNn6SrqfYl6HzGq/yCNDveT16G/+IL2AZ34FURe0r36azhwGo6D4enlzD3kD
tt5+VHnN/gd5I3T78rJ9iu7T9wxHZ+PVjdv3d3nNhyNdsvviVIaVegRypu79
mGBppx6B4336yNfWmalLkNFVapsZaaIuge6S/sbrJovJ26W4teLecM14t9e8
FFWmzjuKAjt1GYR7dZKu3gfUZbgb6uo+bRinHokJzU/Ozx+7qUciIOHUwdTP
JqlH4UzThyXbCh9Sj0JrYvu1pYH/Ut+EzKAn1b9tJ/ObkHah8eapFNblcLnk
Myo563LcjzUu3+zLejSSAzQjnhvs+dH4eVpcLEkjS2PgayioKvTQfvgYJHYE
d2SdZfuLhSAkZ98uIeux0H/tCM2+PkE9DnylcffhODIfh4p3xUJNK51XqsAe
t+MLJLPzK+DurK/tcPxDPR6pG1oXa/PIfDx6Uyz5ysWsc6gpeBQSdoXeJ88B
F5fftMjHTfP/YzBgqvndOW3922sN8Il2Z0PDe+QyoOKAJvGtYLINsAvSREH5
YzSvxIn9x8q2trloXolBU/uQOpxcpsSZSdOBieJRmleirjZ8rPThA5pXwfRD
jeudbLJGhdtJFQeXWZ00r8LU+ZP+RXvINhXeb1ivqG8foXk1LCW62LpkskaN
Lbm1ntP9wzSvxqyD7/kqh2xTY2g6SRS2YNj0HwONYQw=
         "]]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw1039Q03Ucx3GcxMQfk+HiGtOlJiUW6PwiMhh+X9vsGhK4YkXcBbdzRUea
emfplRyCeAYWaVems+aEIFTuDNCMjDkNBzcQ9VhwEQ0FaYKkBJguBpSw9+dz
973vPe55rz++3+27ZNO2V98WBAQE6B9fU/dj5qnj5N8LEl7/ytjDZ08fD28O
nmFc3zDEc9NnlHcIQ5TL9vxN9vFy04hYZhvi/fsZEFdEvVPkuUd+At/Lgw/+
K/yLHIw3h5v2JW+8S56H1xt1BVHN/Xzr1akTgh8TgnYN5t4hhyKmJMkx3+gh
SyD42N7+x/Y/yWFoPaOv7zzZR34Kspmmvob/bpPDkX7OcUG7i3khQstbclUC
ZjmGK8bcLeW99LyLcSRbIv86k3kJDCe2n/k9knkpbNWGlwaWMz+DSldtrDKO
eRlKcy6KfvCw9xeBC4WbL8/9jPlZHC67v+h9HfNz2MG3DKbPY16O3LTUlHzX
LXIkGlWJCyYPMa9AqM8p2aZhfh6/8kcfhTTdJL8AceZ39erfuslR2G2/plZ+
7iZHw9thFW+Z7CKvRHhEycv2rk76PVfhRmuW6by7w++zq7BoTv0vB2a7qCvw
0KYKF1paqCvg/Ta6pvLkJeqr0eyUlskaHXZ/X41ia++DQ+4OvzkOksrEF7sW
3qbOoa7v1NBN0yD1GHiNgrZ82zD1GPRcdgcNJP9DfQ2S7KN705/0Ul8Dl6yk
ql86Rj0WMqu3mCv0UY9F8J3dOlH+OPW1iA8rd9xQTFBfC9Glav3Ss2QuDgs+
Srk1MneSehzUA87+0VQyp4Q+NmukKo91Jard1jqnmfV4jAktBWW1rMfjXKCl
W/4T6wnI9hlLf7axnoAt9147v5+ZU2FP/RsGroZ1Fer2HtjXVMV6IiR9pbra
o6wnwpTb5rlfxPo65B2PuNa+k/V1yGx2BX6ZyTr/+P/V+9aRDazzmLWprDAp
etI+/T1KgYOCRzuPhZEzAIVOXWDwTfhtBqxzHuTldJM7gdmnDVuLrpClakRG
v9KQVk7OUOP6J1f2by5mezVWpExkffMu26vhmjnrhCaZ7TVQpIZenb+S7TXI
0YoC9SK21+Ci2PKpe2ic9hrgbnX8021kqRYy7+KtH9SQM7T4UHGqov0LslmL
ZosoomcH22uhlz0skKaN2/8HLnlVSg==
         "]]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw1039Q03Ucx/GNuYF0hCBMAYOJTkANBhsy2OD72sZxHQohdRdQJwdEIzVJ
S/AHV53ZqYlF4q3WXR0T+yVZ6To1+THqJAQcPyu2HA0BiR8bx49R2RoVft++
7773vcc97/3H9z6f7/ri8txSLw6Hk/P/s/z+UL88HcxTH7xWcbZoF/PCgxln
rrqO6M6MV5ikD2aBWfS4TtqPG8hupuD9tsTGsmsmdp+LsxHHgj/m/UjmYyjl
6ba27X3klRAaj1o2HLKQ/XC5crBYKxo2mW8vzyoEMLaEgdwxciAGrhiium5N
kINg8O2TZVU5yULkNAzHFivmyGvhV+FTsNi7QA7FdHfyfG3VH+R1uDvkEV+S
3SeHw+eRSKXN7jax3yvCBfl2re7QEnk9etPrdpfv5rSyjkTYme5n2vO55A1w
7I+MqtniRd6IsO6FoNA8HlmM1cGnM10nV5A3oV5Xdn26hk+Owo7cyCzZqwJy
NIqG96iLVd7kGMS1vv7K8bmH3oyIR6Uha0p8yFtgr8s5p9H4gPVWVMsqO6RN
3uTHIYxeyZwPfuhYfJHJGeNoBeQ41Px7frT3Ah/seUqQJNDuONC5grVRguqy
+dJPf+JRj8fbHnnz9594UY/H1V8nTS9KuNQTcHhXhuKSeYlhewIceHeq68Tf
rKVSiAX3DbHti9SlWPWdImP/0Cx1Gd58rCXelj5BXYa8j/qP1PbZqSdiTbor
yD+vn3oiUoVdJYLMVurbIHmWu5MnrGfvp3EbOjfbuO9tbaT7moQD+35eGk1q
p56EMnFiduDRHupyGHmhg07VAHU5rhc5HVfyf6GeDOfLbYz/Riv1ZPSLS9wJ
NXeop+BO+JMn9GND1FPwUvs6v3dm7dQV2Kto3vv1zDB1BW7ca63eZ7tLXQmH
Q8V3XxyhrkRsVdbze94YpZ6KJdHcn33KMeqpuPVloDxqgSxNQ/jOmzzR5/eo
p2HSVVRZkTFOncFbnsIps5NsZGAvvP2D5djv7P8YAox843uqP3iCdT5wOq1j
1vwZWQ/81Xy49EbMJGsrUNiiiyj6lhyigijm5sHGuCnaV4FXG9AY0EDWqxDt
tlrqN03Tvgoj3mvNhnPkEDVaFNeUEb4O2leDH17Y03mQrFfjskdnOPUb2apG
dlNdWNMTTtrXIOhickd0AzlfA8s/pau1/jO0r0FPAf8rUTnZqsFgtmT+uc4Z
03/Dx0X+
         "]]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw1039Q03Ucx/HBsMSgE+JINBhzNMg5BQYTHGOvfVd3JlCeHZjZdQmrKxem
aCEKcSpG2iE7JE9I4korj3OehNbOUDAYMsM2V3IOr2D+AKkmMARicyxh78/7
bve9xz3v9cf3vjdh/ofr3wnk8XjrHv9mn/V1s2dWtdy+WBxomo93525QtSXq
75pFo09CNnfjqrCkYlermNmjujfDRb9W9AT8+wDY+o8Y1/TOI8/D0ov7P7et
Zw6GvugjU9JgEDkUjnTR9tyqIFzrmb2FiPzZPYOXmMOhlS/eZ17AHAFDxHCF
/BafHAnOFPKy5hzzIvQNVZe3H2FeDNerx3TqXczP4by5akfQ28wx+DauyiBa
y6f3jUWRLjmlNpVZiMqiGLNTwLwUFaWyTPt8ZhGic/PDxK5AchzsdXyu28H8
PD5zN775lYVZjPCSq9oXf2KOR+n148LOL5kTUJC9M/5wKfMLmFwY6JvcwLwM
gmb90/1SZglMcR9rOW8AeTnibY3BDzqYpZBIandvK2NegU0jFX/tkTCvRLTx
uHbkFx59z0Rc9mWca1WSWxKhD61xty/zqfw9CfJxcWnvZq/fLUm4Lr1g3sP3
UE9GnvDrGtXoFPVk2MXflxwVPKQuQ0ejpbX20Ah1Ge7FFuis+YPUU+CamD7o
mO6jnoLtJ3xv3Wzrop6KlSdCS94LMrT5eyq8Jw92FA5c8Vsmh+yZ73rLIn6n
LoejVjE+dPom9VW4lNeti1z+J/VVKEzMinGUD1BPQ9beX+tPCW5TT8OZrfzO
sfo71NMxtNOWsuTRXerpaDC6P22TDVJfDWWX95KlfIj6amxKUPIjv7lPXYEe
3LCWWYepKyASp3Ha4H+oZ6C/3B7GRf9LPQONFz4pyHvfSV0JwbEfm3+ofkBd
ie7cSv3VnhHqmXDm9xlnakapZ+KsoTLurnSMugqvD6utlffJLSo0ZZdInV+4
2ub+j1HAgs4VJze8Mu73RiA8q3BtxbMP/a4DhFZLdYiNbAesl6MOr2uaoL0a
m52GMuOuSdqroag2BTTnTNFejYnzA3mn5f/RXg1dYULWbyHTtOdwpkFzJdtN
3sjBLM4JsNxx057DgTf+yIzt8tCeQ3GTpPia8RHtNeg++5R+W4OX9ho4bJ6p
nAMztNfgVMjuW56tPtprMKbo+KBKxGv/H/jdOng=
         "]]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw903tMU3cYxvFSS0GaEqKICvWCE4qCQjmFlko5T1uXDN2SDpSNLIHEyXBk
CAgEMiIM0BHjBka8lRGDQ0g2XKYBhOEGhzLMNsVsbBNoCGZxNOC20FLIYFy6
QX/v3qQ5+eSb54+Tk4aeyEvJEotEIvN/v7Vng2Xtvue3xm6xJftIhHfWz84v
RnNJdS0igVs/F79vImco4hx5iXcWTU4LUyLBs/dCy6r8r95TXszeeK+huOCf
SfJGPJB2ZpvfEDPLMfb2ROvpHrEw9HjtAnDzda3w0H8D8yZsVmz/rD2NHIje
8coQ92VyEKZypUc/HCRvw5XxXRcrHeRg2Ey4W7ZZwqzAtlcWdqyoyDtxMUsp
fXqE3nc3nAr5/UcZ5FAM3Gi/os0j74GzTlEZXEx+CQOvlo3Wl5L3YktYWnNH
LTkMAvyqqlvI4Yj8tl5/9iuyEsPNBSPTj8gRkLkzpvonyPsQXjRakj1H3o/9
89a+Nrk3cySEzh3BFZHkKMhur8qkZvIBuK+lWk9+QD6IpglriKuHHI0Z2fuv
DfhK2feMgbo284l/EXN7DCb7kl1LK9RVKOu66n1N8GFdhccScUP3l76sx0IW
5xgvnPGBp8dirj/moFIl9ZjjoPHfWtgXIWGdQ1R+ztl3xWLW1bBYux0XRty8
p6sxuLxwozFq2WMuDmbpd6LGI4usx6G+M7n0RfTfrMdjaaT8lzv35lmPh6S2
/0xK0xzrGiRPV1VH2lysa9ARUIO8w8ycFpnar4/+8ess61qEFj6Rp1YwcwkI
1AbsKtdRT0D29cS0N/2o6+D+YjSzeNzJug5BwZpzRoGZO4T8wHv2q63UD2FZ
FfHD8CXqifAKFVku1VBPROPHakVpCXU9Qmx2t76Iuh5+zZa2ptPUk3Art9qR
nkM9CZ9sPPHnUC51HrOLh0/Z/+88XPnlXc/znfz6/3E7cL61tXzmDHM6oE9P
WBksYbYAhd1PU6UVzGNAXeCzOz1VtDfgefyzcOdHtDdgyv94t/oy7Q3o2LDz
064G2hsQdl2XUneb9kbkFdTY5z+nvREGa5vuQSftjfjxxdyB33ppb8QF87Gb
Yw9pb8LPJ7MyfIdpb8LqT0Evv2WjvQnfaJTK87/T3oTZTbsXah1O/l9tOjPh

         "]]}, {
        Hue[0.21101966249684523`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontFamily -> "Times", 
         Thickness[Large]], 
        PointBox[CompressedData["
1:eJw10wtMEwccx3FK3HwksEpYR2VxVAbMCk44C2159Nd2YWVGx5osusCASiXG
sUw3B7IwYiZYXNhW6Uq4KqBAQ214WQRhsBXUKQyYZToVFNQYMExgCsMnnRv2
f//k0nzy7f9yj5xo+2faHd5eXl7J/x+LvxZ2cfoUvXnW7MiUg86sFzOh0Hfm
FY49KnYyL2ZOce+dPPPO2RLyM4XVZfhgIc3o9OzzMJXUWN/uOkx+CattZ6+w
P5eSl+MKj1X7SE1kH8Ru0pwr0ZmcgwOLw4fu2rLAXVrOftDyPy/UBXP2h/tp
zmDqnVKyAPWH9nT3HeUcgLbWqzZpGudVuDh7+361mPPrSG3iG7/mc14Ne5x4
ROlXSvcbhKn45DOtcs4iND9Nu5DyE+c1sM1Zro9mmMjBSD31Y8+zbVx/E7fC
9fkr/H8gh6Cms2OqbbKEHIreDHdr7gjnMPQHzVw+kfEd+S18y/Ot5EV9T16L
isyhbyI+5M4nRtfasetD+4zkdYhTaANXsofJ4ZiZLddOSbjri0D2VrdBU2Mm
r0eI395lTa+x5LcBt3B/dEolvc8N0DmKG89Jazxu2QC9y1LuKz1BPRKnl96c
25V8knoker/sWTWT1E49Cnf7azWh893UozC296Ys9bfz1BkoeH2bb+sHqDN4
UNf/9+/PL1LfiLsxmZpPXnFR34jEq48vuZ30f0aCzk32sgfOC9QlmN1X0J7v
c5Z6NKz/fmra/Osv1KOR6eh2LOg7qMfg46KGL+QFrdRjMB9UiC6Lg7oUN06L
Csy7m6lLMeqQ3NpqbKAug2BizUr/aTt1GVxZXr7GOzbqckTZHz0xraujLkdp
enjOP4NW6rFoGmeCk+y11GMhPxQ9fr+enjcTB19NhOC98WrqcYhPNMhaxGQm
Ht29o/mvmo9Tj0eXIfB4GZ/MJCC9o/rPEPYY9QRMLt1vG5KRGQWu7fDOqm2r
oq5A7o2F3VVBVZ7vUQgYlPawIlOlxx8BRbqHEUYBmQWWX1ri3tJc4fEwMP3Y
O7wgkSxU4uXRgBXvPzxK+0o0SLMH9ljJrBIHL4eKW9LJw0p0TIvm3g0jC1VI
yCmeMP91hPZV+CM4IDeti8yq0Gg78MZzI3lYBW3PiKhiJ1moRvGWsiNfabh9
NSSCyZR7Ydy+GiHz0rpxH25fjdxjB1TlTyzO/wD+Rlng
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 39.7}, {-3.131368720080986, 3.130676529123834}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"\[Omega]\"", TraditionalForm], 
       FormBox["\"\[CapitalDelta]\[Phi]: reference:ACE\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Times"}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 39.7}, {-3.131368720080986, 3.130676529123834}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"AMP\"", "\"ATP\"", "\"BPG\"", "\"F16P\"", "\"F6P\"", "\"G3P\"", 
       "\"G6P\"", "\"GLCi\"", "\"NADH\"", "\"P2G\"", "\"P3G\"", "\"PEP\"", 
       "\"PYR\"", "\"TRIO\"", "\"ADP\"", "\"NAD\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> "Times", 
                    Thickness[Large]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.915, 0.3325, 0.2125]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.40082222609352647, 0.5220066643438841, \
0.85]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.28026441037696703, 0.715, \
0.4292089322474965]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False", ",", "False"}], "}"}]}],
            ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.769089452601541*^9, 3.769089471196052*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJw103tMU3cYxvFSLJcMhiISKkKAWgEHAzlYDreep61mgqYK3nAQyQBpokC3
ELcpCmSwiZcwFyNLvUWBZvNeqAYizDQORDdmcHM6CGComVOBcOkQhBoU+nvf
pDn55Jvnj5OTBufo03eJRSLRpve/uecpw9zdF2qb99gndy+w5M/fc8F2+nHx
FavIws2fTcgtOFHrVE+eEaRld/K5KZHFsXfCv6oPCwYKnJgliJ+K+E0zQHZH
ojbUHLJezOwJz2trDl7/SWz5o3PuFqKnx3+dz2uyNyQPa746xDsz+2DP4iFL
s57sC6W96nbJWbIfhsILGz9oIy9Fhnuntt9KXoa8rR2Z370lB2Iiq/3In970
vkEYVti8/5KRg9F/vavvixhyCHTh/6V28mQZHkXmCBeSycuRvnequF1LluNB
eF/f3WzyCvgNJm38XU8ORVBAtSirjByGFNejVR3fk8PhzxvriurIK2E81WTw
aCF/hOHi6oT9T8gRCLsVZW2fJkfC67zOvmWlhPlj1J8V39fmkaNQbt3w4mGD
hH3PaBhkqlhdgIvD5mjo1kX0HP+ZmVsF48t4WabelfVVWLtm7NLzUjfWY1A5
+yqta5sbHD0G2n7tM+1xF4c5DpFF4iFL5QLWOQQZ6w9fyRKzHgtFYG+x+1oR
67HgMx7wtj674Oirsf4zWdn09BuHzauR63u5Ne7pJOsKqIVWuTn7NesKXD2T
d/HxhgnW4xAYOOL5pvJ/1uMw2tsVmjlsY53H9hiN3nKA2cxDWcR3T8uox6M8
yutES+846/HY7tFwOeASM5cAoXXn5sZ91BOglPtnmD6lnojawVp5upJ6IlaE
mW4ekVNPQqHRXJcupZ6Ek567pCoX6skY35TjcWt2jPVkNJyfKVw0ycwp4Yy3
puwR6kps/cG08xCZE5Bbnnw07SV1AV9+MnrQPDgmzP8fpYDS65/De18x7wB+
LLlXUUPdAMgtPtJtI8zdQL7p169LyVIVrIolJ59N0F6FzUUdKc2TtFchlX/U
ssVOexW+vTk6UiEeZ3s1bDNVbUkS5h1qNHVVDCz1YDaoUXpB96JmEXO3GsdK
UptuLKG9Bn8nhvguDKC9BrOFfsHngmmvwecZ3/zyJJT2GrSF8NWS6HHhHU+t
LfA=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        PointBox[CompressedData["
1:eJw103lMk3ccx/FyCG0YeABOEVkLchYdDwWltPB82mqnYphxCDEeaOcYO5yz
LJMENzc3keimSOYmEAUWRNB6jLYEE+SQeECxIBqfocDcnKhDwHEFNcQN+v19
k+bJK+98/njypDLDznUfOItEorX//6aeRYVT18ILm0rdtcIInzF9fXxH/IEe
w7FRXjF9I/xzW1pf3qNh8ivec/chnzLvf3nH3gnvJkR1ZtcMkmcgbltciqy4
nyyBVsjRLxKekD0hDCFw0/Y+/mbb1M1CxbFh/oH6b/Ic/Hbnc+PydX+RfdDM
tUprTz4gzwW3/4jXQa6XPA9hsvfsBZ/dJ/thtGIgd3L4d7I/pAOykszTd8kB
MHLi6LKCO/S+UtwKmQySWTrJMkS5Xm++MucWORAF9cqxnJkd5CBki3Zdzsi2
kxfBUFQ/+0VkKzkYT7+zelwqv0oOwaUUv/BBUxM5FKE2W1Z1SB05DNeCRA17
Iq3kcKjO+yRXjJjIEbDNb3+n0FZGliN/b+Jqob+0weFIvP7Re8u+unPkxXjS
U3hW+UkteQkuhi/8xt/eRH4bicG/DPVabzQ4vmcUJvQL6nKsHQ6bo2B0UWae
8r5LnYNly/iGrfoe6hxO+GqqWwwPqUcjybBxh7DvKfVoXJA/Ppz0w3PqCsw6
K9NJekepK3DG60LsmQ9fUI/BVze7f85rn6Qeg3kxSem/dokaHT0W653UlakZ
zg6bYyE96q7vPuxCfSlyKwZUNZmu1JcirTRrotpjBvVlsEvU3VV5ZPMybL4Y
Njh3gPU49B/YuCclwY16HDiL6doX35IVSrzUF3SF1rGuRJtwf8VYP+vx6Fnz
6GS7nzv1eLR8HfJlMU9WqKDpNYb99D7rKgz5Zlb9+T3raoic3sgPLGFdDbGb
V8qpy6wn4KN0wdB9m/UEWFe1jXPPWE/ENn7F/gUuYuqJkFXqtvv7khU8SiLM
x8/LWech/tQ0+LFK3Dj9f5wPhB71TDMmkzcAzq+vmzankwuBkp0RfxTtIHcB
9/g3LZ172V4Dt4VyRf4httegZuZblceL2V4Dea7YdU0V22sQvHL3yxsWttci
OeNh6u1mtteiqWus9oSd7bVoLT898c89ttciIO2Zr+ox2+tQn5XavH6Y7XXY
xUmt5a/YXgdzwHhTu5OE9jpcqQ3y8PCUNP4H14gtpg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        PointBox[CompressedData["
1:eJw90wtMU2cYxnFglaWyYjO1KjQo1wqsQHsoFws9T8GpYxINXhHRqAhMNApG
XJjRuRlFw0XsGKvOKUUpiQwVREwMs4kgSoqoGLAyVwTWDSUjQnWb4jqh7+eb
nJz88s+bfF9Oju/mnSlb3VxcXJa/eybeJ/UTc4evacr7IqdzlM+cHBuf5Hg9
kJtr57nJGePbVacONgnHyG/45OG08sFtL3jnvissfLr6bvMIeQq6Vt9Y+9Y+
TBaic/Szy0u+fkYWwXihtte87k++wzwxYhywuRfFHbCRP0b6yfJ+nXWQPAP7
367/Up0/QJbA+GRh/WBsP3k23CXbz3j6PiV7oV2n3d0d2keWQpFUd/m5/jey
D7zy/3BXiZ/Qfechvv9KWO3VXrIvOEn+YmHhY7IfumbOGvq13UL2h0dLmyFP
zhwA5PjkXWrqIQfijCXtqDq6mxyEHRGNHtV9D8kyNNUskWdXd5Hnw8P8Ue7y
HQ/IwbhUFOC2Meg+OQTjsRkXq453kkMxZDu2trbCTP4EH1b2OGTqO2Q5Gv/q
kIWpW8lh0HQbWjIvmsjhgPTuTtuGq/Q9I1DK/9T8+55qpxsikLWnwixbU3/D
2RVIjzm7TFPc6nSDAtv3xh/SneqirsSml5XPwz+1Ulfie+mGfY9GbNQ5GL1e
7zUuHaHOoWwWf+S4yE49Ev4B47f6V/xDPRKHv0tZPCAZp67CvV0rM9ViB3UV
Om8t+vbeWReTs0dhlY/sq3+3uTrdEIWQ03Nb1v9H5qKRVHPb+2GOG/VoKHQv
fmkzkbkYiOyDRc2uH1CPgT0wSFISReZi8fnSbG/RZtZj4Z1RcHD0G9YXoDf/
aUGpgfUFsIwpk69fY10ND0edqaODdTWC/euKk/pYj8OJcr91qcOsx6H+aGOV
9Q3r8Qi+dq52nkBAPR5irziHyJPMadC4PyCrWMK6BsqevNCp3qzz+LHqmOFv
P9Z5zOhOqUgPFJgm/8c5gLD159uFIeRUwOrZMJYtJ+uBlWWLXJ+FkS3AD5xQ
1a5k+1qUpp7eNaRg+1oIpPqM65FsX4u5IeFSK7NFi5LCrC0a5jkJ0J8vM/So
2H4CdBqj/H3XJyCt4lyM4P1+AipXl7Q85th+IlpvFu6bys6TmoiRgtnJbew8
+kS4Td8tnhbB9hMx5dXGga3v7vc/PoUoNg==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[1, 0.5, 0]], 
        PointBox[CompressedData["
1:eJw903tMU2ccxvGikQBe4pwoIja2KBOoXGwpN8t52uqmwThdMMhgikVl1kjx
GrVFu3RmCAWcRJNueIlNILgVXatuU8QlBUUUL7EiMIUixarFGySCY84B/b2+
ycnJJ988f5y8OQKV5qsNY3g83orhZ+T9k2nkXOfWS0q3f652cRtHzxNOl1+7
yzrwmhOPnn6u+Nf1ZZWJb8hD3A8Vuxp/0bzmvHsf9NyqSmh59JI8DgfH7AzZ
4u4l+4OfJnQen+0hT4TUXpp+5vAzrvnmyJmMpouzUv/mnpKnoHalIcbKd5On
4nTHpr7JoifkafBNVtdos3vIQTCKfE/62VzkYGQX6IqL5jKHYHGwdMnL6m4y
H4NZdfL7i7rpe2djguXTu46+x2QBPHfmOe0WZiH828+dEh5iDkXJt6lHH+1l
ngNNusW4NpR5LgLrosydTV3kMASHllsrtMyfQW+SObWxzPPgqmnzTehxksPx
Lv+xYXcJcwQyZh4wD4YxR0LjqG6XZ3WSRdho47VbJR3k+ai4PfbLFstDchRC
yhov33S0k6MR1iAo6c1upfuMQfAkxd2lHxxe22Iw1r8hu8N8h3osCi51hu93
11OPxT/hiwwVAWbqCxCQEvE+bIn9ircvgPHBVf0nzQ+8Fovhl+n5MXeKi7oY
8ZmDbbHWXuoSXNuqKTtT2EddgqWqUr/UuLfU43C29XhuUdA76nEYSLK0xEuG
qEuxdchQvdz2L3Up0tTiuG0N76nHQ5+q8Ms0/kc9HsLn9TkO4QfqCTj284zV
gYfJtgS8+b3AvekZ64mobNqs2jed95e3J0JTlqh9FU0WJ8Fx8Q+l7AvWk5Bb
q/KcX8V6MnZEZx14rmI9Gd8LZq6IzGN9IWR53wREbmd9IdTH6szlWtZl6JpV
c+RQAesyBFY7f7usZz0FVbqDUTCwnoIT19Lfur5jnUOjMUN14WPnMN597ui0
4T76P84A8n1enNXoyRlAkmmcNmcf2QREnjAXC7TkNmCgcKdv1R62l6O/aW33
0x1sL4dPx3175Ta2l+NSa1FmfR7by5GzRdcoVbO9Anxd8iRVLtsrcC9IXr5G
xfYKDFy4IYpYw/YKKD3n9xq/Znsl8lYHcmmr2F6JvnWm/sKVbK/E1T1dJY5l
bK8E/097s2j4vv4HQjw16w==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0]], 
        PointBox[CompressedData["
1:eJw902tMU3ccxvFqW4EwEVtBRLbgNsulqC2FUopwHtpBhFg1ZAj1xbK4cplb
uGQyYdpJxxbjC40jk9niNjaduqEjywkU5LIUWBwIRSNBiQyGZSidG2SyKVjc
gP7+/pOTk0++eU5ycnI27S/OylspEAj2LF5Ld5t16fRw2fEGY5nTF/nLZ5IT
yfc2VQX5QrV8HnEFu9T63QU+5Kfcpwslo3/2r4J3vwIbswUVgzuZxSgs8P0o
YUJM9sNclzKxqJp5NUrPdAS99roY/X1LJxC29WlNLhmzBDUN5fUSH+Z16NpT
IvH5W0QOxtkjZ6c7fmcOAWSa+e/HmEPRsbthdfsocxicnRrLmnHmlzA2dP7f
3MW9933D8aFJWhv3B/Mm9GZUCKv+Yn4ZzyRfzVY+9yv40hkQHTTN/Cqq264U
uheYN0N59fzdz/3FZBl6yjId84HMESjPyrbUS5gj8aC7/eY3z3sUZmZ+fJrv
xxyN0v9cUruHPV8OV5TwsI+bOQZyQ7XWf4B5C3J+3qHff5F5K04cuG1PO8i8
Db2Pi0rSY0T0PRWINandAdeEXvMKrK86GvWQI6uUaJZqLkyYV1JXYqQ8jpeX
rqAeC8cHTyz7/AXUY3HqcmVRxUkP5+0qzL5/cGjqyBOveRVE7huJRxWz1ONg
bqtySIUz1ONgzWkNjmx4QD0ehg0T0uKpe9Tjoc44MLrV9Ct1NZrT1tzoz79N
XY2JM6IBRdgt6gnQnujrk80PUE9Ab81p96Gk69Q18Kzt/Xb46jXqGozvPdds
d3dTT0T0zUvrGho7qScixWOwhL7ooK6Fo2tjZV3wT9S1MNU+nurWtVNPQoDg
F8NbGa3Uk/DdIdGjOWcL9e3o/mTfMa2QzG9HjFksu15np56M3LCOVXwemU9G
q6955y5bE/UU8HM7TO8pyXwKzIEXOgcVrHPw2PyFZTWN1DkkKf9RuR42csv/
4wag7+Rw+JtfkI3A/RfesA21ka2LTh58Wy5o8noYqDs89uyzHrZPhfP4byML
BdSNqYictMrUBrI1FbK7IbmhF9k+Fe/atsREh9hpr4PrzvHxO2vJRh0yP64v
LP6BbNUhPfwenzVGHtZBbZuarN3WTHs9tPedOePnyEY9Tn2dGXFshGzVI+/0
tN87FS2018PiGkyPuNXC/Q97ehnU
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 1, 1]], 
        PointBox[CompressedData["
1:eJw1039Q03Ucx/HBsMSgE+JINBhzNMg5BQYTHGOvfVd3JlCeHZjZdQmrKxem
aCEKcSpG2iE7JE9I4korj3OehNbOUDAYMsM2V3IOr2D+AKkmMARicyxh78/7
bve9xz3v9cf3vjdh/ofr3wnk8XjrHv9mn/V1s2dWtdy+WBxomo93525QtSXq
75pFo09CNnfjqrCkYlermNmjujfDRb9W9AT8+wDY+o8Y1/TOI8/D0ov7P7et
Zw6GvugjU9JgEDkUjnTR9tyqIFzrmb2FiPzZPYOXmMOhlS/eZ17AHAFDxHCF
/BafHAnOFPKy5hzzIvQNVZe3H2FeDNerx3TqXczP4by5akfQ28wx+DauyiBa
y6f3jUWRLjmlNpVZiMqiGLNTwLwUFaWyTPt8ZhGic/PDxK5AchzsdXyu28H8
PD5zN775lYVZjPCSq9oXf2KOR+n148LOL5kTUJC9M/5wKfMLmFwY6JvcwLwM
gmb90/1SZglMcR9rOW8AeTnibY3BDzqYpZBIandvK2NegU0jFX/tkTCvRLTx
uHbkFx59z0Rc9mWca1WSWxKhD61xty/zqfw9CfJxcWnvZq/fLUm4Lr1g3sP3
UE9GnvDrGtXoFPVk2MXflxwVPKQuQ0ejpbX20Ah1Ge7FFuis+YPUU+CamD7o
mO6jnoLtJ3xv3Wzrop6KlSdCS94LMrT5eyq8Jw92FA5c8Vsmh+yZ73rLIn6n
LoejVjE+dPom9VW4lNeti1z+J/VVKEzMinGUD1BPQ9beX+tPCW5TT8OZrfzO
sfo71NMxtNOWsuTRXerpaDC6P22TDVJfDWWX95KlfIj6amxKUPIjv7lPXYEe
3LCWWYepKyASp3Ha4H+oZ6C/3B7GRf9LPQONFz4pyHvfSV0JwbEfm3+ofkBd
ie7cSv3VnhHqmXDm9xlnakapZ+KsoTLurnSMugqvD6utlffJLSo0ZZdInV+4
2ub+j1HAgs4VJze8Mu73RiA8q3BtxbMP/a4DhFZLdYiNbAesl6MOr2uaoL0a
m52GMuOuSdqroag2BTTnTNFejYnzA3mn5f/RXg1dYULWbyHTtOdwpkFzJdtN
3sjBLM4JsNxx057DgTf+yIzt8tCeQ3GTpPia8RHtNeg++5R+W4OX9ho4bJ6p
nAMztNfgVMjuW56tPtprMKbo+KBKxGv/H/jdOng=
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> 
     NCache[{{0, 40}, {-Pi, Pi}}, {{0, 40}, {-3.141592653589793, 
        3.141592653589793}}], PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 40}, {-Pi, Pi}}, {{0, 40}, {-3.141592653589793, 
        3.141592653589793}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"GLCi\"", "\"G6P\"", "\"F6P\"", "\"ATP\"", "\"F16P\"", "\"TRIO\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0.5, 0]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 1, 1]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1/3, 1/3, 1/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "7"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.769089452601541*^9, 3.7690894713395853`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJw1039Q03Ucx/HBsMSgE+JINBhzNMg5BQYTHGOvfVd3JlCeHZjZdQmrKxem
aCEKcSpG2iE7JE9I4korj3OehNbOUDAYMsM2V3IOr2D+AKkmMARicyxh78/7
bve9xz3v9cf3vjdh/ofr3wnk8XjrHv9mn/V1s2dWtdy+WBxomo93525QtSXq
75pFo09CNnfjqrCkYlermNmjujfDRb9W9AT8+wDY+o8Y1/TOI8/D0ov7P7et
Zw6GvugjU9JgEDkUjnTR9tyqIFzrmb2FiPzZPYOXmMOhlS/eZ17AHAFDxHCF
/BafHAnOFPKy5hzzIvQNVZe3H2FeDNerx3TqXczP4by5akfQ28wx+DauyiBa
y6f3jUWRLjmlNpVZiMqiGLNTwLwUFaWyTPt8ZhGic/PDxK5AchzsdXyu28H8
PD5zN775lYVZjPCSq9oXf2KOR+n148LOL5kTUJC9M/5wKfMLmFwY6JvcwLwM
gmb90/1SZglMcR9rOW8AeTnibY3BDzqYpZBIandvK2NegU0jFX/tkTCvRLTx
uHbkFx59z0Rc9mWca1WSWxKhD61xty/zqfw9CfJxcWnvZq/fLUm4Lr1g3sP3
UE9GnvDrGtXoFPVk2MXflxwVPKQuQ0ejpbX20Ah1Ge7FFuis+YPUU+CamD7o
mO6jnoLtJ3xv3Wzrop6KlSdCS94LMrT5eyq8Jw92FA5c8Vsmh+yZ73rLIn6n
LoejVjE+dPom9VW4lNeti1z+J/VVKEzMinGUD1BPQ9beX+tPCW5TT8OZrfzO
sfo71NMxtNOWsuTRXerpaDC6P22TDVJfDWWX95KlfIj6amxKUPIjv7lPXYEe
3LCWWYepKyASp3Ha4H+oZ6C/3B7GRf9LPQONFz4pyHvfSV0JwbEfm3+ofkBd
ie7cSv3VnhHqmXDm9xlnakapZ+KsoTLurnSMugqvD6utlffJLSo0ZZdInV+4
2ub+j1HAgs4VJze8Mu73RiA8q3BtxbMP/a4DhFZLdYiNbAesl6MOr2uaoL0a
m52GMuOuSdqroag2BTTnTNFejYnzA3mn5f/RXg1dYULWbyHTtOdwpkFzJdtN
3sjBLM4JsNxx057DgTf+yIzt8tCeQ3GTpPia8RHtNeg++5R+W4OX9ho4bJ6p
nAMztNfgVMjuW56tPtprMKbo+KBKxGv/H/jdOng=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        PointBox[CompressedData["
1:eJw10wtMEwccx3FK3HwksEpYR2VxVAbMCk44C2159Nd2YWVGx5osusCASiXG
sUw3B7IwYiZYXNhW6Uq4KqBAQ214WQRhsBXUKQyYZToVFNQYMExgCsMnnRv2
f//k0nzy7f9yj5xo+2faHd5eXl7J/x+LvxZ2cfoUvXnW7MiUg86sFzOh0Hfm
FY49KnYyL2ZOce+dPPPO2RLyM4XVZfhgIc3o9OzzMJXUWN/uOkx+CattZ6+w
P5eSl+MKj1X7SE1kH8Ru0pwr0ZmcgwOLw4fu2rLAXVrOftDyPy/UBXP2h/tp
zmDqnVKyAPWH9nT3HeUcgLbWqzZpGudVuDh7+361mPPrSG3iG7/mc14Ne5x4
ROlXSvcbhKn45DOtcs4iND9Nu5DyE+c1sM1Zro9mmMjBSD31Y8+zbVx/E7fC
9fkr/H8gh6Cms2OqbbKEHIreDHdr7gjnMPQHzVw+kfEd+S18y/Ot5EV9T16L
isyhbyI+5M4nRtfasetD+4zkdYhTaANXsofJ4ZiZLddOSbjri0D2VrdBU2Mm
r0eI395lTa+x5LcBt3B/dEolvc8N0DmKG89Jazxu2QC9y1LuKz1BPRKnl96c
25V8knoker/sWTWT1E49Cnf7azWh893UozC296Ys9bfz1BkoeH2bb+sHqDN4
UNf/9+/PL1LfiLsxmZpPXnFR34jEq48vuZ30f0aCzk32sgfOC9QlmN1X0J7v
c5Z6NKz/fmra/Osv1KOR6eh2LOg7qMfg46KGL+QFrdRjMB9UiC6Lg7oUN06L
Csy7m6lLMeqQ3NpqbKAug2BizUr/aTt1GVxZXr7GOzbqckTZHz0xraujLkdp
enjOP4NW6rFoGmeCk+y11GMhPxQ9fr+enjcTB19NhOC98WrqcYhPNMhaxGQm
Ht29o/mvmo9Tj0eXIfB4GZ/MJCC9o/rPEPYY9QRMLt1vG5KRGQWu7fDOqm2r
oq5A7o2F3VVBVZ7vUQgYlPawIlOlxx8BRbqHEUYBmQWWX1ri3tJc4fEwMP3Y
O7wgkSxU4uXRgBXvPzxK+0o0SLMH9ljJrBIHL4eKW9LJw0p0TIvm3g0jC1VI
yCmeMP91hPZV+CM4IDeti8yq0Gg78MZzI3lYBW3PiKhiJ1moRvGWsiNfabh9
NSSCyZR7Ydy+GiHz0rpxH25fjdxjB1TlTyzO/wD+Rlng
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        PointBox[CompressedData["
1:eJw90w1MzHEcx/GrrrmTayT0YCnXJSVxdz0//D/XZa0MLSs7Iav14KkMOZs1
aR5unJAN11Ie1i0ibT2huG6JldAW1XlYFJUe1pAmd6K47/+3/fffa+//9/+4
v1tyVlyqJYfDiZ3eZvaFmpnVwhxTdS29asNH2r/Vz3RX6bKt+HxI/q3vzJmq
imGeNdnI1C++lhhmwcf/eQs8ah/qVUzxzLZGX+lF11wTmY91vxqCThvJAtQV
1QcHTvt528yaC5GzbW4CazukRIecr2ZtjwPMzUKpibwQt2KaGvWsHdCV8603
/DfZCRt2JNtqWS/GURt3xRvWLijpPtveOe3/z+uK12rd4HHWbkjPqik6YSIv
RcGE+nKQkSyED1e/JZo93h3urU+jByzp/YlwY/+mK/OsyR7w8s1/58p6GbYz
WbcKuWRPrHXRxrVYkZcjJVHvoWXP54WMvepKvgXZG80qgbhliq6/AnnG4sNn
2fvzQaVY2lQ9QV6J/EjJxLMxsi+4k/KByM888/dcBcfZp2QOr82uWoUu/UdH
54fUV+OntNSkvER9NdRumX3lSdTFkH+4P1ZmR12MXj/tufiaWeYugbEonbmT
aHaVBBf2RaVOuVGXYv6TgGGBK3UptCVcpTGeuh9SVIZgUyl1PxxZ06ASfqXu
D8uHZQPt3nR9fyQtq8jsSKD7C4C+UZvLP0g9AP5zsE90hnogxEs2lh0sph6I
9ISm8fvl1INw+dofq6ha6kEo8J5jv+cR9WCcWL+Fu66ZejCUh3flNbVSD0H2
1jrfuJfUQ9AWd/dcVAf1UFQoh73TOqmHQjh328lYA/Uw/K6JndK+pR6GRTrd
5L331MOhuD7acLGHejgcfK4L7D9SZ5Djecgmv5c6A40kecGDPvP/6Ah0d49H
v/pktgLgY1Dy4jP9r0CUMKa2sN9sA5DrMbIpc4DmZSg1+tbaDtK8DHbx5Xsr
yRoZGnvGRkO+0LwM0i9bH98mO0ZgxFnp6TFE89M2xV/KI2sikCOyTjCQDRHY
fYjj5DVM83JkcARJO8kKOf5sVueUkzVy8Op/qHrIBjlSRTohb4SHv5SYA+s=

         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[1, 0.5, 0]], 
        PointBox[CompressedData["
1:eJw903tMU2ccxvGikQBe4pwoIja2KBOoXGwpN8t52uqmwThdMMhgikVl1kjx
GrVFu3RmCAWcRJNueIlNILgVXatuU8QlBUUUL7EiMIUixarFGySCY84B/b2+
ycnJJ988f5y8OQKV5qsNY3g83orhZ+T9k2nkXOfWS0q3f652cRtHzxNOl1+7
yzrwmhOPnn6u+Nf1ZZWJb8hD3A8Vuxp/0bzmvHsf9NyqSmh59JI8DgfH7AzZ
4u4l+4OfJnQen+0hT4TUXpp+5vAzrvnmyJmMpouzUv/mnpKnoHalIcbKd5On
4nTHpr7JoifkafBNVtdos3vIQTCKfE/62VzkYGQX6IqL5jKHYHGwdMnL6m4y
H4NZdfL7i7rpe2djguXTu46+x2QBPHfmOe0WZiH828+dEh5iDkXJt6lHH+1l
ngNNusW4NpR5LgLrosydTV3kMASHllsrtMyfQW+SObWxzPPgqmnzTehxksPx
Lv+xYXcJcwQyZh4wD4YxR0LjqG6XZ3WSRdho47VbJR3k+ai4PfbLFstDchRC
yhov33S0k6MR1iAo6c1upfuMQfAkxd2lHxxe22Iw1r8hu8N8h3osCi51hu93
11OPxT/hiwwVAWbqCxCQEvE+bIn9ircvgPHBVf0nzQ+8Fovhl+n5MXeKi7oY
8ZmDbbHWXuoSXNuqKTtT2EddgqWqUr/UuLfU43C29XhuUdA76nEYSLK0xEuG
qEuxdchQvdz2L3Up0tTiuG0N76nHQ5+q8Ms0/kc9HsLn9TkO4QfqCTj284zV
gYfJtgS8+b3AvekZ64mobNqs2jed95e3J0JTlqh9FU0WJ8Fx8Q+l7AvWk5Bb
q/KcX8V6MnZEZx14rmI9Gd8LZq6IzGN9IWR53wREbmd9IdTH6szlWtZl6JpV
c+RQAesyBFY7f7usZz0FVbqDUTCwnoIT19Lfur5jnUOjMUN14WPnMN597ui0
4T76P84A8n1enNXoyRlAkmmcNmcf2QREnjAXC7TkNmCgcKdv1R62l6O/aW33
0x1sL4dPx3175Ta2l+NSa1FmfR7by5GzRdcoVbO9Anxd8iRVLtsrcC9IXr5G
xfYKDFy4IYpYw/YKKD3n9xq/Znsl8lYHcmmr2F6JvnWm/sKVbK/E1T1dJY5l
bK8E/097s2j4vv4HQjw16w==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0]], 
        PointBox[CompressedData["
1:eJw90wlMk3ccxvFyeRAQQZAbV67RolIoRynH+5SyDRWFNDpG6Iai84iKTCeI
DDYlaCMuHssGryEgEUGHUQKoQzaOmCGCqINErVyiiNG2jEGaKCBuwO+/f/Lm
zSffPMn75s0rTNun+tpUIBAk/nfN3s/xs+cuV2ZVONkof85tnzsj3MnyrQMB
YWOcdO5McN8n+Q192cg8xZmJvVR/2Ixx83sTFDu9VhREj5It4H7f8faSFD15
MdKP50B2/g3ZGrodbrZql9dc173ZsxRm/v37nbteke1waGLT7p01I2R7ZO5o
rU1rfUlejlKZ9kHcu2GyE86JXD0aEphdYPDRTWxre0F2Q8mS6vLhBGYPjOrb
wY+x9/0Ip0RysUMVsxCWljkFtRnMnijJtxi+sJfZC+pcHxf1YWZvFFereIEX
sw96foP08u0hsi+GfjR1/DaL+WOEvrlu6Ahh9sMi27W77YzPyCL0+n8+uKua
WYxrV0fV2ZuY/WFiUZIw3j9IXonkTvuu3MEB8ioEyXLP3tD0k1eja6z15pGR
XnIAML5g5nS9lr6nBIqoZ6tbLj2ad50ENh0D7zSd3dQDkdtk8fSlZyf1QDS9
Xeo3/msL9SD43rDd8lV3W/N8D8IBZcXGjLzH85ZKoUpdUJN34AV1KX6+x9uZ
tuqoB+NMXb7147//oR6MrSYeNsePGqmHoPJh3/oTiW+ph+DiiQp9U/Ik9VCI
bx2L5+9MUQ/FulPdvob2aephyOYOSWby3lMPw8HoeJ3GfIa6DFeCsDwjjVwn
w9SHxsqDl1gPh/WqDVYOfayHQ+u636CfZF2O8puS0sOOH6jLIeA3ZBYKydII
dH5SFsmLWI/AQwfNeN9K1iPhGl9m3eDFeiTSN2cszP9/H4Xfgw2lR21Zj8IR
522xleasR0M0urj+ByN7vmhEZDoW6wbY83EwDqeoq+6zzsHe6k/NUP1M89z/
6AzwLY+SLpaRk4HsX4pkbcfIPFBQke5uuYesBUZSm77ZtZHtFehLaZgOCGV7
BXrCvLescWd7BapOP5GkCthegWVJOT/dev6e9jEoVLV4x7WTk2PgKvwr0OUy
mY9Brz5resVJsjYGn8lLY5/uY3slerTC8KxEtleiSOkrdgtmeyWMtU7rv3Bg
eyU+XfEdn2ecbv4XaotMDg==
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> 
     NCache[{{0, 40}, {-Pi, Pi}}, {{0, 40}, {-3.141592653589793, 
        3.141592653589793}}], PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 40}, {-Pi, Pi}}, {{0, 40}, {-3.141592653589793, 
        3.141592653589793}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"TRIO\"", "\"NAD\"", "\"NADH\"", "\"ATP\"", "\"BPG\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0.5, 0]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1/3, 1/3, 1/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "7"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.769089452601541*^9, 3.769089471478657*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJw90wlMk3ccxvFyeRAQQZAbV67RolIoRynH+5SyDRWFNDpG6Iai84iKTCeI
DDYlaCMuHssGryEgEUGHUQKoQzaOmCGCqINErVyiiNG2jEGaKCBuwO+/f/Lm
zSffPMn75s0rTNun+tpUIBAk/nfN3s/xs+cuV2ZVONkof85tnzsj3MnyrQMB
YWOcdO5McN8n+Q192cg8xZmJvVR/2Ixx83sTFDu9VhREj5It4H7f8faSFD15
MdKP50B2/g3ZGrodbrZql9dc173ZsxRm/v37nbteke1waGLT7p01I2R7ZO5o
rU1rfUlejlKZ9kHcu2GyE86JXD0aEphdYPDRTWxre0F2Q8mS6vLhBGYPjOrb
wY+x9/0Ip0RysUMVsxCWljkFtRnMnijJtxi+sJfZC+pcHxf1YWZvFFereIEX
sw96foP08u0hsi+GfjR1/DaL+WOEvrlu6Ahh9sMi27W77YzPyCL0+n8+uKua
WYxrV0fV2ZuY/WFiUZIw3j9IXonkTvuu3MEB8ioEyXLP3tD0k1eja6z15pGR
XnIAML5g5nS9lr6nBIqoZ6tbLj2ad50ENh0D7zSd3dQDkdtk8fSlZyf1QDS9
Xeo3/msL9SD43rDd8lV3W/N8D8IBZcXGjLzH85ZKoUpdUJN34AV1KX6+x9uZ
tuqoB+NMXb7147//oR6MrSYeNsePGqmHoPJh3/oTiW+ph+DiiQp9U/Ik9VCI
bx2L5+9MUQ/FulPdvob2aephyOYOSWby3lMPw8HoeJ3GfIa6DFeCsDwjjVwn
w9SHxsqDl1gPh/WqDVYOfayHQ+u636CfZF2O8puS0sOOH6jLIeA3ZBYKydII
dH5SFsmLWI/AQwfNeN9K1iPhGl9m3eDFeiTSN2cszP9/H4Xfgw2lR21Zj8IR
522xleasR0M0urj+ByN7vmhEZDoW6wbY83EwDqeoq+6zzsHe6k/NUP1M89z/
6AzwLY+SLpaRk4HsX4pkbcfIPFBQke5uuYesBUZSm77ZtZHtFehLaZgOCGV7
BXrCvLescWd7BapOP5GkCthegWVJOT/dev6e9jEoVLV4x7WTk2PgKvwr0OUy
mY9Brz5resVJsjYGn8lLY5/uY3slerTC8KxEtleiSOkrdgtmeyWMtU7rv3Bg
eyU+XfEdn2ecbv4XaotMDg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        PointBox[CompressedData["
1:eJw10w9Qk3Ucx3FGpocc2RFqdBpimy4NhW3g+DOezzb0pPyLHTRhYDjIvAu0
M6PrzpMSCwU18bixOBHNKBAaPh3+CVrRdd1s0IHSGBgENBhMRjQwURgF+/5+
d88997r3fZ/7/Z7nntDM3KQsXx8fn13/X3N3Q9ncMnOSwYnCnUtsXPb8GuQO
yS9v+3Klk5POLzenzdJX9vGj5Cdc7RtDe/NEo5x3XgDbFUGqwugkPw3ZAmt1
gN8I2Q91nh7tysMOcgBGyzsPGWcHuRbL3HoWgYarW9BkJwfC/3H82lVVf5GD
cOtOjn7HdwPkZWhrEQxoJvvJz+OY2Xy8fgfzCzj3ttj97S995BUotZ18LiSF
+UXMyj5Wcp4/6byr0J//UW5EI3Mo7P4LrQnFzKshGvv+rvAE80vQ5Z47klHE
LMQS60CU801mEcTRl/IWxjCvwa/mo2PNq5nXonx60VHDUmYxWmbavlnzDPPL
kNn6SrqfYl6HzGq/yCNDveT16G/+IL2AZ34FURe0r36azhwGo6D4enlzD3kD
tt5+VHnN/gd5I3T78rJ9iu7T9wxHZ+PVjdv3d3nNhyNdsvviVIaVegRypu79
mGBppx6B4336yNfWmalLkNFVapsZaaIuge6S/sbrJovJ26W4teLecM14t9e8
FFWmzjuKAjt1GYR7dZKu3gfUZbgb6uo+bRinHokJzU/Ozx+7qUciIOHUwdTP
JqlH4UzThyXbCh9Sj0JrYvu1pYH/Ut+EzKAn1b9tJ/ObkHah8eapFNblcLnk
Myo563LcjzUu3+zLejSSAzQjnhvs+dH4eVpcLEkjS2PgayioKvTQfvgYJHYE
d2SdZfuLhSAkZ98uIeux0H/tCM2+PkE9DnylcffhODIfh4p3xUJNK51XqsAe
t+MLJLPzK+DurK/tcPxDPR6pG1oXa/PIfDx6Uyz5ysWsc6gpeBQSdoXeJ88B
F5fftMjHTfP/YzBgqvndOW3922sN8Il2Z0PDe+QyoOKAJvGtYLINsAvSREH5
YzSvxIn9x8q2trloXolBU/uQOpxcpsSZSdOBieJRmleirjZ8rPThA5pXwfRD
jeudbLJGhdtJFQeXWZ00r8LU+ZP+RXvINhXeb1ivqG8foXk1LCW62LpkskaN
Lbm1ntP9wzSvxqyD7/kqh2xTY2g6SRS2YNj0HwONYQw=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        PointBox[CompressedData["
1:eJw10wtMU2cYxnFADAGpODelBaOWIRdRRi+0WCjnKZ1YRDOHc4hhZhgrotkQ
whjJhCpazaYihjAoYDTiNuqQDBvnJiYgAjIQQRcKKHKpgAOqRiuXqfECfb83
OTn55Z/35Hw5OcIdqXFaJwcHh03vr5l7iWFm/uGy+hQFYaX3uV2zM8KljZaF
Zh+2cpLZsXHpDeq6038/Ib/i5jypjUueeMzZ9x0ReC9TLt5hJc/F+F7ZB23G
MbIrIvs3RV50GSXz8KbObcg//xHXdmtmFoBfkrDqu/Uj5IVQFJ7r3SUeJn+E
DUe9h66vHSIvRrt8WX2G7iGZD+f/bAsSuy1kL5y1GlzXfc68BLF+W3Ir+wfJ
S9HbUVp8TT9I510O3dj65rQoZiE2KrqHVAuZfZAlO+XEc2f+GN8mKwMcPZl9
EW8SfRgzMEBegSKvlX+UVzD7IePH+kOOucz+yHF3bonWMgdA3WFqT9rAHIjj
eSLP8GDmlagwXDKfcWEOQvFXZr/Win7yKrTx/q1M92JejWM+OxvOK/vIwdAZ
esfyvB6QP8GKJvcLbun36XuGwLNJV8Z70W23KQTaBnPznyWd1EXQCLc89v6r
g7oIIV/n2bLdG6mLUZCpqWoJqqu1dzHkraPl/Ct37JZIYL5366IHb4C6BBuN
4ktVo4+oS4Hhiur4wqfUpTg/OBycvdxGPRSazsK9cVUT1EOhf914uSZjiroM
/PDbXb+enqYuQ9Yvpt+w9X/qcojnjesCmsgmOYJ8g2tETi+ph8EiVVrnLiKb
wtBy1HzZ4sH6GhjvZrXFTLL9NWiZo5cdambPVyD67YGrXUWsK/B9TE1ZymbW
w9F+Y2pZgQfr4dg2nZ/Cb6D3lUTgQfSZ3G9S2ftHYP7J46WpQtaVOHUhMeVw
I53XpMSNzBOOV/ax80dCc/Dkp595sh6J4nODNv+aSeocAl01u920ZBOHrthY
4x6XydrZ/1EACL21gs3VE3YnAE0Py63b48kGYMrS+nqtA7kHkIpd0yp/f0H7
Kgj0+7f//AU5QYW3PtLkeGeyQQWPHzKLxdU22ldh9fOI3PoksiAK1wWWgiOL
yAnvrd1n1N98TvtRSDp4ra8jh9wThZA3Az3jMrJAjf2JX450Pn1G+2rk50wf
u1lJNqixNTX7p7rd5B414vZY+soCntW+AzPnUEM=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[1, 0.5, 0]], 
        PointBox[CompressedData["
1:eJw1039Q03Ucx3GcxMQfk+HiGtOlJiUW6PwiMhh+X9vsGhK4YkXcBbdzRUea
emfplRyCeAYWaVems+aEIFTuDNCMjDkNBzcQ9VhwEQ0FaYKkBJguBpSw9+dz
973vPe55rz++3+27ZNO2V98WBAQE6B9fU/dj5qnj5N8LEl7/ytjDZ08fD28O
nmFc3zDEc9NnlHcIQ5TL9vxN9vFy04hYZhvi/fsZEFdEvVPkuUd+At/Lgw/+
K/yLHIw3h5v2JW+8S56H1xt1BVHN/Xzr1akTgh8TgnYN5t4hhyKmJMkx3+gh
SyD42N7+x/Y/yWFoPaOv7zzZR34Kspmmvob/bpPDkX7OcUG7i3khQstbclUC
ZjmGK8bcLeW99LyLcSRbIv86k3kJDCe2n/k9knkpbNWGlwaWMz+DSldtrDKO
eRlKcy6KfvCw9xeBC4WbL8/9jPlZHC67v+h9HfNz2MG3DKbPY16O3LTUlHzX
LXIkGlWJCyYPMa9AqM8p2aZhfh6/8kcfhTTdJL8AceZ39erfuslR2G2/plZ+
7iZHw9thFW+Z7CKvRHhEycv2rk76PVfhRmuW6by7w++zq7BoTv0vB2a7qCvw
0KYKF1paqCvg/Ta6pvLkJeqr0eyUlskaHXZ/X41ia++DQ+4OvzkOksrEF7sW
3qbOoa7v1NBN0yD1GHiNgrZ82zD1GPRcdgcNJP9DfQ2S7KN705/0Ul8Dl6yk
ql86Rj0WMqu3mCv0UY9F8J3dOlH+OPW1iA8rd9xQTFBfC9Glav3Ss2QuDgs+
Srk1MneSehzUA87+0VQyp4Q+NmukKo91Jard1jqnmfV4jAktBWW1rMfjXKCl
W/4T6wnI9hlLf7axnoAt9147v5+ZU2FP/RsGroZ1Fer2HtjXVMV6IiR9pbra
o6wnwpTb5rlfxPo65B2PuNa+k/V1yGx2BX6ZyTr/+P/V+9aRDazzmLWprDAp
etI+/T1KgYOCRzuPhZEzAIVOXWDwTfhtBqxzHuTldJM7gdmnDVuLrpClakRG
v9KQVk7OUOP6J1f2by5mezVWpExkffMu26vhmjnrhCaZ7TVQpIZenb+S7TXI
0YoC9SK21+Ci2PKpe2ic9hrgbnX8021kqRYy7+KtH9SQM7T4UHGqov0LslmL
ZosoomcH22uhlz0skKaN2/8HLnlVSg==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0]], 
        PointBox[CompressedData["
1:eJw1039Q03Ucx/GNuYF0hCBMAYOJTkANBhsy2OD72sZxHQohdRdQJwdEIzVJ
S/AHV53ZqYlF4q3WXR0T+yVZ6To1+THqJAQcPyu2HA0BiR8bx49R2RoVft++
7773vcc97/3H9z6f7/ri8txSLw6Hk/P/s/z+UL88HcxTH7xWcbZoF/PCgxln
rrqO6M6MV5ikD2aBWfS4TtqPG8hupuD9tsTGsmsmdp+LsxHHgj/m/UjmYyjl
6ba27X3klRAaj1o2HLKQ/XC5crBYKxo2mW8vzyoEMLaEgdwxciAGrhiium5N
kINg8O2TZVU5yULkNAzHFivmyGvhV+FTsNi7QA7FdHfyfG3VH+R1uDvkEV+S
3SeHw+eRSKXN7jax3yvCBfl2re7QEnk9etPrdpfv5rSyjkTYme5n2vO55A1w
7I+MqtniRd6IsO6FoNA8HlmM1cGnM10nV5A3oV5Xdn26hk+Owo7cyCzZqwJy
NIqG96iLVd7kGMS1vv7K8bmH3oyIR6Uha0p8yFtgr8s5p9H4gPVWVMsqO6RN
3uTHIYxeyZwPfuhYfJHJGeNoBeQ41Px7frT3Ah/seUqQJNDuONC5grVRguqy
+dJPf+JRj8fbHnnz9594UY/H1V8nTS9KuNQTcHhXhuKSeYlhewIceHeq68Tf
rKVSiAX3DbHti9SlWPWdImP/0Cx1Gd58rCXelj5BXYa8j/qP1PbZqSdiTbor
yD+vn3oiUoVdJYLMVurbIHmWu5MnrGfvp3EbOjfbuO9tbaT7moQD+35eGk1q
p56EMnFiduDRHupyGHmhg07VAHU5rhc5HVfyf6GeDOfLbYz/Riv1ZPSLS9wJ
NXeop+BO+JMn9GND1FPwUvs6v3dm7dQV2Kto3vv1zDB1BW7ca63eZ7tLXQmH
Q8V3XxyhrkRsVdbze94YpZ6KJdHcn33KMeqpuPVloDxqgSxNQ/jOmzzR5/eo
p2HSVVRZkTFOncFbnsIps5NsZGAvvP2D5djv7P8YAox843uqP3iCdT5wOq1j
1vwZWQ/81Xy49EbMJGsrUNiiiyj6lhyigijm5sHGuCnaV4FXG9AY0EDWqxDt
tlrqN03Tvgoj3mvNhnPkEDVaFNeUEb4O2leDH17Y03mQrFfjskdnOPUb2apG
dlNdWNMTTtrXIOhickd0AzlfA8s/pau1/jO0r0FPAf8rUTnZqsFgtmT+uc4Z
03/Dx0X+
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> 
     NCache[{{0, 40}, {-Pi, Pi}}, {{0, 40}, {-3.141592653589793, 
        3.141592653589793}}], PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 40}, {-Pi, Pi}}, {{0, 40}, {-3.141592653589793, 
        3.141592653589793}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"BPG\"", "\"P3G\"", "\"P2G\"", "\"PEP\"", "\"PYR\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0.5, 0]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1/3, 1/3, 1/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "7"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.769089452601541*^9, 3.769089471630994*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJw1039Q03Ucx/H5o2kKJyfjhx4SU8wfBAIDBoJ8X9tKOQ0Qys4uz8MRtI7S
6pQhkoplHPsjqXHnuYRIFNRDPFlOFsaWvyqZuSOTAQPGHDZt6EDyZNhI2Pvz
vtt973HPe/3xve9NKN+VWzCTx+NtfvGbemqOTd3v3Ntb3stc+KGDK5y++9zW
xPHah2NuTjR9TzgLN1HSmTBCnuCcJx798ljh5nz7GQhtq6puNj0ivwS3/c3q
tk4X+WU0ab6L+3TuP2R/mJp+vstXPuBumaYuAIoMz0ZjhJO8EAJV2g7h8/tk
AWzhlyYW8JmD4ereuGgyaYgcCkvvF3MeH3aQF2NlkLCoeeweOQx+WUtPbdnD
HA5ztqs8ye8evW8EqpbpTYKLdrIQz1WfZbs/YF6Kkhx+T1Eq8zLYisMW1AQy
R+J4h7p+f/sgeTmeGfKkUR8zv4rYmsBzw68wr0BZn7ty9V828krUHVBcjalg
XoXZESsalkQzr0ZeuKGktGKAHAWb2TNpPdJPfg2KAf7wenkfORqKOWe+7bnT
S46BLWfwWt9YN3kNMlrCLK2lXfQ9Y1H3b9X7/oF3fNbGIsAaaYqQ36Yeh08u
VMR/NX6FehwOCnaYZpmPU4+H8Zn26ujW6wZfj0dovu56UL/FZ5EICV82XnbU
OKiLsNu973YkhqknoHhe/ZlO8yj1BBQMWYo69z+lnoiDuu3bfs0fp54I1b52
87byCepJ8IrdeR/N/I96EpqXt6ZXBnupi/GNt9avcICsFWOXf4P1N+Uk9WSk
hXhLRpxkbTJ+nH+DLxDyjL6egj8HM6x/vE7WpsARbPVEb2d9LdRvXVPnF7O+
FrC4jt48zHoqPOKOkIdq1lMR3DUrM6SO9TQkK8t2zmhgPQ27e0eiss6zvg7z
njpviltYX4cTGsORTB3r6XBE5Yzq9aynI+CNbM0GZhGHc/XfD3rbWOdwvrWn
d8NPPOP0/3ERoKyefaOS+V0gt0t3qFBPPgY4764Xzb9E7gYeqCztpTq2l8B2
1n6oroXtJTBsbkrPuMD2Eshy9yqzmtlegrLyYa7xLNtL0ara06g/zfZSmK/I
/649yfZSvNOx5GLOD2wvhb39VJemlu1lsMv7JZs0bC9DTIrfUMFRtpch6HLg
pho128vg+dzV0P01z/g/MjtIug==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        PointBox[CompressedData["
1:eJw903tMU2ccxvGikVTdDF7QeiO0KEOoXGyBApbztCVTg3FqMOBAZcUN7SKt
10xbtEtnUrFclMykG15iExiZRW3VbYpoUtAOxWlWEdiEItWiMKeQCAtzDujv
9U1OTj755vnj5M0RqrXrP5/A4/HWjj5j7++sY+dXbqu0bPfHGh/3xfh5xhl0
9fscQ684yfgZ5CzntpZXp7wmj3Dmqn3uH7WvuMA+CL33amStj1+SJ8E8Ye+C
Hf5+8mSEZ4m8p8L7yB9C5irLPn/8Oddyd+yEwH11YeYfXC95BurXmeIdYX7y
LPzQuX0gRPyMPBv8NE2dPv8pWQCLOPgM3+kjz0N+seFoyWLmBciYl7TyZW0P
OQzDeQ2Khxk99L3h+MA+84Fn4AlZiP77UV6XnVkEfsels6IK5ghYtmWeeHyA
eRF02XbLlgjmxZjVEGvrau4mR0IQUemo0jN/BKNV7tUnMEfBV9ceLHvqJS/B
sO6J6atS5mjkzD9sG45kjoHOU9uhyOsii7HNyetwSDvJS3Hmt4mftNr/JMci
vNx9/a6ngxyHqCZhaX9+G91nPATTlA9WvfME7IwHb3JTfqftPvUEGK91LTnk
b6SeAF50hqlqio36MoSkR7+NXOm6EejLUPHolnF6y6OAJRLwc/uOFc7wUZdA
ljvcnuDopy7F7Z3a8vPmAepSrFKX8TMT31BPxIW2U4Ulgn+oJ2Io1d6aLB2h
noSdI6baNc5/qSchSyNJ3NX0lnoyjJlKfq7lP+rJEL1oLPCI3lGX4eT3c3NC
j5OdMrz+qdi//TnrKahu/lJ9cA7vZqCnQFueov87jixJhefqzyr5CtZTUViv
7ru8gfU07InLO/xCzXoavhHOXxtTxPpyyIs2TYnZzfpyaE422Cr1rMvRvbDu
24pi1uUIrfVevG5kPR01hiOxMLGejtO3s9/4vmadg9uyUX3lfecw1X/pxOzR
Pv4/zgV0QX9d0BrJG4FU6yR9wUGyFYg5bTsq1JPbgSHz3uCa/WyvwGDzlp7e
PWyvQFDnQ1f1LrZX4FpbSW5jEdsrULDD4E7SsL0SYYa0aepCtlfid4GicrOa
7ZUYunJHHL2Z7ZVQ9V0+YPmU7VUoygnlsjawvQoDn1kHzevYXoVb+7tLPavZ
XoWwX1wt4tH7+h/URjUI
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        PointBox[CompressedData["
1:eJw9039Q03Ucx/GvhudBI/yxM+AIt9gMENvku+H44b6vDU0gTNB58UsPPSNQ
Sk1KzrqOhCztLsDwEAX8wcg75Wg60vkrv57o6Yk6ahmUyWjIKDkZ0ekKxIK9
P73vdt973PNef3zve5Ov37zyrakcx2X895t4HqibuBuC3+D5gasb+4SCyesX
8I88psvrEfjJGxGcDacCmxOHyaNCxpaLjpL3PIJvPwX2s131w32PyNNgSUv4
4jnPINkfJXVJp05EPyQHYkxR+21s4+/CrY6Jm4GBd1QZ36cPkGdBuqSlJXyB
myxFocHf5UnsJ8+BOPZY4dj6gByMGcZqhftqHzkUXnNQ1Xg8cxi4GlW395KL
HA5N+DbdvjwXva8M9bhX+p2EWQ5TpnE84OZv5JdRX9KYXm5ljoDpk4ihhmZm
BSQy25XQ5cxK5J90p/QM95Lnoa3pco73CPMrCFamjSzNYo6ExlbzzQMJcxSu
u1q3rjjtJEfD1uO3Up/JPB/iOb6z19pDjkFhSozxeOV98gJct1RUtkl+Jb8K
cVtAu0H3C1mFFP/MOPFGF31PNWRPFKoNm3/02arG/qIfpo/O7aS+EPZs9x+m
OdeoLwQ3e09Va1UL9VjYy4T3t0deueTrsZBlH1Qf2fWTzzyPig/bKob6XNR5
WEYKcpd9PEhdg9raO2eKi/+krsGmNZVBOS8+pq6Fc5V4LOdvL3UtGsx6tUQ6
Sj0O2p3+jtS9Y9TjENNxTWtuekp9EdxbpilvFo1TX4SPUqcUfvaMzOvQKe/I
e/7dZ9R1CHKfPdDUTubj8cLMC0su+HGir8djQ68y6k4YmU9A8N03zSLPegIC
D0fO+tnAeiKcRx/mW95gPRGhUvVQdTbrSdgf1j6dX8t6EtL6o14TClhfjAAx
w3TvbdYX46vc7ePHN7KuR8oHU/NuF7OuR1rk7LXSTawLmGuRyz7/vwto/Kui
dHcRJ07+H0OAu92emvJCcjawo+zY6uACch1w354VXbqe3A3YjzqeNuSzvQFf
VzvEnblsb4C5OcTrzGJ7A/TzteWHTGxvwK7eeSesK9jeiPwSbl1ZOtsb4X39
0emXlrG9EZYzqRf3GNneCIdf6Kdf6tk+Ga07Ziqf6Ng+GSHttpO3NGyfjIRq
i2hTsX0yDkVouqxRnPgvOwIxiA==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[1, 0.5, 0]], 
        PointBox[CompressedData["
1:eJw1031ME3ccx/ETxMgiUlEUcFIeLA8dQm15EKnep9RpTZEhODKxDkREsri5
IG4xRAO6hG0ZI/xhFhSmRNRkIdEMJynRetlc1AGhihvtmLNCYbIOFHGus0U2
6Pf7Sy6XV975/HF3uejSg/n7/ARByPv/mr2fapo9d0Tb3T3FQb8NieVzZ1Q0
xAxKLceeipq5MyVW1O7ZO+Vhe0TB5D/YUPBU9O3nwdo+cHb//QlyAGr6TQm/
+42TA1FVfeiT0l0uchCSvNO7UsbGxN6e2SOD29Cqar70mByCnA+/q+w7/wd5
Ga6Ul2x77c4oeTkqfvir8NUSdhguLzLVWT4eIUdAaHCEVnmd5NdhfXfqUX8j
OxJfwKM4p3XS80ah3aYPaHUPk6Px+HmvXWFhx+Dm4irFtTZ2LGTTdQUVjezV
CHuYXDuQw1YgIajZfnchOw7CwlXLpNv8fuPhEG25Rz9nJ0D7lTO5z8BOxPP+
6u/VLx+RlejZqv6z6zT7DbQ7fymfr2QnQerefvvnZgd5DQwVTov6+kNyMs5W
LyoqG39AToG0o6vYWDtI31MFtzFMaF1t87lDhU8VN6wF3f3U10KV0SbzV3ZT
X4uSiN3Kk6VXqKtR863CWLLPfMPX1cj76Ju6vfX3fdZo0O5Z0DpWNURdA4f8
mDIr1EU9FTdXWaVh8yT1VLjndR30L/+behpG3GWJXoObehp69Q9clrKX1NMx
EdFzXO/0UE/HieuxM/J/vNQzEKJtOjVtmaaeARztrDld+Ir6Otjj38xMv0Xu
WIdnrrf6PPIZ6pm4rDwSmrWf3JEJ+7YBr62J+3pMtiS+vekn7uvxLPX9vM1j
3LOwpbNSd89PkHw9CwHhB/5NCyZrtCgtes8vP5S7FrkXGm/9Gsl9A87MX5ob
GcN9AyTT5pbKOO4bsbz+x2qjkvtGfOB0tWWwNSJGD5z/Mn8NdxG7A3NORicJ
0tz/GA4cUbzTILF3AjlPikNU7CZgQa95S56SbAdGdgyt0LLDdbjYaP4sMJ73
OkwcLkmRx/FehylZ0QtrLO91KLxnNJmjeJ+NyEszkyY577NxbdPx4fGVvM/G
TpPMkRLO+2zkP/naHbWC93okB2u2HlrKez3CXnTqk5bwXg+HcOJw8GLe63F1
ZUK9O1CQ/gMxoDJ7
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0]], 
        PointBox[CompressedData["
1:eJw90w1ME3ccxvFKgKkBBAR5Fam8SItCobyU8nJPqW5uQyFERUKViW7OuEnH
hoAMghK0EZcRNZNbCC8ZgooxBPAFUSgxIgNxDBddtbwpsgiFdZAmCogb8Pvv
n1wun3zzJHe5nDAtPfFzM4FAkPDftXD/mV84v3KVVsUzLfIX3BeLZ5Q7U7V/
IDDcyEkXzzRXkOQ3vKeFeZYzF3sl3l1l5Jb2y1Dq/FpRFDNJtoDnI6d7NikG
8gqoT+VCVjlGtobhoLudyvU11/Nw4djC3L8/w6XnL7I9sqd3Hv6yfpTsgOyD
7Q1p7a/Ia1Ap0/229e0I2RmlIjeP5nhmVxh8xqcPdLwku6PMpq5qJJ7ZA0ZD
J3gje19PlIjkYsdaZiGWr8wtalAzr0dZocXIL18ze0GV5+OqOsbsjdK6RF7g
xeyDP25BevneMNkXQz+YOX2XxbwBsrHrE12hzH5YbvfJYXvTEFkEvf+uwUN1
zGLUX5tU5exk9ofAoix+qn+QvBG7ux168gYHyJsgkeWdvaHpJweg19h+8/jo
c3IgMGU5X9Kko+8pAaKHArSXniy5UQLbroG3mu4+6kEoaLV49mp9N/UgaN/Y
+k1d0VIPhucNu317+zralnow1MrqHer8p0uWSpGQalmf/+1L6lKcf8jbm7WP
Uw9BSWOh9dO//6Eegv3LPFadOmGiHoqaXv220wlvqIfi4ulqQ2vyDPUwiG+f
jOMfzFIPw6c/9vlOdM5RD0cOly2Zz39HPRyZMXHjGvN56jJcDcYadRq5UYbZ
9y01mZdYj4D1pu1WjnrWI6Bzy5gwzLAuR9VNSfkxp/fU5RDw248WC8nSSHRv
qYjiRaxHotdRM6XfyHoU3OIqrJu9WI/Ckc/UHxT+v4/GnZCJ8hN2rEfjuMuB
zTXmrMdANLmiqcDEni8GkUedSscH2PNxMI2kqGofsc7Bweq+Zrhpvm3xf3QB
eO2TpIsV5GQg56cLso6TZB4oqj6yduVXZB0wmtr6zaEdbK+APqV5LjCM7RV4
HO697+O1bK9AbcmfklQB2yuwOin33O0X72gfi+JErffWTnJyLNyEvwe5Xibz
sXhuyJpbd4asi8VH8vLNz9LZXonHOmFEVgLbK3FB6St2D2F7JUwNztt2O7K9
Eh+u+57PN821/QuYE0wV
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 1, 1]], 
        PointBox[CompressedData["
1:eJw1039Q03Ucx/GJxMQfc+jknCNCkxILdH4RGQy/r211jQhaMU+4C27nlI7k
1LtM+8EhiGdokXZ5BdYaciMx7ryB5i0dTgWkASrHDk6ioSBNkBQEy8WAEvb+
fO6+973HPe/1x/e7fVdu2/3ujgCBQKB7ds3cT5bPHCefFyS89a2hj8+ZPR6+
LHiO4bWGEZ6bPeN8o1CsWH1glOzjI4xjIbL6Ed6/nwNxVfT7JZ6H5OdgDQ8+
9q/wL3Iw3nvcfCjl7QfkRci4ri2Kbhnkb7TNHDFsiUH7h/Pvk5cgtjS5abHB
Q5ZA8Lmj8489f5JD0XZWZ++uHiAvR9hc40DDf/fIK5BxvumiZj9zGMSW1nxl
AHM4Rqsm3K2WfnreCJTlSMK/z2JeCX3FnrO/RzGvgt2qf2NoDfOLqHbVxSni
mVejIvey6BcPe3+RsBXvvLrwK+aXcKLy0fN7tcwvYy/fOrx1EfMa5KenpRa6
7pKj8Jsyaen0cea1EPuckt1q5lfQzpc9FTffIb8KcdZPdtXtXnI0PnbcVCm+
dpNj4O0yh+RN95DXYXlk6VuOnm76Pdej/Ua28YK7y+9z6xGxwH7t6HwXdTlG
65UrhKZW6nIILDG1p6uvUN+Adqe0Una9yeHvG1Bi7n9y3N3lN8dBcjrp9Z6w
e9Q52AbOjNwxDlOPhdcQ0FFY/5h6LPquuoOGUv6mvhHJjvGDW5d5qW+ES1Za
MyidoB4Hmdl7hCv2UY9D8P3PtKLCSeqbkBBqaWqXT1HfBNEVq27VOTIXj6Wf
pt4dWzhNPR6qIefgeBqZU0AXlz1WU8C6Ala32eYsZz0BE0JTUWUd6wk4H2jq
Df+V9UTk+AynLtWznoi8h1suHGbmlDhgz9BztawrYTt49FBzDetJkAyc0taV
sZ4EY36H51EJ65tR8GPkzc59rG9GVosr8EQW6/yz/1f/9u/eZJ3HvG2Vxckx
047Z71EKHAt4uu9kKDkTkGtVRXrflN/lgHnBk4LcXnI3MP9n/a6SRrJUhaiY
dxrSLeRMFW590Xh45xG2V2Ft6lT2Dx+wvQquufMq1Clsr4Y8bUnb4nVsr0au
RhSoE7G9GpdDTF+6RyZprwYeWBNe6CBLNZB5I3Z9VEvO1OAT+Zmqzm/I5Rq0
mESRfR+yvQY62T9F0vRJx/9VM1RH
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> 
     NCache[{{0, 40}, {-Pi, Pi}}, {{0, 40}, {-3.141592653589793, 
        3.141592653589793}}], PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Helvetica"}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 40}, {-Pi, Pi}}, {{0, 40}, {-3.141592653589793, 
        3.141592653589793}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Pi]+AMP\"", "\"ATP\"", "\"\[Pi]+ADP\"", "\"\[Pi]+GLCi\"", 
       "\"BPG\"", "\"PEP\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0.5, 0]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.37714285714285717`], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 1, 1]], 
                    DiskBox[
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}], 
                    NCache[{
                    Rational[7, 2], 
                    Rational[7, 2]}, {3.5, 3.5}]]}, AspectRatio -> Full, 
                    ImageSize -> {7, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Helvetica", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1/3, 1/3, 1/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[2/3, 0, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "7"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.769089452601541*^9, 3.769089471782687*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "%%%%%%%%%%%%%%%%", " ", "Plot", " ", "the", " ", "phase", " ", "shift", 
    " ", "used", " ", "in", " ", "the", " ", "main", " ", "text", " ", 
    "%%%%%%%%%%%%%%%%%%%%%%%%%"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{"w0", ",", 
         RowBox[{"result", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "13", ",", "ty"}], "]"}], "]"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{"w0", ",", 
         RowBox[{"result", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2", ",", "ty"}], "]"}], "]"}]}], "}"}], "]"}],
       ",", 
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{"w0", ",", 
         RowBox[{"result", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "16", ",", "ty"}], "]"}], "]"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{"w0", ",", 
         RowBox[{"result", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3", ",", "ty"}], "]"}], "]"}]}], "}"}], "]"}],
       ",", 
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{"w0", ",", 
         RowBox[{"result", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "11", ",", "ty"}], "]"}], "]"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{"w0", ",", 
         RowBox[{"result", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "10", ",", "ty"}], "]"}], "]"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{"w0", ",", 
         RowBox[{"result", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "12", ",", "ty"}], "]"}], "]"}]}], "}"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"SwatchLegend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<PYR\>\"", ",", "\"\<ATP\>\"", ",", "\"\<NAD\>\"", ",", 
         "\"\<BPG\>\"", ",", "\"\<P3G\>\"", ",", "\"\<P2G\>\"", ",", 
         "\"\<PEP\>\""}], "}"}], ",", 
       RowBox[{"LegendMarkerSize", "\[Rule]", "8"}], ",", 
       RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"PointSize", "[", "0.015", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Purple", ",", 
         RowBox[{"PointSize", "[", "0.015", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", "Green", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.015", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"PointSize", "[", "0.015", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", "Magenta", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.015", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", "Green", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.015", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"PointSize", "[", "0.015", "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.769082703384864*^9, {3.769087988745935*^9, 3.769087999802642*^9}, {
   3.769089487973082*^9, 3.76908951453154*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 0, 1], 
         PointSize[0.015]], 
        PointBox[CompressedData["
1:eJw1039Q03Ucx/GNuYF0hCBMAYOJTkANBhsy2OD72sZxHQohdRdQJwdEIzVJ
S/AHV53ZqYlF4q3WXR0T+yVZ6To1+THqJAQcPyu2HA0BiR8bx49R2RoVft++
7773vcc97/3H9z6f7/ri8txSLw6Hk/P/s/z+UL88HcxTH7xWcbZoF/PCgxln
rrqO6M6MV5ikD2aBWfS4TtqPG8hupuD9tsTGsmsmdp+LsxHHgj/m/UjmYyjl
6ba27X3klRAaj1o2HLKQ/XC5crBYKxo2mW8vzyoEMLaEgdwxciAGrhiium5N
kINg8O2TZVU5yULkNAzHFivmyGvhV+FTsNi7QA7FdHfyfG3VH+R1uDvkEV+S
3SeHw+eRSKXN7jax3yvCBfl2re7QEnk9etPrdpfv5rSyjkTYme5n2vO55A1w
7I+MqtniRd6IsO6FoNA8HlmM1cGnM10nV5A3oV5Xdn26hk+Owo7cyCzZqwJy
NIqG96iLVd7kGMS1vv7K8bmH3oyIR6Uha0p8yFtgr8s5p9H4gPVWVMsqO6RN
3uTHIYxeyZwPfuhYfJHJGeNoBeQ41Px7frT3Ah/seUqQJNDuONC5grVRguqy
+dJPf+JRj8fbHnnz9594UY/H1V8nTS9KuNQTcHhXhuKSeYlhewIceHeq68Tf
rKVSiAX3DbHti9SlWPWdImP/0Cx1Gd58rCXelj5BXYa8j/qP1PbZqSdiTbor
yD+vn3oiUoVdJYLMVurbIHmWu5MnrGfvp3EbOjfbuO9tbaT7moQD+35eGk1q
p56EMnFiduDRHupyGHmhg07VAHU5rhc5HVfyf6GeDOfLbYz/Riv1ZPSLS9wJ
NXeop+BO+JMn9GND1FPwUvs6v3dm7dQV2Kto3vv1zDB1BW7ca63eZ7tLXQmH
Q8V3XxyhrkRsVdbze94YpZ6KJdHcn33KMeqpuPVloDxqgSxNQ/jOmzzR5/eo
p2HSVVRZkTFOncFbnsIps5NsZGAvvP2D5djv7P8YAox843uqP3iCdT5wOq1j
1vwZWQ/81Xy49EbMJGsrUNiiiyj6lhyigijm5sHGuCnaV4FXG9AY0EDWqxDt
tlrqN03Tvgoj3mvNhnPkEDVaFNeUEb4O2leDH17Y03mQrFfjskdnOPUb2apG
dlNdWNMTTtrXIOhickd0AzlfA8s/pau1/jO0r0FPAf8rUTnZqsFgtmT+uc4Z
03/Dx0X+
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0.5, 0, 0.5], 
         PointSize[0.015]], 
        PointBox[CompressedData["
1:eJw903tMU2ccxvGikQBe4pwoIja2KBOoXGwpN8t52uqmwThdMMhgikVl1kjx
GrVFu3RmCAWcRJNueIlNILgVXatuU8QlBUUUL7EiMIUixarFGySCY84B/b2+
ycnJJ988f5y8OQKV5qsNY3g83orhZ+T9k2nkXOfWS0q3f652cRtHzxNOl1+7
yzrwmhOPnn6u+Nf1ZZWJb8hD3A8Vuxp/0bzmvHsf9NyqSmh59JI8DgfH7AzZ
4u4l+4OfJnQen+0hT4TUXpp+5vAzrvnmyJmMpouzUv/mnpKnoHalIcbKd5On
4nTHpr7JoifkafBNVtdos3vIQTCKfE/62VzkYGQX6IqL5jKHYHGwdMnL6m4y
H4NZdfL7i7rpe2djguXTu46+x2QBPHfmOe0WZiH828+dEh5iDkXJt6lHH+1l
ngNNusW4NpR5LgLrosydTV3kMASHllsrtMyfQW+SObWxzPPgqmnzTehxksPx
Lv+xYXcJcwQyZh4wD4YxR0LjqG6XZ3WSRdho47VbJR3k+ai4PfbLFstDchRC
yhov33S0k6MR1iAo6c1upfuMQfAkxd2lHxxe22Iw1r8hu8N8h3osCi51hu93
11OPxT/hiwwVAWbqCxCQEvE+bIn9ircvgPHBVf0nzQ+8Fovhl+n5MXeKi7oY
8ZmDbbHWXuoSXNuqKTtT2EddgqWqUr/UuLfU43C29XhuUdA76nEYSLK0xEuG
qEuxdchQvdz2L3Up0tTiuG0N76nHQ5+q8Ms0/kc9HsLn9TkO4QfqCTj284zV
gYfJtgS8+b3AvekZ64mobNqs2jed95e3J0JTlqh9FU0WJ8Fx8Q+l7AvWk5Bb
q/KcX8V6MnZEZx14rmI9Gd8LZq6IzGN9IWR53wREbmd9IdTH6szlWtZl6JpV
c+RQAesyBFY7f7usZz0FVbqDUTCwnoIT19Lfur5jnUOjMUN14WPnMN597ui0
4T76P84A8n1enNXoyRlAkmmcNmcf2QREnjAXC7TkNmCgcKdv1R62l6O/aW33
0x1sL4dPx3175Ta2l+NSa1FmfR7by5GzRdcoVbO9Anxd8iRVLtsrcC9IXr5G
xfYKDFy4IYpYw/YKKD3n9xq/Znsl8lYHcmmr2F6JvnWm/sKVbK/E1T1dJY5l
bK8E/097s2j4vv4HQjw16w==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], 
         PointSize[0.015]], 
        PointBox[CompressedData["
1:eJw10wtMEwccx3FK3HwksEpYR2VxVAbMCk44C2159Nd2YWVGx5osusCASiXG
sUw3B7IwYiZYXNhW6Uq4KqBAQ214WQRhsBXUKQyYZToVFNQYMExgCsMnnRv2
f//k0nzy7f9yj5xo+2faHd5eXl7J/x+LvxZ2cfoUvXnW7MiUg86sFzOh0Hfm
FY49KnYyL2ZOce+dPPPO2RLyM4XVZfhgIc3o9OzzMJXUWN/uOkx+CattZ6+w
P5eSl+MKj1X7SE1kH8Ru0pwr0ZmcgwOLw4fu2rLAXVrOftDyPy/UBXP2h/tp
zmDqnVKyAPWH9nT3HeUcgLbWqzZpGudVuDh7+361mPPrSG3iG7/mc14Ne5x4
ROlXSvcbhKn45DOtcs4iND9Nu5DyE+c1sM1Zro9mmMjBSD31Y8+zbVx/E7fC
9fkr/H8gh6Cms2OqbbKEHIreDHdr7gjnMPQHzVw+kfEd+S18y/Ot5EV9T16L
isyhbyI+5M4nRtfasetD+4zkdYhTaANXsofJ4ZiZLddOSbjri0D2VrdBU2Mm
r0eI395lTa+x5LcBt3B/dEolvc8N0DmKG89Jazxu2QC9y1LuKz1BPRKnl96c
25V8knoker/sWTWT1E49Cnf7azWh893UozC296Ys9bfz1BkoeH2bb+sHqDN4
UNf/9+/PL1LfiLsxmZpPXnFR34jEq48vuZ30f0aCzk32sgfOC9QlmN1X0J7v
c5Z6NKz/fmra/Osv1KOR6eh2LOg7qMfg46KGL+QFrdRjMB9UiC6Lg7oUN06L
Csy7m6lLMeqQ3NpqbKAug2BizUr/aTt1GVxZXr7GOzbqckTZHz0xraujLkdp
enjOP4NW6rFoGmeCk+y11GMhPxQ9fr+enjcTB19NhOC98WrqcYhPNMhaxGQm
Ht29o/mvmo9Tj0eXIfB4GZ/MJCC9o/rPEPYY9QRMLt1vG5KRGQWu7fDOqm2r
oq5A7o2F3VVBVZ7vUQgYlPawIlOlxx8BRbqHEUYBmQWWX1ri3tJc4fEwMP3Y
O7wgkSxU4uXRgBXvPzxK+0o0SLMH9ljJrBIHL4eKW9LJw0p0TIvm3g0jC1VI
yCmeMP91hPZV+CM4IDeti8yq0Gg78MZzI3lYBW3PiKhiJ1moRvGWsiNfabh9
NSSCyZR7Ydy+GiHz0rpxH25fjdxjB1TlTyzO/wD+Rlng
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], FontSize -> 15, 
         GrayLevel[0.5], 
         PointSize[0.015]], 
        PointBox[CompressedData["
1:eJw90wlMk3ccxvFyeRAQQZAbV67RolIoRynH+5SyDRWFNDpG6Iai84iKTCeI
DDYlaCMuHssGryEgEUGHUQKoQzaOmCGCqINErVyiiNG2jEGaKCBuwO+/f/Lm
zSffPMn75s0rTNun+tpUIBAk/nfN3s/xs+cuV2ZVONkof85tnzsj3MnyrQMB
YWOcdO5McN8n+Q192cg8xZmJvVR/2Ixx83sTFDu9VhREj5It4H7f8faSFD15
MdKP50B2/g3ZGrodbrZql9dc173ZsxRm/v37nbteke1waGLT7p01I2R7ZO5o
rU1rfUlejlKZ9kHcu2GyE86JXD0aEphdYPDRTWxre0F2Q8mS6vLhBGYPjOrb
wY+x9/0Ip0RysUMVsxCWljkFtRnMnijJtxi+sJfZC+pcHxf1YWZvFFereIEX
sw96foP08u0hsi+GfjR1/DaL+WOEvrlu6Ahh9sMi27W77YzPyCL0+n8+uKua
WYxrV0fV2ZuY/WFiUZIw3j9IXonkTvuu3MEB8ioEyXLP3tD0k1eja6z15pGR
XnIAML5g5nS9lr6nBIqoZ6tbLj2ad50ENh0D7zSd3dQDkdtk8fSlZyf1QDS9
Xeo3/msL9SD43rDd8lV3W/N8D8IBZcXGjLzH85ZKoUpdUJN34AV1KX6+x9uZ
tuqoB+NMXb7147//oR6MrSYeNsePGqmHoPJh3/oTiW+ph+DiiQp9U/Ik9VCI
bx2L5+9MUQ/FulPdvob2aephyOYOSWby3lMPw8HoeJ3GfIa6DFeCsDwjjVwn
w9SHxsqDl1gPh/WqDVYOfayHQ+u636CfZF2O8puS0sOOH6jLIeA3ZBYKydII
dH5SFsmLWI/AQwfNeN9K1iPhGl9m3eDFeiTSN2cszP9/H4Xfgw2lR21Zj8IR
522xleasR0M0urj+ByN7vmhEZDoW6wbY83EwDqeoq+6zzsHe6k/NUP1M89z/
6AzwLY+SLpaRk4HsX4pkbcfIPFBQke5uuYesBUZSm77ZtZHtFehLaZgOCGV7
BXrCvLescWd7BapOP5GkCthegWVJOT/dev6e9jEoVLV4x7WTk2PgKvwr0OUy
mY9Brz5resVJsjYGn8lLY5/uY3slerTC8KxEtleiSOkrdgtmeyWMtU7rv3Bg
eyU+XfEdn2ecbv4XaotMDg==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[1, 
          NCache[
           Rational[1, 3], 0.3333333333333333], 1], 
         PointSize[0.015]], 
        PointBox[CompressedData["
1:eJw10w9Qk3Ucx3FGpocc2RFqdBpimy4NhW3g+DOezzb0pPyLHTRhYDjIvAu0
M6PrzpMSCwU18bixOBHNKBAaPh3+CVrRdd1s0IHSGBgENBhMRjQwURgF+/5+
d88997r3fZ/7/Z7nntDM3KQsXx8fn13/X3N3Q9ncMnOSwYnCnUtsXPb8GuQO
yS9v+3Klk5POLzenzdJX9vGj5Cdc7RtDe/NEo5x3XgDbFUGqwugkPw3ZAmt1
gN8I2Q91nh7tysMOcgBGyzsPGWcHuRbL3HoWgYarW9BkJwfC/3H82lVVf5GD
cOtOjn7HdwPkZWhrEQxoJvvJz+OY2Xy8fgfzCzj3ttj97S995BUotZ18LiSF
+UXMyj5Wcp4/6byr0J//UW5EI3Mo7P4LrQnFzKshGvv+rvAE80vQ5Z47klHE
LMQS60CU801mEcTRl/IWxjCvwa/mo2PNq5nXonx60VHDUmYxWmbavlnzDPPL
kNn6SrqfYl6HzGq/yCNDveT16G/+IL2AZ34FURe0r36azhwGo6D4enlzD3kD
tt5+VHnN/gd5I3T78rJ9iu7T9wxHZ+PVjdv3d3nNhyNdsvviVIaVegRypu79
mGBppx6B4336yNfWmalLkNFVapsZaaIuge6S/sbrJovJ26W4teLecM14t9e8
FFWmzjuKAjt1GYR7dZKu3gfUZbgb6uo+bRinHokJzU/Ozx+7qUciIOHUwdTP
JqlH4UzThyXbCh9Sj0JrYvu1pYH/Ut+EzKAn1b9tJ/ObkHah8eapFNblcLnk
Myo563LcjzUu3+zLejSSAzQjnhvs+dH4eVpcLEkjS2PgayioKvTQfvgYJHYE
d2SdZfuLhSAkZ98uIeux0H/tCM2+PkE9DnylcffhODIfh4p3xUJNK51XqsAe
t+MLJLPzK+DurK/tcPxDPR6pG1oXa/PIfDx6Uyz5ysWsc6gpeBQSdoXeJ88B
F5fftMjHTfP/YzBgqvndOW3922sN8Il2Z0PDe+QyoOKAJvGtYLINsAvSREH5
YzSvxIn9x8q2trloXolBU/uQOpxcpsSZSdOBieJRmleirjZ8rPThA5pXwfRD
jeudbLJGhdtJFQeXWZ00r8LU+ZP+RXvINhXeb1ivqG8foXk1LCW62LpkskaN
Lbm1ntP9wzSvxqyD7/kqh2xTY2g6SRS2YNj0HwONYQw=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 1, 
          NCache[
           Rational[1, 3], 0.3333333333333333]], 
         PointSize[0.015]], 
        PointBox[CompressedData["
1:eJw10wtMU2cYxnFADAGpODelBaOWIRdRRi+0WCjnKZ1YRDOHc4hhZhgrotkQ
whjJhCpazaYihjAoYDTiNuqQDBvnJiYgAjIQQRcKKHKpgAOqRiuXqfECfb83
OTn55Z/35Hw5OcIdqXFaJwcHh03vr5l7iWFm/uGy+hQFYaX3uV2zM8KljZaF
Zh+2cpLZsXHpDeq6038/Ib/i5jypjUueeMzZ9x0ReC9TLt5hJc/F+F7ZB23G
MbIrIvs3RV50GSXz8KbObcg//xHXdmtmFoBfkrDqu/Uj5IVQFJ7r3SUeJn+E
DUe9h66vHSIvRrt8WX2G7iGZD+f/bAsSuy1kL5y1GlzXfc68BLF+W3Ir+wfJ
S9HbUVp8TT9I510O3dj65rQoZiE2KrqHVAuZfZAlO+XEc2f+GN8mKwMcPZl9
EW8SfRgzMEBegSKvlX+UVzD7IePH+kOOucz+yHF3bonWMgdA3WFqT9rAHIjj
eSLP8GDmlagwXDKfcWEOQvFXZr/Win7yKrTx/q1M92JejWM+OxvOK/vIwdAZ
esfyvB6QP8GKJvcLbun36XuGwLNJV8Z70W23KQTaBnPznyWd1EXQCLc89v6r
g7oIIV/n2bLdG6mLUZCpqWoJqqu1dzHkraPl/Ct37JZIYL5366IHb4C6BBuN
4ktVo4+oS4Hhiur4wqfUpTg/OBycvdxGPRSazsK9cVUT1EOhf914uSZjiroM
/PDbXb+enqYuQ9Yvpt+w9X/qcojnjesCmsgmOYJ8g2tETi+ph8EiVVrnLiKb
wtBy1HzZ4sH6GhjvZrXFTLL9NWiZo5cdambPVyD67YGrXUWsK/B9TE1ZymbW
w9F+Y2pZgQfr4dg2nZ/Cb6D3lUTgQfSZ3G9S2ftHYP7J46WpQtaVOHUhMeVw
I53XpMSNzBOOV/ax80dCc/Dkp595sh6J4nODNv+aSeocAl01u920ZBOHrthY
4x6XydrZ/1EACL21gs3VE3YnAE0Py63b48kGYMrS+nqtA7kHkIpd0yp/f0H7
Kgj0+7f//AU5QYW3PtLkeGeyQQWPHzKLxdU22ldh9fOI3PoksiAK1wWWgiOL
yAnvrd1n1N98TvtRSDp4ra8jh9wThZA3Az3jMrJAjf2JX450Pn1G+2rk50wf
u1lJNqixNTX7p7rd5B414vZY+soCntW+AzPnUEM=
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         AbsoluteThickness[1.6], FontSize -> 15, 
         GrayLevel[0], 
         PointSize[0.015]], 
        PointBox[CompressedData["
1:eJw1039Q03Ucx3GcxMQfk+HiGtOlJiUW6PwiMhh+X9vsGhK4YkXcBbdzRUea
emfplRyCeAYWaVems+aEIFTuDNCMjDkNBzcQ9VhwEQ0FaYKkBJguBpSw9+dz
973vPe55rz++3+27ZNO2V98WBAQE6B9fU/dj5qnj5N8LEl7/ytjDZ08fD28O
nmFc3zDEc9NnlHcIQ5TL9vxN9vFy04hYZhvi/fsZEFdEvVPkuUd+At/Lgw/+
K/yLHIw3h5v2JW+8S56H1xt1BVHN/Xzr1akTgh8TgnYN5t4hhyKmJMkx3+gh
SyD42N7+x/Y/yWFoPaOv7zzZR34Kspmmvob/bpPDkX7OcUG7i3khQstbclUC
ZjmGK8bcLeW99LyLcSRbIv86k3kJDCe2n/k9knkpbNWGlwaWMz+DSldtrDKO
eRlKcy6KfvCw9xeBC4WbL8/9jPlZHC67v+h9HfNz2MG3DKbPY16O3LTUlHzX
LXIkGlWJCyYPMa9AqM8p2aZhfh6/8kcfhTTdJL8AceZ39erfuslR2G2/plZ+
7iZHw9thFW+Z7CKvRHhEycv2rk76PVfhRmuW6by7w++zq7BoTv0vB2a7qCvw
0KYKF1paqCvg/Ta6pvLkJeqr0eyUlskaHXZ/X41ia++DQ+4OvzkOksrEF7sW
3qbOoa7v1NBN0yD1GHiNgrZ82zD1GPRcdgcNJP9DfQ2S7KN705/0Ul8Dl6yk
ql86Rj0WMqu3mCv0UY9F8J3dOlH+OPW1iA8rd9xQTFBfC9Glav3Ss2QuDgs+
Srk1MneSehzUA87+0VQyp4Q+NmukKo91Jard1jqnmfV4jAktBWW1rMfjXKCl
W/4T6wnI9hlLf7axnoAt9147v5+ZU2FP/RsGroZ1Fer2HtjXVMV6IiR9pbra
o6wnwpTb5rlfxPo65B2PuNa+k/V1yGx2BX6ZyTr/+P/V+9aRDazzmLWprDAp
etI+/T1KgYOCRzuPhZEzAIVOXWDwTfhtBqxzHuTldJM7gdmnDVuLrpClakRG
v9KQVk7OUOP6J1f2by5mezVWpExkffMu26vhmjnrhCaZ7TVQpIZenb+S7TXI
0YoC9SK21+Ci2PKpe2ic9hrgbnX8021kqRYy7+KtH9SQM7T4UHGqov0LslmL
ZosoomcH22uhlz0skKaN2/8HLnlVSg==
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 39.7}, {-3.0483839005189703`, 3.032843741140922}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 39.7}, {-3.0483839005189703`, 3.032843741140922}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"PYR\"", "\"ATP\"", "\"NAD\"", "\"BPG\"", "\"P3G\"", "\"P2G\"", 
       "\"PEP\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1], 
                    PointSize[0.6749999999999999]], 
                    DiskBox[{4, 4}, {4, 4}]}, AspectRatio -> Full, 
                    ImageSize -> {8, 8}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0.5, 0, 0.5], 
                    PointSize[0.6749999999999999]], 
                    DiskBox[{4, 4}, {4, 4}]}, AspectRatio -> Full, 
                    ImageSize -> {8, 8}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    PointSize[0.6749999999999999]], 
                    DiskBox[{4, 4}, {4, 4}]}, AspectRatio -> Full, 
                    ImageSize -> {8, 8}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    GrayLevel[0.5], 
                    PointSize[0.6749999999999999]], 
                    DiskBox[{4, 4}, {4, 4}]}, AspectRatio -> Full, 
                    ImageSize -> {8, 8}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1], 
                    PointSize[0.6749999999999999]], 
                    DiskBox[{4, 4}, {4, 4}]}, AspectRatio -> Full, 
                    ImageSize -> {8, 8}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]], 
                    PointSize[0.6749999999999999]], 
                    DiskBox[{4, 4}, {4, 4}]}, AspectRatio -> Full, 
                    ImageSize -> {8, 8}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    GrayLevel[0], 
                    PointSize[0.6749999999999999]], 
                    DiskBox[{4, 4}, {4, 4}]}, AspectRatio -> Full, 
                    ImageSize -> {8, 8}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.022500000000000006`] -> 
                    Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.015`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.015`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.015`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"PointSize", "[", "0.015`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[1, 3], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.2222222222222222, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1/3, 1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 
                    Rational[1, 3], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[1, 3], 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.015`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 1, 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.6666666666666666, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1/3, 1, 1/3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 1, 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 1, 
                    Rational[1, 3]], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"PointSize", "[", "0.015`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"PointSize", "[", "0.015`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "8"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7690879835158777`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "%%%%%%%%%%%%%%%%", " ", "Plot", " ", "the", " ", "response", " ", 
    "amplitude", " ", "%%%%%%%%%%%%%%%%%%%%%%%%%"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ty", "=", "2"}], ";", "  ", 
    RowBox[{"(*", 
     RowBox[{"response", " ", "amplitude"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"w0", ",", 
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "8", ",", "ty"}], "]"}], "]"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"w0", ",", 
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "7", ",", "ty"}], "]"}], "]"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"w0", ",", 
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "5", ",", "ty"}], "]"}], "]"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"w0", ",", 
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2", ",", "ty"}], "]"}], "]"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"w0", ",", 
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "4", ",", "ty"}], "]"}], "]"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"w0", ",", 
           RowBox[{"result", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "14", ",", "ty"}], "]"}], "]"}]}], "}"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<|R|\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<GLCi\>\"", ",", "\"\<G6P\>\"", ",", "\"\<F6P\>\"", ",", 
         "\"\<ATP\>\"", ",", "\"\<F16P\>\"", ",", "\"\<TRIO\>\""}], "}"}]}]}],
      "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "14", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "16", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "15", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<|R|\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<TRIO\>\"", ",", "\"\<NAD\>\"", ",", "\"\<BPG\>\"", ",", 
        "\"\<ADP\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "11", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "10", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "12", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "13", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<|R|\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<BPG\>\"", ",", "\"\<P3G\>\"", ",", "\"\<P2G\>\"", ",", 
        "\"\<PEP\>\"", ",", "\"\<PYR\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "16", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"w0", ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "13", ",", "ty"}], "]"}], "]"}]}], "}"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<|R|\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<NAD\>\"", ",", "\"\<BPG\>\"", ",", "\"\<ATP\>\"", ",", 
        "\"\<PYR\>\""}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7690895389169693`*^9, 3.7690895669872847`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw11AtMU2cYxvHeBHEKaFooLRXBIuAc1La0XHuelotA4hV0bmzJUiJDFzQZ
jHFxgzHNpsLi3AJBTUbCbRpZWMBoweBC3Egzt4HiWHG03OwK1BYojmt0Yt99
ycnJL/+8OTk55/uC9acOHeOwWKwDL6+1++W6tWVkzJLV7Nmsm0zuq2VlfHkR
Pj+V9jKKV8vFCHKaOKEND8grDDfe+ax/5i/GPc/G5bPdFQmFZvI6TBRuDDLX
jpK90BJ57+7e+nHyJoS3Ou7I9U+Y3+6vLV94Fja0XXJayVtwb+B8UfGbNjIf
n8vLhywNk2Q/KKIeC8rGp8hCVMwfHXxbZCeLoBlki0WZT8mBKEg8rZbVOshb
MWypdV0bd9L7boN5sHt2f/MMORgPT5TX6PJmySE4IxrwS02YI28HZ/viI8bX
RZaio0zG2mb+36Ho4A6N3n88T96BHuvtWAv3X3IYhEHZQR77F8jhkJVb++qN
i+QI3BacjHtRskzeCU1rxEjI8VXy68iwTQb5ff+cvAv64SuO6hYW3H4DHv5D
gQsxHHIkxowpzSl8HjkKFmlAtTHHA+7vKcPyF5bl56FebrfLcHdp81TeuY3U
d0Me/W3c6hFf6rthFF0R/3pjC3U5fPZMn84NEFCXozH/Vsq5cH/qChTkF0hW
DgqpKxBdUHVcryMrlPijLaPyszk/6kpUd++q927nU49GA3ekChJ6Xns0cmWe
n6iO+VBX4Wxm1zvr971GXYULvFDee0ue1NXYo9wqSUtbR12N0lOevd7+XOox
GHMa+F6pbOoxkF4cqdnx1Qv632NxRCxmq1ZW3W6PRZj6R0ll/zL1OPxsvOqd
PLdIPQ7SOuP4QPoC9Xg8bCrJl449ox4Pe01H2omaeeoJOHOr3pVd7KKegPiP
DLk5RXPUE7HU2Zl8/ctZ6okQCvpSZzpnqGvQ09ZbMmp3UteA8+Bvk/AbB3UG
H/AqijYfekqdgc1/w+ENYXb3fgwA+NzK0h7xtNtvAeE7L32qFE3RfgWqfnk3
pEQ56bYJEH54MqrxqI3mteg5z49kV/9D81r8sKhZWui30rwWWfaP89ICySYt
bFmZ8pDiJzSvw8Vp47xhaILmddBrgjf9nkyu08FQljFxtYvOD5MOhx/tPcBX
kQOSMDU4kKI2jNF8ErS2rj/Tk8h1SShqHf5a00fnkelldzSzv3t/lPkPWWAi
Yw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw11A1Q03Ucx/GNJA64jgeRkpDb5lBgQe6BPbrt898kQCeszaXkaMImFN3w
oTLQUsNTD42uIs8bFuNONLOpyMrVBZwHpQ7xaV4P0Gl04IoTZyd23sVohXz3
u9vtXvfe57b//e8/bvUm08YYFotl/P81+97mmj1+bdMf/5TPj0tEzeMT1Drs
k2/1NC6B+PGZ0kaEe5PqDovI01rbD9NDpTwF5vZsXJ/ZPLbmgoYci/Fw9taJ
Cww5HpJHNRzuFT35KdwZHLu0aG8RrgzNnmTs+77cHB9TTE7FFv6vnBRzCTkN
MZXZBYGmUnI6Nt2W1zvcK8nPYGnshx+7Tq0iZ+B42uX+dJ+BnIl9jps5JwZW
k7Mg6Og8+HmgjK6Xg9+yPL2ZD8vJXDw4dG7D+lYjmYd36+p5NtWL5MVo23mc
FZ6Mmo+npXElxsMmcjb+MsxY/ZVm8hI0u6aGPmPWkJeiMtf82mmthZyDLz2J
so/sL5Fz0WCS/sw/s5achyF2o3eFoIIsQMKRqfOnx14mP4eHd43tBZNWcj6C
OTPei2U2cgG62j+4+mpqFfl5hA5m7b92o5ru5zIMd2eqi+845uxdBr/TOu+a
s5a6EKHRrl7HjjrqQgz65Ou2jzipi8D9JcXjd2+mLsItd+Oxspkt1MWwt6sa
xo9tpS5GX6lgt6WWLJYgPPgOe1RHn/dKcPSNBMvZu/XUC2FpkcpHb0e/vxDz
+33Mtmejv08KTsh94/6knboUe3YlXN9jqaIug+Ze94lt21+hLsOAMNFzKHk9
dTkUFQsN+ep11OVIYu6xnBMW6gqIkp1HV0+YqSvw+66KDUGViboSu6c0DT0X
jdSVWCAdN3EjZdRVqKn6LsC7aaCuwhetghZrYCX15Yj79u3YvzNKqS9H0Jf/
Z0xLMXU1LkHZ1Md5gboauezXf7QHV1DXYP+bR7r+/UZPXQNbtWbVT9066lp8
HZvbw+pjqGvR3NrRHxnB3PO4ELDpsu6vTSVXAHmBDv7JT6PPMzAmDadFitRz
HgbO5zR6u6ZVtGewMdIpEfqVtGeQ/n7SvNpz0f8HBr76EkN/p5z2DJrd/E+e
/EpGex3CI+07Hg1Kaa9Db95ABitUSHsdDvQULQplk4d12KlM4SmqJbTXo0h2
9vJVj5j2etyKe0LgYpNdemjiWQ8EVhHt9TjwnijSNiDEfxhwDmA=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw11HtMU3cYxnEgECFLB1hEWhBsaSlQqKWH3i/naQ8lM8Ja2HRjWSiITKMS
I14WQ9RGEBU14EajmLBGCUNwuDEv2x9OFtTMZnaki0wgg40MvJMYvADTeMG+
/SVN88k3T3JOm3NEa7eUVkeEhYU5334Wvk+2LRwfO3TXey923yP2i3fnDluX
5uJ87CIw784TVtrTKZpU88kv2I0JMa3+WQGC+3BE7NjeleZPI0fBGTnoyKsQ
k2PgdCe7nu+SkHk4XVXeNMxlwH9z4cRh6sjQusaAjLwYwy1Xm/pVWeQE1A++
dJTXZpMTwRu70FzslZOTUHy5R6y8kkMWYneu4UThSC45BYKEMWP0vIKcis4Z
z6FxnhLB+10OPa//1X/dIYsQvvPY4b8deWQxSt7LKTi+SEVOx8BO6TjrD1mC
xPHDt389yJCl8IzxA+WufHIGXMLOqCtr1GQZYmqrmK5NGnIm1u+dPlrTrSVn
wdFgSf+drydnI7WGz+jOG8hy6GKnZHEeEzkHqhL/IckfFnIuCm95ncwlkBVY
dfbD7mbORl4B9b/fll9TFND/qcSa2ompzC8Lgz6vxG+/+E62YSX1POgO9vzk
9hZRz0PRZMWReIWTugqp087JGH4pdRVq+ratf9r+EXUGF1OXDM6s+5g6g//7
TtnFCjKTj4jPRRc+mQ/t89F+MaPAH11CXY1S/353ZW8xdTU6jjtWPPCErk+D
V97CRnNa6Po1sMkqqzqLOOpauLNPlH0QaaWuhX08ea3WaaGuQ9QOU/MPRiN1
Hc7unb0336ejrsdju2ulr15DXY/XW/kO7ff51A3ojb8qXC1gqBtwPU78bM/b
3ynYjRg4s+Szc/VK6kZ4vD86Tw8rqJsQvbGhdfVcDnUTeGKRPGCXUzcjpSNy
8rufs6ibEWl+qEmsyKRuQV/Hn+duLJVRt2CLdfrW5TkpdRaLR2Nv3ngkoc6i
lVGM1j9LDz6PAmCu7lp8SxK5DHgxeiZby4WeX2BXdbjDdEAU9AggeyrqHwgs
p70Vuj33J8xycpkVCoP+9rw09D6wYtbFH5K/XEZ7KxxfX3/ufpJCexv+avhU
ODGTTHsb/uGaXu8PJ7fZ0NDWUrJPIqS9De8LujbMFNP7R8DB+tWlyqrGJNpz
mLYnuap9S2nPYcDTHqjjk0c4bAjr/Ua5ORFvAHQm+/Y=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJwt1HtMU3cYxnGGcV4ymDGoFBugnYBQO1paeqPlPG2BIkrAanXoAMdd0MCq
mXLZFMqyNC6E4CS0YmJi5KpIKYKQDp2ajk2LGJSMuIlREEGFDYJxQHBD3jc5
Ofnke94/Tk5+h5OWr890d3NzS/z/WrpbLUvzG3O+R1lasdcDWR/mBdNb/aT/
h0V/iD7MDJM9OnfgBJ9HnmfwSdjQRWkYlvc/gpfsLa8NEvJKtJhPmhra5eQ1
eFVk+vhIo5LsAXFK6vyAmIHr3tKsQ1uWKcR2HeT16Ol7NPxjt5rshdH1fpoD
9RryRti+8Dp7w6wle2N1/LtVv2ZEkX3gFLckLjDRZDbODfkZ33BiyL74lFM8
275aR+/rj+xxE/uCeyyZA/9FW8u453YyF+ummU6dNI78Gb6t9rxZlbeDvAUp
ltds36qd5AC0cVOLFyfjyYHwm+yL43+fQA6CosnhzatLJG+Fbk7p7G7aRQ5G
/4OCP8oe6skhcBkHa1uD95B5eJYlGnZcM5C3wWbZr9Cb95H5UCWtfeSyJZE/
x88OQW0J8yU5FLMSfbAgL5W+pwB93eoSqeWrZdsFmFhlfZ87nk5diG+KJcJ3
XVnUhai+e+5489ND1MNQ07XgbPc9Qj0M3MhLL08P5lMX4ethtvlGUwF1Ebwd
2f2TNWSRGB1/RzWMpNPzdjGmnBMbJvYcph6OTeX9XTn3c6iHQ3nn7cPW0kzq
EsReKcw/aU+jLsFVRd13wkMHqUsR4N0gnGEnU5diYHyxtXHjfuoyBKVzFU0/
7aMugzHk+tYKk4G6HBm/FLJiHLupy8F11bvVqfTUFQiycAIM04nUFZBrfH5P
sSZQj0BnZXIZrzGeegSOdjSrxp7soK7E46LNG2Z2x1FXQp1jGiidiqWuwnT6
X+X2eh11FYKP5833nI6hHokEFT/0dkk09UjMrdw1aq2Ios4g78zCfZVNS52B
KJT7T+VzzfJ5ZAGGMxafSh45CfD0/Tcto0hN5xU4lvDs4oU/sewhANzZqexo
MkuNLbrO2lNHGdpXo6hZ3txhjKR9NR7cPcYUFKpoX43kUyPx12rof8DS4HLv
mPPOzQja1yC08XLvrRkF7WtgtEpWuMvIQxrwDQZXZin9X1haILBc9HxQRvta
mMPFm66Gky1a2MtyvR7XSGlfC4GwajBwrRT/ASU7E5E=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw90w1ME3ccxvGCo0Ck04iacdOtyEBtHbOWthRo72kr1CDEQsfGugrtQVtQ
oL6homYOUrXiyzJ1Co2YsJlQdeAyHNuyLHOb04g6BgzUTMa0W7NhIiYFBdFk
w/5u/6RpPvnm6eVyvUTOXeiIFAgEpv8+09++5ulzlU0ZXzR8NlQB5/MTZIOp
hf8Un6iA/PkJsS2NBdd6/nSRp9gGjadLMOFEeB+BQsUu9tVRBzkKDTvmKyPu
lZNjEfhl3pXoe2VkETzx4r7LExxuXJ8+s/H7zaq8GgnvOaj1haqkdXbyXNQz
60RrAzbyfHygHrteWcH7JZjnxU+lCXkz6JZJXW/XlpIX4I58a1P1TN6v4Ief
Cgr6rpTQ/YohmWVK49p5J2Kkz1/y/Te8F6F9UpHkGuWdhC/G714Uriwlvwbp
3+Iin593MqSWy6xWbCOn4Bj6znj38V6MUYv/5t0X7OQlUJj6Z0paeS/FCWng
0KSVI0uQ8nPOqRhtGVmKlhZvYebqcvIyCLfa2M+POMiv40fj3sgOxkVOxfjU
8Y+P/P9838Alt1c/rFtPz3M5LAcOPLsRVRN253L0JPReOnhhA3UZfH+N9Xou
bqIuw4BqUGaZUUt9BSK22YZE2duor0AZc/+hWVRHXQ7PAzHrv0XulGO7oDLG
6uB7Gkxe7dG9X/H7NHRF2sd6l/K/r8CSDwdm2c389RXYkr07Ln+dm7oSKjOj
8UTS/XQqEXBUb1K7+f+rCnviix73HCqnrsK5nJaJuUqOejpE950TJ4026uno
aOU2z+DWUlcjVhHbP9Zmoa6GffbQp3aumHoG1lulwqDrLeoZeDj8bVJj+5vU
M3Ha3p1sVZqpZ+JoXZtl8LcC6llYmNpx9csuE/UsHGwuCrrNa6hrUMV8N/l+
TT51DUo4RtHYvZq6FkHH4tadylzqWnzS4PdeuLOKOgs1N2QvOWakzgKhkVSm
Mif8PiYA7zVds8SUZof9DiDPLg6MWFbS+wpIdjd95tphCPs28HKWU/H1KT3t
dYjIfTZYP6ijvQ5xeY+i3k0kN+uwr24XE10N2utgOC+p39DK0l6Pw7L9j3+t
0tJej5G8Jw0f5Wtor8eDjvMbfauyaK9HdPL2p0JjJu0NCL0YZ9hjzaC9AQPO
qeNtO9W0N6A/wXh29HQ67Q0I5i5bU/qHCv8CQ8UJ3g==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw10wtMU2cYxnHY1mjFDjzjIo1DGBVKaSm9l0J7nraMubk4REW7TQUMKxoT
nYpxGQtYhbBBx7JxsSwaGOpkQecCXlCmzDAVkbiJsnYoElRcEzFuIJXo7IZ9
z5ecnPzyz3su+fLFFWzOKXwpKCgo+/9r5t7omlm97FJm31yXQY+PXqwxdpns
t6LmYR1UL9YEyziPFNdIOT9ldXU1Lf+wWgTmg8HA17JOqyHzoED0D/WJajIf
8qKh/WUiFVmA1lNLPC6tEv1XZlYYSjK8B9ILFGQGstzB1nmtqeRwrFj8a/xz
PudIjJyr/X58lpw8H53uiDZnUgpZCKWN1/BLsYy8AIe9RYzDKyXH4M1DXW+d
KZPS/8Ziz5j//vp0znFIGBx1VkdxfgP7anP8PoZzPK7msrgr5ixC+IWqPHcO
50XINyh/f/cg5wToZBX3XbEyciI26vVrY37mLMalzx2njlWmkJMw3ttxxOGQ
kyXoT84Ka7ClkpORtas/QcQoyFKU7M05pHnMWYYNPecztTwVOQULXd1Rje+p
yXKER1Y8zBzX0H6mor2l62y3m/a3PRXH6zcrBWoDdQW2rG4+PR1spK7A26d9
J0J4oK5ElCPru8JPzNSVsMcLe5eXW6ir8PzKNkneVXK7CqtqKt+pUnFdDZPI
tEnYTc9rV2PYeuDbNdvpfSoNHog72i7GplHXwBhdnH9DzX2/FtLy3J/kjxTU
tRhZfHx2WWMKdR3+GDK5B9dJqOvQ+8WUI3sigboe9g0TsoE4EXU9+mKqB0Jv
xFFPQ8jBObxvTi6knobZhZE7gz9eQN0Ab1/nDnVTNHUDdt+b/7pBFEU9HTXr
27STERHU0+E59qUPsteoZ2CZqSd76qt51DNw8YMO54/xYdSNKLYXdC1qFlA3
wnn26NfJW0Oom5B3+4wgcSWfugnP5vhXSypmUWexy8/cu+blUWdxvqp0b2n+
K4HzGA3YVvLdsTEvB2wDhDfvvF89GkznFRCcaGz661pQwB4g1N40XHnBzwbm
zcisd+0Z9/0bsM2My9f5PGH5s4BdZmzcFlp3WPg0YI8ZDZ+OrVo6Mk3zFrR2
D6fl3npC8xYMXP9sevmQj+YtSPxzSW0SQ/ZYcLT0puTVD6do3oqSNXfPiTsf
07wVoX9n95WayC4r9o+qxGt7Jmneikqjum63fZL9D2BiBv0=
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 39.7}, {0, 413.5410758291621}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Omega]\"", TraditionalForm], 
       FormBox["\"|R|\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Times"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 39.7}, {0, 413.5410758291621}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"GLCi\"", "\"G6P\"", "\"F6P\"", "\"ATP\"", "\"F16P\"", "\"TRIO\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.769089555562492*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw10wtMU2cYxnHY1mjFDjzjIo1DGBVKaSm9l0J7nraMubk4REW7TQUMKxoT
nYpxGQtYhbBBx7JxsSwaGOpkQecCXlCmzDAVkbiJsnYoElRcEzFuIJXo7IZ9
z5ecnPzyz3su+fLFFWzOKXwpKCgo+/9r5t7omlm97FJm31yXQY+PXqwxdpns
t6LmYR1UL9YEyziPFNdIOT9ldXU1Lf+wWgTmg8HA17JOqyHzoED0D/WJajIf
8qKh/WUiFVmA1lNLPC6tEv1XZlYYSjK8B9ILFGQGstzB1nmtqeRwrFj8a/xz
PudIjJyr/X58lpw8H53uiDZnUgpZCKWN1/BLsYy8AIe9RYzDKyXH4M1DXW+d
KZPS/8Ziz5j//vp0znFIGBx1VkdxfgP7anP8PoZzPK7msrgr5ixC+IWqPHcO
50XINyh/f/cg5wToZBX3XbEyciI26vVrY37mLMalzx2njlWmkJMw3ttxxOGQ
kyXoT84Ka7ClkpORtas/QcQoyFKU7M05pHnMWYYNPecztTwVOQULXd1Rje+p
yXKER1Y8zBzX0H6mor2l62y3m/a3PRXH6zcrBWoDdQW2rG4+PR1spK7A26d9
J0J4oK5ElCPru8JPzNSVsMcLe5eXW6ir8PzKNkneVXK7CqtqKt+pUnFdDZPI
tEnYTc9rV2PYeuDbNdvpfSoNHog72i7GplHXwBhdnH9DzX2/FtLy3J/kjxTU
tRhZfHx2WWMKdR3+GDK5B9dJqOvQ+8WUI3sigboe9g0TsoE4EXU9+mKqB0Jv
xFFPQ8jBObxvTi6knobZhZE7gz9eQN0Ab1/nDnVTNHUDdt+b/7pBFEU9HTXr
27STERHU0+E59qUPsteoZ2CZqSd76qt51DNw8YMO54/xYdSNKLYXdC1qFlA3
wnn26NfJW0Oom5B3+4wgcSWfugnP5vhXSypmUWexy8/cu+blUWdxvqp0b2n+
K4HzGA3YVvLdsTEvB2wDhDfvvF89GkznFRCcaGz661pQwB4g1N40XHnBzwbm
zcisd+0Z9/0bsM2My9f5PGH5s4BdZmzcFlp3WPg0YI8ZDZ+OrVo6Mk3zFrR2
D6fl3npC8xYMXP9sevmQj+YtSPxzSW0SQ/ZYcLT0puTVD6do3oqSNXfPiTsf
07wVoX9n95WayC4r9o+qxGt7Jmneikqjum63fZL9D2BiBv0=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw90w1MzHEcx/HrKg8htER6knKpqL+7nu5B/8/ddVs2RVlySUauYhpLa8SO
lGxaxywPRy1tNFPCbkmEZFpRVFuTSfKQ8tiKK3Q56v5fv+2/22vvff7b/+5/
nlt3xWr4PB5v7b9r4vOcfuI0s+cKc6qGDWY2ZfJ8YBufyh7PrTSzosnznd0/
sk0dXEIeY98OfPFXHTOzlr0V9mRdNQqzyLZIuODpPDeZPB3Zj2pUkljyLCSO
qKuYCDPb2jJx5mC0cNzVTkx2QISQ79fAkB1RMeth0agf2Qk8WaTsvA95ARbP
3jtFLSAvxKfU26FT/3dXRAVKl9T6kt2Rb1eZMbScnncRWrQ96zyCyJ7gdw/e
GJSSF2NeQYlKoSJ74YPHS9v5MWRvPNZVJuZtJi/Bq+qAXPVusgCOmcaIhlyy
D5JgHdukJy+F/clbDlX/v39fvG5LelrTTvbDqvbsnPIfZH9sPPzI+NCeB4uX
ITrYMdXBh7wc3uyb+itKcgBaBIxzuoYciBlem27m63iw/J4MTmmLrF7c5Wxg
4PHeFHPkB/UVOFs8b0tXgBXXV6A1/WKrbxJnkRAPNH/O9+2gLsRM77EYKUNd
BM1RYdvxM3R/ET6WxdfeS6b3KQg10c+7tRnjFhuCELWvIyrnyxjXg2EXnzdD
voCzIRgd5eKE/rbfXA/BoNPnFEknZ0MIpOuPej//ST0Ut3bvNDAC2odCb/02
tWkd3T8M7Tt73GwPUg+DNNE2MvESdTGui4eK45qoi2HjszbNq5+6BHFO1U0S
vonrEgwcWKT1c+EskqJadkeQxlCX4tumyg0JEdRlsHOv2N4VR12GyGVrEvI0
1Fdi9EStcHUm9ZVwUW4pNx6iHg63nK6OoELq4Zh2M/ey1VnqLLZNnZ89Ukad
RXJLRkFyhcnyf3QGiuLNXmUGzmrAXtHYd/8OZz0w3bruWW8D5xfALp11/7Vm
2svh6/5E59xGeznai0f4jZ20l+OrTX713pe0l6O09HOKtpf2ChRU2ZyK7qO9
Av7v0ps/faS9AsyJ77dnf6O9AqrO8TDXYdorUX9o+5VeI+2VCHfTH0n7RXsl
jLqeuk4T7ZVYfVozbdxsYv8Cmkwy7A==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw11HtMU3cYxnGUEEEgmyAOjBYKFBWmXGqhXOx52noLNAtbtgFT90fVZiqs
KEEUNMqta2FAgVIoEECEAeIoFTfGVBAUM+S2eSHUYcSEi3YEEiFIMILDvvyS
k5NPvnlPcnLyHrZU/tXxtRYWFpH/Xyv3Ut3K6WEOD92p5wljGNnHM8FkvDF4
nAw7xXA/nlnm4Vin9LYqkfyOeR0pqfHovsCY59fg95DmF9+pUslWaL49tH45
OINsg/WqiKT5DAXZHid44fqzKUqmv2/lfIo13/R//8Y/i+yA8c469pW2bPJG
yBba+/excsib0FspafwkPpfsjEvtLTXuN/PIm3Fve0PdYLKavAVxyd4Nc6x8
MgumhNo0aXc+va8bFjn3I3vOFZDZKOtTP28OLiS749Vjm8OtThqyBw6VTXXf
dygie2IsSbE/6d2qOZj5a25UP6sle+Gzxa6hGccS8jbYNaj+PhCjI2/H8ZEH
vjcHS8k7IPZp6ly6WE72hviG49fTsRVkH5xSCixl31aRP0flj0a9vPEKeSdM
/76f2Yur5F2QKGxYs261ZF8UR7nOnzhXR9/TD81Prb0nD1wzu8UPlS8Pbpq6
+yt1f0gjArqsLQ3U/bHA+0+QL2+hHoCC8JiwiIXfqAeA7y23Tdv6B3UuJls3
80/ub6POxQaDND3OiczdDU53Y9ycspX6btwZ+HNCY0XP4/KQ22ZftBx0gzoP
v2iqM+e+0FMPROHDL2+dtm6kHohx6/dWBu3q+wWhoq70eurjGupBuMB/qzJo
q6nz0VSdOCprr6LOR8ej4SNViRXUg2GyNM6Xj5RRD0bt4lXToF5HPQT7jtSX
hg4UUw/BdJd8YJ6jpR4K9iFn15J2DfVQCGX91+8lFFIPg2b42MRIVAH1MOzY
qMgMj8qnvgdve9UVJbFq6nvgwvnnmV6UR12AKdvObQ4dOdQFuCay5G6N/Zk6
g6NnklnRftnUGeT6spc67LLM++gCPBkX9NWvU5kdAxiXm9QLdkraV+CH87zA
87t+MtsIRJumZJPRtM8uQqQIJY5ORZk0L4Rb6rOcvNHV/RfibPF4oGcA2SjE
c2VCj7woneZFOFOevi57KY3mRfDqjU2QxJN1Igwr3A96TtP/xSjCzltrL8bL
yS5iqG2dtBsWL9O8GMk+Yy97s8g6MZq0Xs72rmSjGI+0rNdtKZeYD6ThLMg=

         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw11HlMk3ccx3GwnstQ0yqj0KlQQFCO0gt60OfTQ6gMSO1AxDAOBaYSRalH
gGiAEYZHUQmghRDdwtCIChMPjI4pHQOXOoNTsYE/RhydHYoSBvMgMrFfv8mT
5pV3v0/y5Mnv8d2Ub8yZ5ebmZnh/zfzWW2bmDpPseeXFtt7ZyP0wDuZJgE/j
CY4XRB9mnOnXGU/sAJ/8lgmuG2S/+z0Yrn13LEzY8yyuIpw8B/meDpavREhe
gCO7izWT8WKyBxL+rNXzvaW4a5uZxTgzbf50e2skmY2fXhuKt/Jk5CWI1V+s
OJwnJ3uiY8Ol0qEWBdkLP/wj+7JzSEn2xhh7TmzPZyoyD71bjo14pTDkZSjx
qyozJ4KedwUsc3cKlk5/tC9M/PDKezfVZD+UCNMN00c1ZD4uDPtz9u/Ukv3h
6ZxVfV2nIwfgXGx5zzX5GnIgUuy8/bzUGPJKBPbPHiyrjyUHoSWNK+j7ZC05
GAcCTruz2+LIq9BpFTKO6njyajhZd8MyrInkECxvq+w/eN5ADoWNJb9dKjKS
w7BvYnPZv+5J5HDM25pqGmPW0/sUYHHpuYbWkQ0utwswanEfOSRIox6BLklN
5sCSTOoRaNvWcK8qYRN1ISZ2L3s4XJtNXYiMq50PBg7kUhfh4ZTQaTr8NXUR
hiarkoMKyCIxvrk8KqwJpf+3i2G/ZfRhzaP7iSSY+lvFDT2SRV2CV9fSp8z5
6dSl6Hr83ap9hRupS9EqMl1xKlOoR6K7Ok/f1JhEPRLO8m9fTxYaqUdB3dvz
V0e7gXoUNjZnb68sSqQuA5NZmP9m4gvqMoz/spItebyWuhz/nZLfns/SU5ej
yz+vaHhzDHUF9h79o+w+aw11Bepyg7N0P2upKyE+yU02n9FQV4KzKyKI26Km
Ho3mr3KaRrtAPRoCxf2ipnGGugq2gRs+nSYVdRXqXmIwzS+aOgOP47w461MF
dQbfh5Vn5HTLXeeRC3D2TD3vuCVzORXwqMnKvtEdRecVqDiu85c6Il22A7wS
e8GrRWSuGomPkm3L46S0r8adLR03pTUS2ldjdYg+sPkJnX+7GnKfen2BjszV
4FerVVzcIqJ9Ddb1tS3QeZMtGlTEr8iOqaXviV0D/ZiS/5RD5mrR97nwmV9D
BO1r4VCeXfoyiGzRwpzbqO6/LqB9LX60LQz5LUmA/wG9Wwei
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 39.7}, {0, 188.3578992839672}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Omega]\"", TraditionalForm], 
       FormBox["\"|R|\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Times"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 39.7}, {0, 188.3578992839672}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TRIO\"", "\"NAD\"", "\"BPG\"", "\"ADP\""}, "PointLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7690895556750927`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw11HtMU3cYxnGUEEEgmyAOjBYKFBWmXGqhXOx52noLNAtbtgFT90fVZiqs
KEEUNMqta2FAgVIoEECEAeIoFTfGVBAUM+S2eSHUYcSEi3YEEiFIMILDvvyS
k5NPvnlPcnLyHrZU/tXxtRYWFpH/Xyv3Ut3K6WEOD92p5wljGNnHM8FkvDF4
nAw7xXA/nlnm4Vin9LYqkfyOeR0pqfHovsCY59fg95DmF9+pUslWaL49tH45
OINsg/WqiKT5DAXZHid44fqzKUqmv2/lfIo13/R//8Y/i+yA8c469pW2bPJG
yBba+/excsib0FspafwkPpfsjEvtLTXuN/PIm3Fve0PdYLKavAVxyd4Nc6x8
MgumhNo0aXc+va8bFjn3I3vOFZDZKOtTP28OLiS749Vjm8OtThqyBw6VTXXf
dygie2IsSbE/6d2qOZj5a25UP6sle+Gzxa6hGccS8jbYNaj+PhCjI2/H8ZEH
vjcHS8k7IPZp6ly6WE72hviG49fTsRVkH5xSCixl31aRP0flj0a9vPEKeSdM
/76f2Yur5F2QKGxYs261ZF8UR7nOnzhXR9/TD81Prb0nD1wzu8UPlS8Pbpq6
+yt1f0gjArqsLQ3U/bHA+0+QL2+hHoCC8JiwiIXfqAeA7y23Tdv6B3UuJls3
80/ub6POxQaDND3OiczdDU53Y9ycspX6btwZ+HNCY0XP4/KQ22ZftBx0gzoP
v2iqM+e+0FMPROHDL2+dtm6kHohx6/dWBu3q+wWhoq70eurjGupBuMB/qzJo
q6nz0VSdOCprr6LOR8ej4SNViRXUg2GyNM6Xj5RRD0bt4lXToF5HPQT7jtSX
hg4UUw/BdJd8YJ6jpR4K9iFn15J2DfVQCGX91+8lFFIPg2b42MRIVAH1MOzY
qMgMj8qnvgdve9UVJbFq6nvgwvnnmV6UR12AKdvObQ4dOdQFuCay5G6N/Zk6
g6NnklnRftnUGeT6spc67LLM++gCPBkX9NWvU5kdAxiXm9QLdkraV+CH87zA
87t+MtsIRJumZJPRtM8uQqQIJY5ORZk0L4Rb6rOcvNHV/RfibPF4oGcA2SjE
c2VCj7woneZFOFOevi57KY3mRfDqjU2QxJN1Igwr3A96TtP/xSjCzltrL8bL
yS5iqG2dtBsWL9O8GMk+Yy97s8g6MZq0Xs72rmSjGI+0rNdtKZeYD6ThLMg=

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw11G1MU2cYxvG+UIQiXa0ga3HaUtpKq1AoUKHCuWgnW6IoIZtOIpmajEDc
RDPM2OagMnBBDIo1zJr5gqQYFJMiY9AxMQNxIbAsy1il+GGTsrpFNySjFKzU
DXv3SU5Ofvnn/nBycj+yAxVF73FYLFbh/8/y+4J1+YwwdWpHsTP2V6b05fEw
N/Y3uj7WTjG6l+df5mj84aSkfY/JfqZq0v3k0OIsE5xnQ1I2eM/5jZfMg/Ar
dX31wwVyJPjDNYXvNPjJ0VDK5upUQ0vMj2PLR4gjrfOV6vYXZBHcY3y1uY2F
oGMQoSsv2l3MJq9BvPyDmxoWh/wqar1nfllrDVkCr3Cl26bmktcitaR2dNER
8jpsSHHX/pkfhuD3SiFLSPw0ZjJkGU5cyt92q5JHTkBz0Ykhzvpwshyq8uFz
Ob+FnIjLzmjOpZYVZAUMGtG3HxVHkJX4POpq3LwhkqzCT3N+qyaLT96A07UW
i2BvFDkJj9umjuy4sZKsRtWqrSJesoCsQVuTTXFu9hXyRhyTit/N5q0ib8JF
3tm/fVtF5GTs4P7e8/XQanIKeguHvZqrsQj+Ty36m0YOqtxxQXdrEVhwnJ/q
lFBPRdnq6gtH49dRT8Xt/DSf/IWUehruTJ+Zf8KSU0/Dc6ZhocuWSF0H7Zpt
oy3vK6jr0Ct3ZBTwybp09LUMDF2vD82ng1dR7rydI6OeAdvw+F3z2deoZ6C5
Y/ezn5PF1DOhT9c6s76k7+nOhCejZ69yQERdD3dJ9a7WaiF1PU4H6ksOl0ZT
34ylPwSN2TV86psRHiZzBZQR1LPAivzM0rQpnHoWouyGmpnmMOrZ6Nx5/9RY
Kpd6Nu4n8qr+CedQN8B0XGK8ImBTNyBp8M1T3mQW9S3Y7snvdDwNBPerewsE
qr7+8fYl2rcclCk6pOaTz6nnoN1e1/qG1U89Fz2+/WZ73zPqubjbMfAJl03W
MTgpXsqceWuROoOCxrFHld/TfoqBgxOxvp0MeQ+Qdk1/j/nBR/sKjIsf2CYP
kF2ASav3f8Ehi/Nw5bt9x3u75mk+D0J7w7S/lGzNQ8XogwlLAtmVh/NPP9yl
+IvuC7ERg9dzZ9hd5D1GFPQZlf3m0H1ixIqBO77pt8kuIySzFmnMxtC8CQlx
nspDkaF5E7gpk70PH83RvAnHBApl+QjZZcLrbM9EwD7H/AeVohRt
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw11A1ME3cYx/EqUgMRwyozFFFAoCICrRQqivR+LRu4oZ2YBe2mFec0VGET
UKNzMswYmGzNiPMlXRwqxFmCq4IBZrIJGkAEyksRobVYqND6AljABcQCDnl4
ksvlk2+eXC6X//l99e22ffNZLNbW/6+Z++/qmXnAqHa+qb+xUMPsfz9WJnXP
+R+6+soZ4fsZZUa0Yy7iv6vJb5nkqoyXbpw6ZnZ/Hg4nigrk/zSQnXEv+UDa
xdJmsguqfY6mXHBqI7vB/+yijzIP6hld08y441zYc2bppXYyB153x8oUJQ/J
Hihdwkk/pu4gL4UoqP1s1uFHZE8MSm3ySEkn2QsKXYK7id1F9sYH3AMJgU1z
XgH+tQHeznwDva8vdr06Odm420j2Q3Z2d2NZ9GPySkgHrp6wCUxkf/w38Tr8
x/hucgCcFPXaGtkTciAmJh2nj6WYyTy4XjF9aE3qIa/CeGGm0OLWSw6Cz7Bi
ZVzPnFcj4JnGJ0tvIQdD6Z4Uev75U/IaFKkXd7P5/eQQRDmrxImlVnIoHJ6u
zb+dfEYOw97877V/Xn5B5mP7wkRFxeZB+p4CtHQun66R2Gd9S4CC8LwFS8Qj
1NdiU25cca/2NfW16A0ze6zIGKMeDm2rzyd3ZBPUw6G3DYd1XHdQF8I5aTKR
Z5ikLoRtvEiQryQLI2Bm7OzavW+pRyBnhynCHjdOPRKbu8s1Ryxzz4+ExtgR
MqEfpi6Ci7U2b496iLoIj3wH20fzX1Bfh4TbkBV+aaO+Dv7TKY2u9/uoRyE0
LsT8U4mFehR8Sw8ZB0d7qK9HkdJbx3M8ob4enD5HheqMifoGDAVbCtKyjNQ3
IGjEWikr66IeDZ2472Irv5N6NNgBx7/IaumgvhFW/r9OZZqH1DciOzfy55o/
2qnH4Oo2t7/Gb+qpx0DZ9vl3Tf1t1MV4zPXc/hmPfEsMdpewMC+nlTqDNaIq
Qa6xhToDO2uZX6+OzicXqCz55o6TWTdrOVCYXKcvnmqi8wpw2bVVqhiyAUD6
m9WnchppX4LpI/05xRY6/3IJAu3BdtmWuf+BBOXXPg5Ov/uA9iVYJTy+1WMT
mSuFt8uN1AZ9Pe1LUT0QfzRTSVZL0bycmd/gSjZIkfHrde6I9j7tx+LTqZte
ZxRkeSwMU/FpLA5ZHYuvUytO7W6g/5UhFhHplXm/qOqYd7KJPTg=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw11GtMU3cYx/FChx0iF7mlVbSFSUu5lgItpYXzK6WZcnNqFQQMgaWuLiZq
E82CtxBvuA0JKNWS4IYIotO4tOxiQI0SQBF14GboC2EIUQTvWqhUccM+/JOT
k0++eV6cnDz/0NItq/XuLBbrq/+f2XedefbcZG5nHVk8xupgNn46j5ht8rTl
laP3mIRP5w0jFQ0YQrKHyE6m7QbfdPLBKOOad0P4Rd05ZtMTsgcm2+uHuSue
kT0RdzJzV27mS7I3juYrKwotr5jbvbPHD4/zDpdvnXhN9odDW2Dxdn9LDkRr
Y2jetZk5B+N9h59Y+sxO5iJEFPejqm+SvAimjeyqPssUOQTHh5pf3DnhIC9F
5QOu19nyd/S9AggTt367Z9c0ORS/XAzgJH/vJIfha9GHkbzL78lfwFglWWNZ
MkNehn7Thc7LpR/J4ci/Jtywp5gFl4Wo0N/XTondyCL4/rzTcczHnRyB3k7O
obEgNlkMwzcT//RkfEaORLjwYb6xwYMcBVHdgGaHnEOORtNvN6oauZ7kGMis
in6Vzosci+pmdXOg05scB21/h4nT5AfX/5SgInu4pLjB32WrBJIIQeHaoCDq
8eiqLbEv53Gpx6Opdnuv/MBi6lJ0tg34RnP51KW4ZRt0in1DqSdAX1N99sS/
ZGsCHv4gy+m5MtcT4dUXLtvQIqCeiNIWn5ULupdQT8KOhTqj8B6PehLUkq5T
MYnB1GWYaTxmuxMbQF2GVYMB84xX575PjlzFrz7tJm/qcpR8F7Zt7+b51JPR
behpq/2LQz0Z6t1ZkbrzHtQV4BfnWEX32dQViPkyKumnbHfqKTiS9qRL6WBR
T0GD8vpOtvkj7YsS8z7/O6Ww/oPLViX89/1+PaDHSV0Fh6FlmUExTV2FhQfs
3TF3HdRTcSVObBbsn6Keiprm544y/ST1NExIew9G6OzU01B5YX6ZXv+WOgMz
v71o6OAb6gwKhLIg06XXrn3kASX1reOdbuT1ACuw+o+CVa9oXwFtyMiWwVba
XxsgUHYVnV5K5qkRuDI1JzjyBc2roc0f3pQT/Zzm1YgKq92fIaf7wKbGGe7h
aVXhU5pPh9mnLHf1oQmaT0dGzZ9Zl66O03w66m3HNws9ybZ09JeviS/Ko/uG
p8H5d/v4w5YxmtfAPlgXOxJMNmuwbkHr7tG9j2leg0y2ccX41CPmP1xuFg4=

         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw10wtMU2cchvFC7JRLB4JjLWOlxUKBUqCcUugF+raVhDZRa8ekFdYlLEAy
uSxO5mDMrbJs0TkCI0xBWkym0wxFajUxuHXMTNGsi2hAwhA022TrFLeETgWy
MbH/fslJ88uTNz3tyRFWNVqqw1kslvnptfrZ27N6rmlxZVJm+oSNmmdnTts2
7rZXiJ4D8+wsaI/uc1lj1WvJy9rO9oGvlveuQ3AfhpTytt3xpyPIbEgmtn+s
GYgkR+DgmZLr2bVRZA4stpXf9f4o/ORbPbHoknJb1m6KJsdhbLLoducHIW/A
4d6VpvFvQ06A0tUZbVnPIXPxlvX+fnNXyInovTrgYNU9T05CGD+p5oVjMWQ+
Sv3ykabzsfR7Bdi15kh84Ml6shCnfLv/uuGOJ6fAc7bhptyYQN6I9zDx7/t2
HlmEtBYvb1/5S+RU9NkrT0SfepmchuYqti//6fcELUZX2V6ud3MKOR3i/sHh
um4ROQPzYdcnx1ViciYOtc4667dmkiVIZg2d3POHlJyF2tkDv3W9KCNL8Y17
kbezhyFnI7WsivVLr4Kcg+zhz8bubFXR88zFSf4w65K3OGhPLr5PanFy+Xrq
MlyWVOyRtZZQl6Et0rXpos1IPQ927YWhMcdm6nkwiv7kNn1tps7gh/Ql/4fh
FuoMOD8LcgIOMiNHe32lwscJdTksnZ/7u38M7fPhWnLOLJZsoZ4Pgf+1Iukj
E3UFrgaEt5noUuoKXJpzJBc46X6ZAkx5/ztn7DNQL8ATderj6YCOeiF0cR0r
ix2gXghBsuberZv0fzBKvHr+yJrmMQ11JYQTH12+l6imrkL1tvtsQb+SugrH
OcJDX5QWUlfDPnr2bkJaAXU1oq7wW68lKKhroKgf3GbLyKeuwbI5riSrTE69
CHU7F050H2CoF+GfuxFLyTN51ItxdDT3gU9O9hTDbD3jLXfJqGvBjhp6vBxP
9mjxitRT1tGeG3wfecCs6GFMJY9sA4wLauZXUw69r4C7IdLxbnN20FNA1Tvy
R4fPSWmvg+/L6Tf7Alm018FTYX1QayL36HDxU8m8vl9Cex22b9gxuD+czNPj
jcSNMeGNmbTXQzc4Mpszk0F7PVTpI4leK3lKjxumOLfzVjrtDTg2faH64Q6y
zYBdLf1/35kT096A0w2N86Nvk6cM+I5Xo3x9nRj/A7lvAWU=
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 39.7}, {0, 74.0305288143938}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Omega]\"", TraditionalForm], 
       FormBox["\"|R|\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Times"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 39.7}, {0, 74.0305288143938}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"BPG\"", "\"P3G\"", "\"P2G\"", "\"PEP\"", "\"PYR\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7690895558083153`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw90w1MzHEcx/HrKg8htER6knKpqL+7nu5B/8/ddVs2RVlySUauYhpLa8SO
lGxaxywPRy1tNFPCbkmEZFpRVFuTSfKQ8tiKK3Q56v5fv+2/22vvff7b/+5/
nlt3xWr4PB5v7b9r4vOcfuI0s+cKc6qGDWY2ZfJ8YBufyh7PrTSzosnznd0/
sk0dXEIeY98OfPFXHTOzlr0V9mRdNQqzyLZIuODpPDeZPB3Zj2pUkljyLCSO
qKuYCDPb2jJx5mC0cNzVTkx2QISQ79fAkB1RMeth0agf2Qk8WaTsvA95ARbP
3jtFLSAvxKfU26FT/3dXRAVKl9T6kt2Rb1eZMbScnncRWrQ96zyCyJ7gdw/e
GJSSF2NeQYlKoSJ74YPHS9v5MWRvPNZVJuZtJi/Bq+qAXPVusgCOmcaIhlyy
D5JgHdukJy+F/clbDlX/v39fvG5LelrTTvbDqvbsnPIfZH9sPPzI+NCeB4uX
ITrYMdXBh7wc3uyb+itKcgBaBIxzuoYciBlem27m63iw/J4MTmmLrF7c5Wxg
4PHeFHPkB/UVOFs8b0tXgBXXV6A1/WKrbxJnkRAPNH/O9+2gLsRM77EYKUNd
BM1RYdvxM3R/ET6WxdfeS6b3KQg10c+7tRnjFhuCELWvIyrnyxjXg2EXnzdD
voCzIRgd5eKE/rbfXA/BoNPnFEknZ0MIpOuPej//ST0Ut3bvNDAC2odCb/02
tWkd3T8M7Tt73GwPUg+DNNE2MvESdTGui4eK45qoi2HjszbNq5+6BHFO1U0S
vonrEgwcWKT1c+EskqJadkeQxlCX4tumyg0JEdRlsHOv2N4VR12GyGVrEvI0
1Fdi9EStcHUm9ZVwUW4pNx6iHg63nK6OoELq4Zh2M/ey1VnqLLZNnZ89Ukad
RXJLRkFyhcnyf3QGiuLNXmUGzmrAXtHYd/8OZz0w3bruWW8D5xfALp11/7Vm
2svh6/5E59xGeznai0f4jZ20l+OrTX713pe0l6O09HOKtpf2ChRU2ZyK7qO9
Av7v0ps/faS9AsyJ77dnf6O9AqrO8TDXYdorUX9o+5VeI+2VCHfTH0n7RXsl
jLqeuk4T7ZVYfVozbdxsYv8Cmkwy7A==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw11HtMU3cYxnGUEEEgmyAOjBYKFBWmXGqhXOx52noLNAtbtgFT90fVZiqs
KEEUNMqta2FAgVIoEECEAeIoFTfGVBAUM+S2eSHUYcSEi3YEEiFIMILDvvyS
k5NPvnlPcnLyHrZU/tXxtRYWFpH/Xyv3Ut3K6WEOD92p5wljGNnHM8FkvDF4
nAw7xXA/nlnm4Vin9LYqkfyOeR0pqfHovsCY59fg95DmF9+pUslWaL49tH45
OINsg/WqiKT5DAXZHid44fqzKUqmv2/lfIo13/R//8Y/i+yA8c469pW2bPJG
yBba+/excsib0FspafwkPpfsjEvtLTXuN/PIm3Fve0PdYLKavAVxyd4Nc6x8
MgumhNo0aXc+va8bFjn3I3vOFZDZKOtTP28OLiS749Vjm8OtThqyBw6VTXXf
dygie2IsSbE/6d2qOZj5a25UP6sle+Gzxa6hGccS8jbYNaj+PhCjI2/H8ZEH
vjcHS8k7IPZp6ly6WE72hviG49fTsRVkH5xSCixl31aRP0flj0a9vPEKeSdM
/76f2Yur5F2QKGxYs261ZF8UR7nOnzhXR9/TD81Prb0nD1wzu8UPlS8Pbpq6
+yt1f0gjArqsLQ3U/bHA+0+QL2+hHoCC8JiwiIXfqAeA7y23Tdv6B3UuJls3
80/ub6POxQaDND3OiczdDU53Y9ycspX6btwZ+HNCY0XP4/KQ22ZftBx0gzoP
v2iqM+e+0FMPROHDL2+dtm6kHohx6/dWBu3q+wWhoq70eurjGupBuMB/qzJo
q6nz0VSdOCprr6LOR8ej4SNViRXUg2GyNM6Xj5RRD0bt4lXToF5HPQT7jtSX
hg4UUw/BdJd8YJ6jpR4K9iFn15J2DfVQCGX91+8lFFIPg2b42MRIVAH1MOzY
qMgMj8qnvgdve9UVJbFq6nvgwvnnmV6UR12AKdvObQ4dOdQFuCay5G6N/Zk6
g6NnklnRftnUGeT6spc67LLM++gCPBkX9NWvU5kdAxiXm9QLdkraV+CH87zA
87t+MtsIRJumZJPRtM8uQqQIJY5ORZk0L4Rb6rOcvNHV/RfibPF4oGcA2SjE
c2VCj7woneZFOFOevi57KY3mRfDqjU2QxJN1Igwr3A96TtP/xSjCzltrL8bL
yS5iqG2dtBsWL9O8GMk+Yy97s8g6MZq0Xs72rmSjGI+0rNdtKZeYD6ThLMg=

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJwt1HtMU3cYxnGGcV4ymDGoFBugnYBQO1paeqPlPG2BIkrAanXoAMdd0MCq
mXLZFMqyNC6E4CS0YmJi5KpIKYKQDp2ajk2LGJSMuIlREEGFDYJxQHBD3jc5
Ofnke94/Tk5+h5OWr890d3NzS/z/WrpbLUvzG3O+R1lasdcDWR/mBdNb/aT/
h0V/iD7MDJM9OnfgBJ9HnmfwSdjQRWkYlvc/gpfsLa8NEvJKtJhPmhra5eQ1
eFVk+vhIo5LsAXFK6vyAmIHr3tKsQ1uWKcR2HeT16Ol7NPxjt5rshdH1fpoD
9RryRti+8Dp7w6wle2N1/LtVv2ZEkX3gFLckLjDRZDbODfkZ33BiyL74lFM8
275aR+/rj+xxE/uCeyyZA/9FW8u453YyF+ummU6dNI78Gb6t9rxZlbeDvAUp
ltds36qd5AC0cVOLFyfjyYHwm+yL43+fQA6CosnhzatLJG+Fbk7p7G7aRQ5G
/4OCP8oe6skhcBkHa1uD95B5eJYlGnZcM5C3wWbZr9Cb95H5UCWtfeSyJZE/
x88OQW0J8yU5FLMSfbAgL5W+pwB93eoSqeWrZdsFmFhlfZ87nk5diG+KJcJ3
XVnUhai+e+5489ND1MNQ07XgbPc9Qj0M3MhLL08P5lMX4ethtvlGUwF1Ebwd
2f2TNWSRGB1/RzWMpNPzdjGmnBMbJvYcph6OTeX9XTn3c6iHQ3nn7cPW0kzq
EsReKcw/aU+jLsFVRd13wkMHqUsR4N0gnGEnU5diYHyxtXHjfuoyBKVzFU0/
7aMugzHk+tYKk4G6HBm/FLJiHLupy8F11bvVqfTUFQiycAIM04nUFZBrfH5P
sSZQj0BnZXIZrzGeegSOdjSrxp7soK7E46LNG2Z2x1FXQp1jGiidiqWuwnT6
X+X2eh11FYKP5833nI6hHokEFT/0dkk09UjMrdw1aq2Ios4g78zCfZVNS52B
KJT7T+VzzfJ5ZAGGMxafSh45CfD0/Tcto0hN5xU4lvDs4oU/sewhANzZqexo
MkuNLbrO2lNHGdpXo6hZ3txhjKR9NR7cPcYUFKpoX43kUyPx12rof8DS4HLv
mPPOzQja1yC08XLvrRkF7WtgtEpWuMvIQxrwDQZXZin9X1haILBc9HxQRvta
mMPFm66Gky1a2MtyvR7XSGlfC4GwajBwrRT/ASU7E5E=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], FontFamily -> "Times"], 
        PointBox[CompressedData["
1:eJw10wtMU2cchvFC7JRLB4JjLWOlxUKBUqCcUugF+raVhDZRa8ekFdYlLEAy
uSxO5mDMrbJs0TkCI0xBWkym0wxFajUxuHXMTNGsi2hAwhA022TrFLeETgWy
MbH/fslJ88uTNz3tyRFWNVqqw1kslvnptfrZ27N6rmlxZVJm+oSNmmdnTts2
7rZXiJ4D8+wsaI/uc1lj1WvJy9rO9oGvlveuQ3AfhpTytt3xpyPIbEgmtn+s
GYgkR+DgmZLr2bVRZA4stpXf9f4o/ORbPbHoknJb1m6KJsdhbLLoducHIW/A
4d6VpvFvQ06A0tUZbVnPIXPxlvX+fnNXyInovTrgYNU9T05CGD+p5oVjMWQ+
Sv3ykabzsfR7Bdi15kh84Ml6shCnfLv/uuGOJ6fAc7bhptyYQN6I9zDx7/t2
HlmEtBYvb1/5S+RU9NkrT0SfepmchuYqti//6fcELUZX2V6ud3MKOR3i/sHh
um4ROQPzYdcnx1ViciYOtc4667dmkiVIZg2d3POHlJyF2tkDv3W9KCNL8Y17
kbezhyFnI7WsivVLr4Kcg+zhz8bubFXR88zFSf4w65K3OGhPLr5PanFy+Xrq
MlyWVOyRtZZQl6Et0rXpos1IPQ927YWhMcdm6nkwiv7kNn1tps7gh/Ql/4fh
FuoMOD8LcgIOMiNHe32lwscJdTksnZ/7u38M7fPhWnLOLJZsoZ4Pgf+1Iukj
E3UFrgaEt5noUuoKXJpzJBc46X6ZAkx5/ztn7DNQL8ATderj6YCOeiF0cR0r
ix2gXghBsuberZv0fzBKvHr+yJrmMQ11JYQTH12+l6imrkL1tvtsQb+SugrH
OcJDX5QWUlfDPnr2bkJaAXU1oq7wW68lKKhroKgf3GbLyKeuwbI5riSrTE69
CHU7F050H2CoF+GfuxFLyTN51ItxdDT3gU9O9hTDbD3jLXfJqGvBjhp6vBxP
9mjxitRT1tGeG3wfecCs6GFMJY9sA4wLauZXUw69r4C7IdLxbnN20FNA1Tvy
R4fPSWmvg+/L6Tf7Alm018FTYX1QayL36HDxU8m8vl9Cex22b9gxuD+czNPj
jcSNMeGNmbTXQzc4Mpszk0F7PVTpI4leK3lKjxumOLfzVjrtDTg2faH64Q6y
zYBdLf1/35kT096A0w2N86Nvk6cM+I5Xo3x9nRj/A7lvAWU=
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 39.7}, {0, 266.671761620316}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Omega]\"", TraditionalForm], 
       FormBox["\"|R|\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Times"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 39.7}, {0, 266.671761620316}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"NAD\"", "\"BPG\"", "\"ATP\"", "\"PYR\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontFamily -> "Times"], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontFamily", "\[Rule]", "\"Times\""}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.769089555872983*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 905},
WindowMargins->{{293, Automatic}, {46, Automatic}},
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->FrontEnd`FileName[{"Book"}, "Monograph.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 98390, 2255, 5280, "Input"],
Cell[CellGroupData[{
Cell[98973, 2279, 24559, 678, 1345, "Input"],
Cell[123535, 2959, 2764, 54, 319, "Output"],
Cell[126302, 3015, 2555, 49, 237, "Output"],
Cell[128860, 3066, 82108, 1462, 225, "Output"],
Cell[210971, 4530, 75370, 1348, 238, "Output"],
Cell[286344, 5880, 76835, 1374, 231, "Output"],
Cell[363182, 7256, 52032, 949, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415251, 8210, 28, 0, 26, "Subsubsubsection"],
Cell[CellGroupData[{
Cell[415304, 8214, 8795, 242, 539, "Input"],
Cell[424102, 8458, 194766, 3249, 221, 140495, 2358, "CachedBoxData", \
"BoxData", "Output"],
Cell[618871, 11709, 47956, 860, 241, "Output"],
Cell[666830, 12571, 59215, 1059, 234, "Output"],
Cell[726048, 13632, 58367, 1044, 234, "Output"],
Cell[784418, 14678, 56350, 1012, 234, "Output"],
Cell[840771, 15692, 37233, 671, 234, "Output"]
}, Open  ]],
Cell[878019, 16366, 14998, 367, 1124, "Input"],
Cell[CellGroupData[{
Cell[893042, 16737, 2297, 52, 141, "Input"],
Cell[895342, 16791, 509, 7, 61, "Output"],
Cell[895854, 16800, 8896, 224, 119, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[904787, 17029, 8796, 236, 444, "Input"],
Cell[913586, 17267, 8876, 229, 29, "Output"],
Cell[922465, 17498, 268094, 4201, 403, 184303, 2826, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1190596, 21704, 15856, 474, 889, "Input"],
Cell[1206455, 22180, 88455, 1567, 226, "Output"],
Cell[1294913, 23749, 88294, 1565, 231, "Output"],
Cell[1383210, 25316, 88667, 1571, 231, "Output"],
Cell[1471880, 26889, 71804, 1275, 226, "Output"]
}, Open  ]],
Cell[1543699, 28167, 12741, 316, 784, "Input"],
Cell[CellGroupData[{
Cell[1556465, 28487, 21098, 588, 1050, "Input"],
Cell[1577566, 29077, 91757, 1800, 226, "Output"],
Cell[1669326, 30879, 33325, 665, 243, "Output"],
Cell[1702654, 31546, 28601, 572, 243, "Output"],
Cell[1731258, 32120, 28737, 574, 243, "Output"],
Cell[1759998, 32696, 33304, 665, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1793339, 33366, 3873, 106, 205, "Input"],
Cell[1797215, 33474, 35801, 706, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1833053, 34185, 6969, 199, 269, "Input"],
Cell[1840025, 34386, 35784, 711, 248, "Output"],
Cell[1875812, 35099, 25178, 502, 248, "Output"],
Cell[1900993, 35603, 30547, 608, 252, "Output"],
Cell[1931543, 36213, 25169, 502, 248, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

